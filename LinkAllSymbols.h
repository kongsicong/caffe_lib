#ifndef LINK_ALL_SYMBOLS_H_
#define LINK_ALL_SYMBOLS_H_
// Generated by GenLinkerSymbols.py. Do not modify! 

#pragma comment(linker, "/include:??_C@_0BD@ENMLJOIC@bottom?5blob?5input?4?$AA@")
#pragma comment(linker, "/include:?has_lr_mult@ParamSpec@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$?0V?$SplitLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$SplitLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?kLocalSizeFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$Net@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$InnerProductLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$_Unchecked@PAV?$vector@_NV?$allocator@_N@std@@@std@@@std@@YAPAV?$vector@_NV?$allocator@_N@std@@@0@PAV10@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$SoftmaxWithLossLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?has_crop_size@TransformationParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?swap@?$shared_ptr@V?$EltwiseLayer@M@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:??$_Move@AAPAVDataParameter@caffe@@@std@@YA$$QAPAVDataParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??$make_pair@AAMAAH@std@@YA?AU?$pair@MH@0@AAMAAH@Z")
#pragma comment(linker, "/include:?DataParameter_DB_IsValid@caffe@@YA_NH@Z")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$shared_ptr@V?$Net@M@caffe@@@boost@@PAV12@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@V12@@std@@YAPAV?$shared_ptr@V?$Net@M@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$SigmoidLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?det_crop_mode@V0LayerParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?log@@YAMM@Z")
#pragma comment(linker, "/include:??$Own@VFillerParameter@caffe@@@Arena@protobuf@google@@QAEXPAVFillerParameter@caffe@@@Z")
#pragma comment(linker, "/include:??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:__CTA6?AV?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8")
#pragma comment(linker, "/include:?ByteSize@ThresholdParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R3?$UniformFiller@M@caffe@@8")
#pragma comment(linker, "/include:?MergeFrom@NetState@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??A?$vector@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@QBEABV?$shared_ptr@V?$Layer@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$PowerLayer@N@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@V?$PowerLayer@N@caffe@@@1@PAV?$PowerLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??$swap@PAVArgMaxParameter@caffe@@@std@@YAXAAPAVArgMaxParameter@caffe@@0@Z")
#pragma comment(linker, "/include:?kBoolSize@WireFormatLite@internal@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_C@_0M@OEFNEAEI@caffe?4proto?$AA@")
#pragma comment(linker, "/include:??$?0V?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@@shared_count@detail@boost@@QAE@PAV?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@2@@Z")
#pragma comment(linker, "/include:?reverse_dimensions@?$ConvolutionLayer@N@caffe@@MAE_NXZ")
#pragma comment(linker, "/include:?has_stride@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??0?$shared_ptr@VCaffe@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?source@V0LayerParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?kBlobsFieldNumber@BlobProtoVector@caffe@@2HB")
#pragma comment(linker, "/include:?kSoftmaxParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_7bad_alloc_@exception_detail@boost@@6Bbad_alloc@std@@@")
#pragma comment(linker, "/include:?value@?$max_pow2_less@$0EA@$03@detail@boost@@2HB")
#pragma comment(linker, "/include:??0NetStateRule@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?mutable_accuracy_param@V1LayerParameter@caffe@@QAEPAVAccuracyParameter@2@XZ")
#pragma comment(linker, "/include:??_GReductionParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$EuclideanLossLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_E?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@$4PPPPPPPM@CI@AEPAXI@Z")
#pragma comment(linker, "/include:?kMethodFieldNumber@ServiceDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?set_coeff@ReductionParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??$construct@V?$vector@HV?$allocator@H@std@@@std@@V12@@?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@QAEXPAV?$vector@HV?$allocator@H@std@@@1@$$QAV21@@Z")
#pragma comment(linker, "/include:?offset@?$Blob@I@caffe@@QBEHHHHH@Z")
#pragma comment(linker, "/include:??_R4Timer@caffe@@6B@")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$DataTransformer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?name@_Iostream_error_category@std@@UBEPBDXZ")
#pragma comment(linker, "/include:??$_Val_type@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z")
#pragma comment(linker, "/include:??1?$AbsValLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??1_Iostream_error_category@std@@UAE@XZ")
#pragma comment(linker, "/include:??_R4?$thread_data@V?$bind_t@XV?$mf0@XVInternalThread@caffe@@@_mfi@boost@@V?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@3@@_bi@boost@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?Reshape@?$LRNLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?mutable_file_name@HDF5OutputParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??_7?$PoolingLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??$Check_GEImpl@HI@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABHABIPBD@Z")
#pragma comment(linker, "/include:??_7?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:?kMeanFieldNumber@FillerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVPReLUParameter@caffe@@@internal@protobuf@google@@YAPBVPReLUParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R3_System_error_category@std@@8")
#pragma comment(linker, "/include:??_R4?$Layer@M@caffe@@6B@")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$ConcatLayer@M@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?Clear@?$RepeatedField@I@protobuf@google@@QAEXXZ")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@1@@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVEltwiseParameter@caffe@@@internal@protobuf@google@@YAPBVEltwiseParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:__CT??_R0?AVclone_base@exception_detail@boost@@@8??0clone_base@exception_detail@boost@@QAE@ABV012@@Z40644")
#pragma comment(linker, "/include:?NetParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??$_Copy_backward@PAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@PAU1234@@std@@YAPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@PAU1234@00@Z")
#pragma comment(linker, "/include:?det_context_pad@V0LayerParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?value@?$sign_wknd@_J$0JIJGIA@@aux@mpl@boost@@2_JB")
#pragma comment(linker, "/include:?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:?size@?$vector@V?$shared_ptr@V?$Net@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?_Grow_to@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@IBEII@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$FlattenLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_C@_0CE@BGGAKJGL@top_shape?$FLj?$FN?5?$DN?$DN?5bottom?$FLi?$FN?9?$DOshape@")
#pragma comment(linker, "/include:??_R0?AVImageDataParameter@caffe@@@8")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@VRNG@Caffe@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?resize@?$vector@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@QAEXI@Z")
#pragma comment(linker, "/include:?set_has_force_gray@TransformationParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??A?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@QAEAAV?$vector@_NV?$allocator@_N@std@@@1@I@Z")
#pragma comment(linker, "/include:??0?$ImageDataLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?ARGMAX@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??_R4?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$ReshapeLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$ExpLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??$?0V?$Net@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$Net@N@caffe@@@Z")
#pragma comment(linker, "/include:??0?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bbad_year@gregorian@2@@")
#pragma comment(linker, "/include:??_R4?$EltwiseLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??$forward@V?$tuple@$$QAH@std@@@std@@YA$$QAV?$tuple@$$QAH@0@AAV10@@Z")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@NH@std@@V?$allocator@U?$pair@NH@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@NH@std@@@1@@Z")
#pragma comment(linker, "/include:?Swap@WindowDataParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??_C@_0O@LAPOEBII@datum_num?5?$DO?50?$AA@")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$MemoryDataLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??0?$BasePrefetchingDataLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$cast@VTypeHandler@?$RepeatedPtrField@VLayerParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@CAPAVLayerParameter@caffe@@PAX@Z")
#pragma comment(linker, "/include:?kSliceDimFieldNumber@SliceParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_E?$ImageDataLayer@N@caffe@@WBJE@AEPAXI@Z")
#pragma comment(linker, "/include:?Reshape@?$BaseDataLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?Add@?$RepeatedPtrField@VBlobShape@caffe@@@protobuf@google@@QAEPAVBlobShape@caffe@@XZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@VCaffe@caffe@@@detail@boost@@QAE@PAVCaffe@caffe@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$ReshapeLayer@M@caffe@@8")
#pragma comment(linker, "/include:??0?$BaseDataLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??$forward@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@YA$$QAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@AAU1234@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$ConcatLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?has_train_net@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?set_cpu_data@?$Blob@M@caffe@@QAEXPAM@Z")
#pragma comment(linker, "/include:?stage_size@NetState@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?Step@?$Solver@N@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$ExpLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??_G?$shared_ptr@V?$Net@N@caffe@@@boost@@QAEPAXI@Z")
#pragma comment(linker, "/include:??$_Umove@PAN@?$vector@NV?$allocator@N@std@@@std@@IAEPANPAN00@Z")
#pragma comment(linker, "/include:?value@integral_c_tag@mpl@boost@@2HB")
#pragma comment(linker, "/include:?kTopKFieldNumber@AccuracyParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$MVNLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?has_axis@FlattenParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?has_power@PowerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?SPPParameter_Engine_descriptor_@?A0x5e4fc710@caffe@@3PBVEnumDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$FilterLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAE@ABV?$allocator@M@1@@Z")
#pragma comment(linker, "/include:?set_has_rand_skip@DataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?kAlphaFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@NetParameter@caffe@@8")
#pragma comment(linker, "/include:??_C@_0BA@MHECFMAD@num_output_?5?$DO?50?$AA@")
#pragma comment(linker, "/include:??$?6V?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@Uthrow_line_@2@H@boost@@YAABV?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@0@ABV120@ABV?$error_info@Uthrow_line_@boost@@H@0@@Z")
#pragma comment(linker, "/include:??$?0VCaffe@caffe@@@shared_count@detail@boost@@QAE@PAVCaffe@caffe@@@Z")
#pragma comment(linker, "/include:?kBlobsLrFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$DataTransformer@N@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@V?$DataTransformer@N@caffe@@@1@PAV?$DataTransformer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_C@_07FOIKENOC@flatten?$AA@")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@std@@@std@@YAXPAV?$vector@HV?$allocator@H@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?transform_param@LayerParameter@caffe@@QBEABVTransformationParameter@2@XZ")
#pragma comment(linker, "/include:??_C@_0BO@KEIACCNI@this?9?$DOblobs_?$FL0?$FN?9?$DOcount?$CI?$CJ?5?$DN?$DN?51?$AA@")
#pragma comment(linker, "/include:?resize@?$vector@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@QAEXI@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VNetParameter@caffe@@@std@@@std@@@std@@YAXPAVNetParameter@caffe@@0AAU?$_Wrap_alloc@V?$allocator@VNetParameter@caffe@@@std@@@0@@Z")
#pragma comment(linker, "/include:?mutable_source@DataParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?float_data@Datum@caffe@@QBEMH@Z")
#pragma comment(linker, "/include:?pcount@?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@QBEIXZ")
#pragma comment(linker, "/include:__real@7fefffffffffffff")
#pragma comment(linker, "/include:?construct@?$allocator@VNetParameter@caffe@@@std@@QAEXPAVNetParameter@caffe@@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$HingeLossLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?SharedDtor@NetStateRule@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?set_num@BlobProto@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:??$_Buynode_if_nil@AAU?$pair@$$CBHH@std@@@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@1@PAU21@AAU?$pair@$$CBHH@1@@Z")
#pragma comment(linker, "/include:??1?$RepeatedPtrField@VLayerParameter@caffe@@@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:??$_Rechecked@PA_JPA_J@std@@YAAAPA_JAAPA_JPA_J@Z")
#pragma comment(linker, "/include:?kPoolingParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?Forward_gpu@?$InnerProductLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_C@_0M@MJKPAPEN@Layer?5type?5?$AA@")
#pragma comment(linker, "/include:??_7?$Solver@M@caffe@@6B@")
#pragma comment(linker, "/include:??_C@_0DB@GCIOCMFP@?8test_nets_?$FLtest_net_id?$FN?4get?$CI?$CJ?8?5@")
#pragma comment(linker, "/include:??A?$map@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@@std@@QAEAAMABU?$pair@HH@1@@Z")
#pragma comment(linker, "/include:??$ReadPackedPrimitiveNoInline@M$01@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAV?$RepeatedField@M@23@@Z")
#pragma comment(linker, "/include:?rand_skip@V0LayerParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??_R0?AV?$NeuronLayer@N@caffe@@@8")
#pragma comment(linker, "/include:?kPhaseFieldNumber@NetStateRule@caffe@@2HB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$Net@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??0?$Im2colLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?Reshape@?$Blob@I@caffe@@QAEXABVBlobShape@2@@Z")
#pragma comment(linker, "/include:??_R2?$EltwiseLayer@M@caffe@@8")
#pragma comment(linker, "/include:?clear_mirror@ImageDataParameter@caffe@@QAEXXZ")
#pragma comment(linker, "/include:?has_new_height@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?size@?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?gamma@SolverParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:??0ExpParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VBlobProto@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVBlobProto@caffe@@PAE@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$WindowDataLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAIPAIU?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@YAPAIPAI00AAU?$_Wrap_alloc@V?$allocator@I@std@@@0@@Z")
#pragma comment(linker, "/include:?set_crop_mode@WindowDataParameter@caffe@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?param_owners@?$Net@M@caffe@@QBEABV?$vector@HV?$allocator@H@std@@@std@@XZ")
#pragma comment(linker, "/include:?JS_NORMAL@FieldOptions@protobuf@google@@2W4FieldOptions_JSType@23@B")
#pragma comment(linker, "/include:??$destroy@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@1@PAU?$pair@QBXUtss_data_node@detail@boost@@@1@@Z")
#pragma comment(linker, "/include:??$_Allocate@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@IPAV12@@Z")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@2@@std@@YAPAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?kConcatDimFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$checked_delete@V?$Blob@M@caffe@@@boost@@YAXPAV?$Blob@M@caffe@@@Z")
#pragma comment(linker, "/include:?default_instance@SPPParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@Datum@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?seed@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@QAEXABI@Z")
#pragma comment(linker, "/include:??1?$_Tree_buy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?Forward_cpu@?$BasePrefetchingDataLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$_Move@AAPAURep@?$RepeatedField@_N@protobuf@google@@@std@@YA$$QAPAURep@?$RepeatedField@_N@protobuf@google@@AAPAU1234@@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$LogLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?set_has_mirror@DataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?ShareDiff@?$Blob@H@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV12@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z")
#pragma comment(linker, "/include:?MergeFrom@ThresholdParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??1?$ImageDataLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$addressof@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@YAPAU?$pair@$$CBU?$pair@HH@std@@H@0@AAU10@@Z")
#pragma comment(linker, "/include:??_G?$SilenceLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?set_has_weight_filler@ConvolutionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$WindowDataLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?_Freenode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_C@_05KAHKAFCL@?5has?5?$AA@")
#pragma comment(linker, "/include:??_G?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@QAEPAXI@Z")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@1@@Z")
#pragma comment(linker, "/include:?SetCachedSize@NetState@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:??A?$vector@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@QAEAAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@1@I@Z")
#pragma comment(linker, "/include:??$_Fill_n@PAMIM@std@@YAPAMPAMIABM@Z")
#pragma comment(linker, "/include:?_Lmost@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??$forward@AAPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@0@AAPAU10@@Z")
#pragma comment(linker, "/include:?FromProto@?$Blob@I@caffe@@QAEXABVBlobProto@2@_N@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$AbsValLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$MemoryDataLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??1?$basic_format@DU?$char_traits@D@std@@V?$allocator@D@2@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?Forward_cpu@?$MemoryDataLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?PoolingParameter_Engine_descriptor@caffe@@YAPBVEnumDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??0?$PoolingLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??_R3?$InfogainLossLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_R0?AV?$ConstantFiller@M@caffe@@@8")
#pragma comment(linker, "/include:??_C@_0BA@BNHGNLFH@?$CJ?5specified?5by?5?$AA@")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$ImageDataLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_R0?AVClosure@protobuf@google@@@8")
#pragma comment(linker, "/include:?IsInitialized@LossParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$SliceLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?ForwardBackward@?$Net@N@caffe@@QAENABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@Z")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PAUbad_month@gregorian@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$EltwiseLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@VDB@db@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??0?$bernoulli_distribution@M@random@boost@@QAE@ABM@Z")
#pragma comment(linker, "/include:?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@QBEXABV12@@Z")
#pragma comment(linker, "/include:??$group_head@U?$_Smanip@_J@std@@ABN@detail@io@boost@@YA?AU?$group1@U?$_Smanip@_J@std@@@012@ABU?$group2@U?$_Smanip@_J@std@@ABN@012@@Z")
#pragma comment(linker, "/include:??_R3NetState@caffe@@8")
#pragma comment(linker, "/include:??0?$Size_@H@cv@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?get@?$shared_ptr@V?$Net@M@caffe@@@boost@@QBEPAV?$Net@M@caffe@@XZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$LRNLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVImageDataParameter@caffe@@@internal@protobuf@google@@YAPBVImageDataParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?AllowForceBackward@?$ContrastiveLossLayer@M@caffe@@UBE_NH@Z")
#pragma comment(linker, "/include:?gcd_d1_d2@?$ratio_divide@V?$ratio@$00$0JIJGIA@@boost@@V?$ratio@$00$0DOI@@2@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$EuclideanLossLayer@M@caffe@@8")
#pragma comment(linker, "/include:??$get_static_exception_object@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@YA?AVexception_ptr@1@XZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$Im2colLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??_GDatum@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$EuclideanLossLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?value@?$alignment_of_impl@J@detail@boost@@2IB")
#pragma comment(linker, "/include:?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z")
#pragma comment(linker, "/include:??$_Partial_sort@PAU?$pair@NH@std@@U12@U?$greater@U?$pair@NH@std@@@2@@std@@YAXPAU?$pair@NH@0@00U?$greater@U?$pair@NH@std@@@0@0@Z")
#pragma comment(linker, "/include:?_Lrotate@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@@Z")
#pragma comment(linker, "/include:__TI8?AV?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:?is_bounded@_Num_float_base@std@@2_NB")
#pragma comment(linker, "/include:?Fill@?$MSRAFiller@M@caffe@@UAEXPAV?$Blob@M@2@@Z")
#pragma comment(linker, "/include:?CopyFrom@MVNParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$_Move@AAPAVGenerator@RNG@Caffe@caffe@@@std@@YA$$QAPAVGenerator@RNG@Caffe@caffe@@AAPAV1234@@Z")
#pragma comment(linker, "/include:??1?$Blob@H@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VSPPParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVSPPParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:??0?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@AAE@ABV012@Uclone_tag@012@@Z")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??0format_error@io@boost@@QAE@XZ")
#pragma comment(linker, "/include:??7?$shared_ptr@VRNG@Caffe@caffe@@@boost@@QBE_NXZ")
#pragma comment(linker, "/include:?top_size@V1LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?Backward_gpu@?$InnerProductLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?_Root@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??_R0?AV?$InfogainLossLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VSoftmaxParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVSoftmaxParameter@caffe@@@Z")
#pragma comment(linker, "/include:?det_fg_threshold@V0LayerParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?value@?$ice_eq@$0BI@$00@type_traits@boost@@2_NB")
#pragma comment(linker, "/include:??4?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@QAEAAU0123@ABU0123@@Z")
#pragma comment(linker, "/include:??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??B?$shared_ptr@VLayerParameter@caffe@@@boost@@QBE_NXZ")
#pragma comment(linker, "/include:??_R2?$ReductionLayer@M@caffe@@8")
#pragma comment(linker, "/include:??$_Rechecked@PAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@PAV12@@std@@YAAAPAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@AAPAV12@PAV12@@Z")
#pragma comment(linker, "/include:??4?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAEAAV01@$$QAV01@@Z")
#pragma comment(linker, "/include:??$?0V?$LRNLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$LRNLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?Fill@?$PositiveUnitballFiller@N@caffe@@UAEXPAV?$Blob@N@2@@Z")
#pragma comment(linker, "/include:??_C@_0CC@GLOGDMME@img_height?5?$DN?$DN?5data_mean_?4height?$CI@")
#pragma comment(linker, "/include:?kAccuracyParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?value@?$is_unsigned_imp@H@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_C@_0FB@HLGCAAJA@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?type@?$ImageDataLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?New@Datum@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:?kTypeFieldNumber@FillerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?kNetParamFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$Own@VLogParameter@caffe@@@Arena@protobuf@google@@QAEXPAVLogParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0DJ@EMNCPLHM@Specify?5either?5include?5rules?5or?5@")
#pragma comment(linker, "/include:?den@?$ratio@$0CHBA@$00@boost@@2_JB")
#pragma comment(linker, "/include:?gcd_n1_n2@?$is_evenly_divisible_by@V?$ratio@$00$0DOI@@boost@@V?$ratio@$00$0DLJKMKAA@@2@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:?Swap@ConvolutionParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??_7?$NesterovSolver@M@caffe@@6B@")
#pragma comment(linker, "/include:?New@PowerParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?type@?$SoftmaxLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VPythonParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVPythonParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?denorm_min@?$numeric_limits@N@std@@SANXZ")
#pragma comment(linker, "/include:?InitRand@?$DataTransformer@N@caffe@@QAEXXZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$ContrastiveLossLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?_Lbound@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@ABU?$pair@HH@2@@Z")
#pragma comment(linker, "/include:?CopyFrom@BlobProto@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?InitAsDefaultInstance@AccuracyParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?gInstantiationGuardExpLayer@caffe@@3DA")
#pragma comment(linker, "/include:?InternalSwap@?$RepeatedField@_J@protobuf@google@@AAEXPAV123@@Z")
#pragma comment(linker, "/include:??_R3?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??$checked_delete@V?$DropoutLayer@M@caffe@@@boost@@YAXPAV?$DropoutLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?loss_weight_size@LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?kDefaultValueFieldNumber@FieldDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?is_special@?$counted_time_rep@Vmillisec_posix_time_system_config@posix_time@boost@@@date_time@boost@@QBE_NXZ")
#pragma comment(linker, "/include:??_R4?$Solver@N@caffe@@6B@")
#pragma comment(linker, "/include:?_Myval@?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:??_C@_0CA@DEGJLJEF@?5top?5k?5must?5not?5be?5less?5than?51?4?$AA@")
#pragma comment(linker, "/include:?set_has_new_height@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$swap@PAVEltwiseParameter@caffe@@@std@@YAXAAPAVEltwiseParameter@caffe@@0@Z")
#pragma comment(linker, "/include:?end@?$_Tree@V?$_Tmap_traits@PBXUtss_data_node@detail@boost@@U?$less@PBX@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??$copy_backward@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z")
#pragma comment(linker, "/include:?cpu_diff@?$Blob@M@caffe@@QBEPBMXZ")
#pragma comment(linker, "/include:??$Clear@VTypeHandler@?$RepeatedPtrField@VV1LayerParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXXZ")
#pragma comment(linker, "/include:?from_special@?$int_adapter@_J@date_time@boost@@SA?AV123@W4special_values@23@@Z")
#pragma comment(linker, "/include:??$_Uninitialized_default_fill_n@PAMIU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAMIAAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z")
#pragma comment(linker, "/include:??_C@_0EF@EODKEGKC@Check?5failed?3?5this?9?$DOlayer_param_@")
#pragma comment(linker, "/include:?_Reserve@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??$_Rechecked@PAPAV?$FlattenLayer@M@caffe@@PAPAV12@@std@@YAAAPAPAV?$FlattenLayer@M@caffe@@AAPAPAV12@PAPAV12@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$ReductionLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?NetNeedsUpgrade@caffe@@YA_NABVNetParameter@1@@Z")
#pragma comment(linker, "/include:??$swap@PAVTransformationParameter@caffe@@@std@@YAXAAPAVTransformationParameter@caffe@@0@Z")
#pragma comment(linker, "/include:??_R4ReshapeParameter@caffe@@6B@")
#pragma comment(linker, "/include:??_C@_0CN@OPMDEAFM@Unknown?5parameter?5new_height?5for@")
#pragma comment(linker, "/include:?mutable_input_dim@NetParameter@caffe@@QAEPAV?$RepeatedField@H@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$ArgMaxLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$ArgMaxLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?_Pop_back_n@?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@QAEXI@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$DropoutLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$Get@VTypeHandler@?$RepeatedPtrField@VLayerParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IBEABVLayerParameter@caffe@@H@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$InfogainLossLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??0?$bind_t@XV?$mf0@XVInternalThread@caffe@@@_mfi@boost@@V?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@3@@_bi@boost@@QAE@V?$mf0@XVInternalThread@caffe@@@_mfi@2@ABV?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@12@@Z")
#pragma comment(linker, "/include:??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QAE@PAIPBU_Container_base0@1@@Z")
#pragma comment(linker, "/include:??$_Copy_impl@PB_JPA_J@std@@YAPA_JPB_J0PA_J@Z")
#pragma comment(linker, "/include:??$_Allocate@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@YAPAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@0@IPAU10@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$PoolingLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@$$QAV01@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$SPPLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_7?$SGDSolver@M@caffe@@6B@")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@IBEXPAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:?_Construct_n@?$vector@IV?$allocator@_N@std@@@std@@QAEXIPBI@Z")
#pragma comment(linker, "/include:??_7?$XavierFiller@N@caffe@@6B@")
#pragma comment(linker, "/include:??$addressof@PAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@0@AAPAU10@@Z")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@AAPAU21@@Z")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0BH@EMPGDEPP@?5Layer?5takes?5at?5least?5?$AA@")
#pragma comment(linker, "/include:??$_Umove@PAU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@IAEPAU?$pair@HH@1@PAU21@00@Z")
#pragma comment(linker, "/include:?Reshape@?$LRNLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:?AppendParam@?$Net@N@caffe@@IAEXABVNetParameter@2@HH@Z")
#pragma comment(linker, "/include:??$_Val_type@PAU?$pair@NH@std@@@std@@YAPAU?$pair@NH@0@PAU10@@Z")
#pragma comment(linker, "/include:?ReadString@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@34@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?Engine_MIN@SPPParameter@caffe@@2W4SPPParameter_Engine@2@B")
#pragma comment(linker, "/include:??_C@_08FNEIIALD@Solving?5?$AA@")
#pragma comment(linker, "/include:?set_param_propagate_down@?$Layer@M@caffe@@QAEXH_N@Z")
#pragma comment(linker, "/include:??$?0VSyncedMemory@caffe@@@shared_count@detail@boost@@QAE@PAVSyncedMemory@caffe@@@Z")
#pragma comment(linker, "/include:?CopyFrom@SolverParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??_C@_0CF@PKPNOCEG@?5does?5not?5need?5backward?5computat@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$FilterLayer@N@caffe@@8")
#pragma comment(linker, "/include:?Forward_cpu@?$FilterLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?value@?$integral_c@_J$0JIJGIA@@mpl@boost@@2_JB")
#pragma comment(linker, "/include:??E?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$DeconvolutionLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$LogLayer@N@caffe@@@detail@boost@@QAE@PAV?$LogLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?type@?$SliceLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??_R2?$DeconvolutionLayer@N@caffe@@8")
#pragma comment(linker, "/include:?gpu_data@SyncedMemory@caffe@@QAEPBXXZ")
#pragma comment(linker, "/include:?ByteSize@TanHParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?set_has_shuffle_images@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Uninitialized_default_fill_n@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@2@@std@@YAXPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?size@?$vector@PAV?$FlattenLayer@M@caffe@@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?value@?$is_volatile_rval_filter@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?Forward_cpu@?$PoolingLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?do_init@init@?$min_shift_initializer@N@detail@math@boost@@SAXXZ")
#pragma comment(linker, "/include:??$Get@VTypeHandler@?$RepeatedPtrField@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$DeconvolutionLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?mutable_convolution_param@V1LayerParameter@caffe@@QAEPAVConvolutionParameter@2@XZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$ExpLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?_Key@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@IBEABHPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?kChannelSharedFieldNumber@PReLUParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$_Uninitialized_default_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?GetMetadata@TransformationParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?params_lr@?$Net@N@caffe@@QBEABV?$vector@MV?$allocator@M@std@@@std@@XZ")
#pragma comment(linker, "/include:?swap@?$shared_ptr@V?$DataTransformer@M@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:?Add@?$RepeatedPtrField@VLayerParameter@caffe@@@protobuf@google@@QAEPAVLayerParameter@caffe@@XZ")
#pragma comment(linker, "/include:??_C@_0BJ@NIMMMBDI@Input?5must?5have?54?5axes?0?5?$AA@")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:??_C@_0CD@FBNLMBFL@Month?5number?5is?5out?5of?5range?51?4?4@")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?set_has_concat_dim@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?_Erase@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?set_shift@ExpParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$DropoutLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?has_prelu_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?New@ParamSpec@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??0Datum@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??$generate_uniform_int@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@I@detail@rand@boost@@YAIAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@IIU?$bool_@$00@mpl@2@@Z")
#pragma comment(linker, "/include:?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VHDF5DataParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVHDF5DataParameter@caffe@@@Z")
#pragma comment(linker, "/include:?CopyFrom@HingeLossParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_E?$DataLayer@M@caffe@@WBJE@AEPAXI@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$LRNLayer@M@caffe@@@detail@boost@@QAE@PAV?$LRNLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$_Allocate@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@YAPAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@IPAPAV10@@Z")
#pragma comment(linker, "/include:??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@std@@QAE?AV01@H@Z")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@M@std@@@std@@SAIABV?$allocator@M@2@@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$PowerLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$construct@U?$pair@NH@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@NH@std@@@std@@@std@@QAEXPAU?$pair@NH@1@$$QAU21@@Z")
#pragma comment(linker, "/include:?_Xlen@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@IBEXXZ")
#pragma comment(linker, "/include:??_R4?$ArgMaxLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$SliceLayer@M@caffe@@8")
#pragma comment(linker, "/include:?default_instance_@LRNParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVSoftmaxParameter@caffe@@@internal@protobuf@google@@YAPBVSoftmaxParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:??$_Allocate@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@YAPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@0@IPAU10@@Z")
#pragma comment(linker, "/include:??_C@_05LCNEBAIE@PReLU?$AA@")
#pragma comment(linker, "/include:?ExpectAtEnd@CodedInputStream@io@protobuf@google@@QAE_NXZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$Net@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?swap@?$shared_ptr@V?$Net@N@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:??0?$date@V0gregorian@boost@@Vgregorian_calendar@12@Vdate_duration@12@@date_time@boost@@QAE@Vgreg_year@gregorian@2@Vgreg_month@42@Vgreg_day@42@@Z")
#pragma comment(linker, "/include:??_R4?$LossLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?size@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$Own@VPReLUParameter@caffe@@@Arena@protobuf@google@@QAEXPAVPReLUParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$InfogainLossLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?width@MemoryDataParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?has_inner_product_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_07GEOEEIOE@Eltwise?$AA@")
#pragma comment(linker, "/include:?kTypeNameFieldNumber@FieldDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?InitAsDefaultInstance@InnerProductParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?crop_size@ImageDataParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??_C@_01CLKCMJKC@?5?$AA@")
#pragma comment(linker, "/include:??_7TransformationParameter@caffe@@6B@")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VReLUParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVReLUParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?kDataParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$Get@VTypeHandler@?$RepeatedPtrField@VNetParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IBEABVNetParameter@caffe@@H@Z")
#pragma comment(linker, "/include:??_GTimer@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@@std@@YAPAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:?descriptor@V0LayerParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?_Lbound@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:?add_weight_decay@V1LayerParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$DropoutLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$DropoutLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_7BlobProto@caffe@@6B@")
#pragma comment(linker, "/include:?default_instance_@PoolingParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??_C@_0EA@MCJCJKAJ@loss_weight?5must?5be?5unspecified?5@")
#pragma comment(linker, "/include:?ByteSize@HDF5OutputParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?ReshapeParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?output_blobs@?$Net@M@caffe@@QBEABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@XZ")
#pragma comment(linker, "/include:??$?0V?$LRNLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$LRNLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$_Move@AAPAVNetState@caffe@@@std@@YA$$QAPAVNetState@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?value@?$abs_wknd@_J$0GE@@aux@mpl@boost@@2_JB")
#pragma comment(linker, "/include:?New@DummyDataParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?size@?$RepeatedPtrField@VNetStateRule@caffe@@@protobuf@google@@QBEHXZ")
#pragma comment(linker, "/include:?mutable_type@LayerParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??_R3exception@std@@8")
#pragma comment(linker, "/include:?shape_string@?$Blob@I@caffe@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?set_has_height@MemoryDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$feed@DU?$char_traits@D@std@@V?$allocator@D@2@ABU?$group1@U?$group2@U?$_Smanip@_J@std@@ABM@detail@io@boost@@@detail@io@boost@@@detail@io@boost@@YAAAV?$basic_format@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AAV32@ABU?$group1@U?$group2@U?$_Smanip@_J@std@@ABM@detail@io@boost@@@012@@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VImageDataParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVImageDataParameter@caffe@@@Z")
#pragma comment(linker, "/include:??$swap@PAVInfogainLossParameter@caffe@@@std@@YAXAAPAVInfogainLossParameter@caffe@@0@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$ImageDataLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?VerifyUTF8StringNamedField@WireFormat@internal@protobuf@google@@SAXPBDHW4Operation@1234@0@Z")
#pragma comment(linker, "/include:??_R0?AVSolverState@caffe@@@8")
#pragma comment(linker, "/include:?min@?$br_mul@$00$0GE@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$AccuracyLayer@M@caffe@@@detail@boost@@QAE@PAV?$AccuracyLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@MVNParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?TYPE_FLOAT@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Type@23@B")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@SAIABV?$allocator@PAV?$Blob@N@caffe@@@2@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$LogLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$LogLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?_Assign_rv@?$vector@MV?$allocator@M@std@@@std@@QAEX$$QAV12@@Z")
#pragma comment(linker, "/include:??0bad_format_string@io@boost@@QAE@ABV012@@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$AbsValLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?_Grow_to@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@IBEII@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$ContrastiveLossLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_R0?AVMVNParameter@caffe@@@8")
#pragma comment(linker, "/include:?has_pool@SPPParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$vExp@M@@YAXHPBMPAM@Z")
#pragma comment(linker, "/include:?has_pad@ConvolutionParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$SplitLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VLogParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVLogParameter@caffe@@@Z")
#pragma comment(linker, "/include:??1?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??$GetFiller@M@caffe@@YAPAV?$Filler@M@0@ABVFillerParameter@0@@Z")
#pragma comment(linker, "/include:??_R4?$InnerProductLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??_R2InfogainLossParameter@caffe@@8")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??1?$_Tree_alloc@$0A@U?$_Tree_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$?0V?$PReLULayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$PReLULayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0BL@DAEGJELM@the?5specified?5dimensions?5?$CI?$AA@")
#pragma comment(linker, "/include:??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?SigmoidParameter_Engine_descriptor@caffe@@YAPBVEnumDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?NormRegion_ARRAYSIZE@LRNParameter@caffe@@2HB")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@@std@@QAEPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@2@I@Z")
#pragma comment(linker, "/include:?reset@?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@QAEXD@Z")
#pragma comment(linker, "/include:??1?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?set_cropsize@V0LayerParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$FlattenLayer@N@caffe@@@detail@boost@@QAE@PAV?$FlattenLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?has_norm@HingeLossParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?ByteSize@TransformationParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?round_style@_Num_base@std@@2W4float_round_style@2@B")
#pragma comment(linker, "/include:??$checked_delete@V?$MultinomialLogisticLossLayer@M@caffe@@@boost@@YAXPAV?$MultinomialLogisticLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?Forward@?$Layer@M@caffe@@QAEMABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$construct@PAV?$Blob@M@caffe@@ABQAV12@@?$_Wrap_alloc@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@QAEXPAPAV?$Blob@M@caffe@@ABQAV23@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$HingeLossLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$move@AAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??_C@_0FK@KBINBBDL@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??_R4?$Solver@M@caffe@@6B@")
#pragma comment(linker, "/include:?batch_size@?$MemoryDataLayer@M@caffe@@QAEHXZ")
#pragma comment(linker, "/include:??_C@_0BP@DNMCDAML@Check?5failed?3?5datum?4encoded?$CI?$CJ?5?$AA@")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXPAD0AAU?$_Wrap_alloc@V?$allocator@D@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??1?$Layer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??_C@_0DF@KEJMFFNH@Specify?5either?51?5mean_value?5or?5a@")
#pragma comment(linker, "/include:??$float_prior_imp@MU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@math@boost@@@detail@math@boost@@YAMABMABU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@12@@Z")
#pragma comment(linker, "/include:?GetCachedSize@ArgMaxParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?max_size@?$vector@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?_Destroy_if_not_nil@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXU_Nil@2@@Z")
#pragma comment(linker, "/include:??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QBEABMXZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@VSyncedMemory@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z")
#pragma comment(linker, "/include:?value@?$ice_eq@$0BI@$07@type_traits@boost@@2_NB")
#pragma comment(linker, "/include:??$?0V?$TanHLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$TanHLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?AutoTopBlobs@?$Layer@N@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??_7?$SoftmaxWithLossLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?name@NetParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$AbsValLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_R4?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:?type@?$LRNLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?Delete@?$GenericTypeHandler@VNetState@caffe@@@internal@protobuf@google@@SAXPAVNetState@caffe@@PAVArena@34@@Z")
#pragma comment(linker, "/include:?set_local_size@LRNParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??$_Rechecked@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@PAU12@@std@@YAAAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@0@AAPAU10@PAU10@@Z")
#pragma comment(linker, "/include:?max_exponent@?$numeric_limits@O@std@@2HB")
#pragma comment(linker, "/include:?set_has_stride@ConvolutionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@QAEPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@QAEXPAPAV?$FlattenLayer@M@caffe@@I@Z")
#pragma comment(linker, "/include:??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8")
#pragma comment(linker, "/include:?_Lmost@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?is_signed@?$numeric_limits@_K@std@@2_NB")
#pragma comment(linker, "/include:??_R2FillerParameter@caffe@@8")
#pragma comment(linker, "/include:??_R3?$ImageDataLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??_C@_0BK@ICDGMKAD@num_output_?5?$CF?5group_?5?$DN?$DN?50?$AA@")
#pragma comment(linker, "/include:?set_has_normalize_variance@MVNParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_7PoolingParameter@caffe@@6B@")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$PoolingLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$ConvolutionLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?New@SPPParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_C@_07PIFMIADC@Silence?$AA@")
#pragma comment(linker, "/include:?MergeFrom@LogParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?ByteSize@ReLUParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$_Umove@PAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@@?$vector@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@IAEPAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@PAV23@00@Z")
#pragma comment(linker, "/include:?ConcatParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@2@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@PythonParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?New@SolverParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??_7?$DropoutLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@1@AAPAU31@@Z")
#pragma comment(linker, "/include:?forward_cpu_bias@?$BaseConvolutionLayer@N@caffe@@IAEXPANPBN@Z")
#pragma comment(linker, "/include:?allocate@?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@QAEPAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$LogLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$LogLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?set_pyramid_height@SPPParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@DataParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?GetCachedSize@SliceParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?_Tidy@?$vector@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:?ForwardFrom@?$Net@N@caffe@@QAENH@Z")
#pragma comment(linker, "/include:??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@NH@std@@@std@@@std@@@std@@QAE@PAU?$pair@NH@1@PBU_Container_base0@1@@Z")
#pragma comment(linker, "/include:?has_convolution_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$Creator_EuclideanLossLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$ConcatLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$_Ptr_cat@PAV?$FlattenLayer@M@caffe@@PAV12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAV?$FlattenLayer@M@caffe@@0@Z")
#pragma comment(linker, "/include:?SharedDtor@ExpParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$PReLULayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z")
#pragma comment(linker, "/include:?mutable_weight_filler@V0LayerParameter@caffe@@QAEPAVFillerParameter@2@XZ")
#pragma comment(linker, "/include:?has_crop_mode@WindowDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?ignore_label@AccuracyParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??0?$ConstantFiller@N@caffe@@QAE@ABVFillerParameter@1@@Z")
#pragma comment(linker, "/include:??1?$shared_ptr@Vthread@boost@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?set_engine@SigmoidParameter@caffe@@QAEXW4SigmoidParameter_Engine@2@@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$PowerLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?count@?$Blob@H@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??_C@_0CA@LHHPKNPN@source_layer?4bottom_size?$CI?$CJ?5?$DN?$DN?51?$AA@")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$LogLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?exponent@?$fp_traits_non_native@NUdouble_precision@detail@math@boost@@@detail@math@boost@@2_KB")
#pragma comment(linker, "/include:??_G?$LossLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R4?$SliceLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??1?$MVNLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?type@?$ConvolutionLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$PoolingLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??A?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@QAEAAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?has_bias_term@ConvolutionParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?Backward_gpu@?$ConvolutionLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?add_loss_weight@LayerParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?value@?$trait_impl@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@_JUdont_care@has_right_shift_impl@detail@boost@@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$make_pair@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAH@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAH@Z")
#pragma comment(linker, "/include:?output_u@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@2IB")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$PoolingLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??$construct@HH@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAEXPAH$$QAH@Z")
#pragma comment(linker, "/include:??_C@_0FG@JGCDJDEF@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??8error_condition@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:?WriteLittleEndian32ToArray@CodedOutputStream@io@protobuf@google@@SAPAEIPAE@Z")
#pragma comment(linker, "/include:?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??1?$intrusive_ptr@Uthread_data_base@detail@boost@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?SharedDtor@LossParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?kExtendeeFieldNumber@FieldDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@1@PAU?$pair@$$CBU?$pair@HH@std@@U12@@1@@Z")
#pragma comment(linker, "/include:?what@bad_format_string@io@boost@@UBEPBDXZ")
#pragma comment(linker, "/include:?set_has_share_mode@ParamSpec@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$ConcatLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$ConcatLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$SplitLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_7?$ImageDataLayer@M@caffe@@6BInternalThread@1@@")
#pragma comment(linker, "/include:?kHeightFieldNumber@MemoryDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?InitTestNets@?$Solver@N@caffe@@QAEXXZ")
#pragma comment(linker, "/include:??_R3?$ConcatLayer@N@caffe@@8")
#pragma comment(linker, "/include:??1?$vector@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?power@PowerParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?CopyFrom@BlobProtoVector@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$ThresholdLayer@M@caffe@@@boost@@YAXPAV?$ThresholdLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@1@AAPAU21@@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@YAXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?_Dec@?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:?kFirstReservedNumber@FieldDescriptor@protobuf@google@@2HB")
#pragma comment(linker, "/include:?kModuleFieldNumber@PythonParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$caffe_nextafter@N@caffe@@YANN@Z")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAMPAMU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAPAMPAM00AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z")
#pragma comment(linker, "/include:?set_data@Datum@caffe@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?InternalSwap@ConcatParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??0?$InnerProductLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?is_initialized@?$optional_base@Vlocale@std@@@optional_detail@boost@@QBE_NXZ")
#pragma comment(linker, "/include:?UnsafeArenaSwap@?$RepeatedField@M@protobuf@google@@QAEXPAV123@@Z")
#pragma comment(linker, "/include:??$vExp@N@@YAXHPBNPAN@Z")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@2@@std@@IBEXPAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@2@0@Z")
#pragma comment(linker, "/include:??_R0?AV?$BasePrefetchingDataLayer@M@caffe@@@8")
#pragma comment(linker, "/include:??_R0?AV?$DataLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$checked_delete@V?$ContrastiveLossLayer@N@caffe@@@boost@@YAXPAV?$ContrastiveLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?value@?$is_error_code_enum@H@system@boost@@2_NB")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@InfogainLossParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??0?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@QAE@$$QAV01@@Z")
#pragma comment(linker, "/include:??1_Generic_error_category@std@@UAE@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$FlattenLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?kStdFieldNumber@FillerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?set_has_beta@LRNParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_C@_0DE@DDIOHGJ@transform_param?5messages?5for?5tra@")
#pragma comment(linker, "/include:?pad_h@ConvolutionParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?dim_size@BlobShape@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_08KIKBIPLK@?$DL?5diff?3?5?$AA@")
#pragma comment(linker, "/include:?is_integral@?$integer_traits_base@_N$0A@$00@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$OwnInternal@VHDF5DataParameter@caffe@@@Arena@protobuf@google@@AAEXPAVHDF5DataParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?set_loss@?$Layer@M@caffe@@QAEXHM@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?digits10@?$numeric_limits@I@std@@2HB")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$ThresholdLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??$_Ptr_cat@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@0@0@Z")
#pragma comment(linker, "/include:?New@SoftmaxParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?_Xlen@?$vector@U?$pair@MH@std@@V?$allocator@U?$pair@MH@std@@@2@@std@@IBEXXZ")
#pragma comment(linker, "/include:??$Destroy@VTypeHandler@?$RepeatedPtrField@VV1LayerParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXXZ")
#pragma comment(linker, "/include:?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_C@_0DH@GMHKHNGP@With?5Global_pooling?3?5true?5Filter@")
#pragma comment(linker, "/include:??A?$vector@HV?$allocator@H@std@@@std@@QBEABHI@Z")
#pragma comment(linker, "/include:?set_variance_norm@FillerParameter@caffe@@QAEXW4FillerParameter_VarianceNorm@2@@Z")
#pragma comment(linker, "/include:??_7?$ConcatLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??$?0V?$tuple@ABU?$pair@HH@std@@@std@@V?$tuple@$$$V@1@$0A@$S@?$pair@$$CBU?$pair@HH@std@@U12@@std@@QAE@AAV?$tuple@ABU?$pair@HH@std@@@1@AAV?$tuple@$$$V@1@U?$_Arg_idx@$0A@@1@U?$_Arg_idx@$S@1@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$EuclideanLossLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?value@?$operator_returns_void@V?$basic_istream@DU?$char_traits@D@std@@@std@@F@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$CreateMaybeMessage@VNetStateRule@caffe@@@Arena@protobuf@google@@CAPAVNetStateRule@caffe@@PAV012@ZZ")
#pragma comment(linker, "/include:?clear@?$basic_format@DU?$char_traits@D@std@@V?$allocator@D@2@@boost@@QAEAAV12@XZ")
#pragma comment(linker, "/include:??_C@_0BN@POELLHLO@0?5?$DN?$DN?5this?9?$DOparam_?4momentum?$CI?$CJ?$AA@")
#pragma comment(linker, "/include:??_C@_09MPCIOOED@net_param?$AA@")
#pragma comment(linker, "/include:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12")
#pragma comment(linker, "/include:??1?$FlattenLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$_Rechecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YAAAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@AAV10@V10@@Z")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??_R2AccuracyParameter@caffe@@8")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@ArgMaxParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??$checked_delete@V?$FlattenLayer@M@caffe@@@boost@@YAXPAV?$FlattenLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?Get@?$RepeatedPtrField@VV1LayerParameter@caffe@@@protobuf@google@@QBEABVV1LayerParameter@caffe@@H@Z")
#pragma comment(linker, "/include:??_R3?$NeuronLayer@M@caffe@@8")
#pragma comment(linker, "/include:?default_instance_@HingeLossParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?set_has_inner_product_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?kNewHeightFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?set_has_norm@HingeLossParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??$MergeFrom@VTypeHandler@?$RepeatedPtrField@VFillerParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXABV0123@@Z")
#pragma comment(linker, "/include:?_Freeheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??0?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@QAE@ABVbad_format_string@io@2@@Z")
#pragma comment(linker, "/include:?set_has_mirror@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?LayerTypeList@?$LayerRegistry@N@caffe@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??$MergeFromInnerLoop@VTypeHandler@?$RepeatedPtrField@VNetParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@AAEXPAPAX0HH@Z")
#pragma comment(linker, "/include:??$_Rechecked@PAU?$pair@NH@std@@PAU12@@std@@YAAAPAU?$pair@NH@0@AAPAU10@PAU10@@Z")
#pragma comment(linker, "/include:??$absolute_value@_J@date_time@boost@@YA_J_J@Z")
#pragma comment(linker, "/include:?shuffle_images@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@error_category@std@@8")
#pragma comment(linker, "/include:__xmm@41f00000000000000000000000000000")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$MemoryDataLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??0?$AccuracyLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$ThresholdLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_R4thread_data_base@detail@boost@@6B@")
#pragma comment(linker, "/include:??$_Ptr_cat@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:??_C@_0DL@OOJOCKPH@?91?5dims?$DL?5at?5most?5a?5single?5?$CI1?$CJ?5va@")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@IBEXPAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_C@_0BJ@IJOILMJL@bottom?$FL2?$FN?9?$DOheight?$CI?$CJ?5?$DN?$DN?51?$AA@")
#pragma comment(linker, "/include:?allocate@?$allocator@N@std@@QAEPANI@Z")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?SharedCtor@PythonParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$ReductionLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??_G?$PoolingLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$forward@N@std@@YA$$QANAAN@Z")
#pragma comment(linker, "/include:??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@?$normal_distribution@N@random@boost@@QAENAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@@Z")
#pragma comment(linker, "/include:??0?$vector@MV?$allocator@M@std@@@std@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??0?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?Clear@TanHParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??_C@_0GJ@PLLAMMEJ@Check?5failed?3?5?$CB?$CIpool_param?4has_k@")
#pragma comment(linker, "/include:?is_signed@?$numeric_limits@_J@std@@2_NB")
#pragma comment(linker, "/include:?mutable_unknown_fields@LossParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??0?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$SoftmaxLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$nextafter@NN@math@boost@@YANABN0@Z")
#pragma comment(linker, "/include:??_C@_0CM@NFHFJEDH@Unknown?5parameter?5batchsize?5for?5@")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@FlattenParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:?has_mean_file@ImageDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?value@?$trait_impl@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@GUdont_care@has_right_shift_impl@detail@boost@@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??1?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??0?$_Tree_alloc@$0A@U?$_Tree_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$TanHLayer@M@caffe@@@detail@boost@@QAE@PAV?$TanHLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?gInstantiationGuardInnerProductLayer@caffe@@3DA")
#pragma comment(linker, "/include:??0?$shared_ptr@$$CBVclone_base@exception_detail@boost@@@boost@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??$Clear@VTypeHandler@?$RepeatedPtrField@VNetStateRule@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXXZ")
#pragma comment(linker, "/include:??1?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?Backward_cpu@?$SoftmaxWithLossLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?kClipGradientsFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:?_Reserve@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$ReductionLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??$enable_current_exception@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@boost@@YA?AV?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@0@ABU?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@20@@Z")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$AbsValLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?offset@?$Blob@H@caffe@@QBEHABV?$vector@HV?$allocator@H@std@@@std@@@Z")
#pragma comment(linker, "/include:?kPhaseFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??0?$LayerRegisterer@N@caffe@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@1@@Z@Z")
#pragma comment(linker, "/include:??_G?$TanHLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_GTransformationParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$TanHLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$_Move@AAPAVWindowDataParameter@caffe@@@std@@YA$$QAPAVWindowDataParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??$_Umove@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@?$vector@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@IAEPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@1@PAV21@00@Z")
#pragma comment(linker, "/include:?SetCachedSize@AccuracyParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:??R?$add@II$0A@@detail@rand@boost@@QAEIII@Z")
#pragma comment(linker, "/include:?deallocate@?$allocator@N@std@@QAEXPANI@Z")
#pragma comment(linker, "/include:??_C@_0DL@DDEACDLG@top_k?5must?5be?5less?5than?5or?5equal@")
#pragma comment(linker, "/include:??_C@_0FF@NIFKLDCJ@Current?5implementation?5requires?5@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?SPEED@FileOptions@protobuf@google@@2W4FileOptions_OptimizeMode@23@B")
#pragma comment(linker, "/include:??C?$shared_ptr@V?$EltwiseLayer@M@caffe@@@boost@@QBEPAV?$EltwiseLayer@M@caffe@@XZ")
#pragma comment(linker, "/include:?set_gamma@SolverParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?_Rrotate@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:?MergeFrom@V1LayerParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_C@_06ICDKOIFG@square?$AA@")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VNetStateRule@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVNetStateRule@caffe@@PAE@Z")
#pragma comment(linker, "/include:??$destroy@N@?$allocator@N@std@@QAEXPAN@Z")
#pragma comment(linker, "/include:??0?$basic_format@DU?$char_traits@D@std@@V?$allocator@D@2@@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@DummyDataParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R2ReductionParameter@caffe@@8")
#pragma comment(linker, "/include:??_C@_0BN@MBKNHFKH@Could?5not?5open?5or?5find?5file?5?$AA@")
#pragma comment(linker, "/include:??4?$shared_ptr@V?$Blob@M@caffe@@@boost@@QAEAAV01@ABV01@@Z")
#pragma comment(linker, "/include:?set_has_threshold@ThresholdParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$EltwiseLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?BNLL@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??_7?$PositiveUnitballFiller@M@caffe@@6B@")
#pragma comment(linker, "/include:?kWindowDataParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@VLayerParameter@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$checked_delete@V?$LogLayer@N@caffe@@@boost@@YAXPAV?$LogLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?flatten_param@LayerParameter@caffe@@QBEABVFlattenParameter@2@XZ")
#pragma comment(linker, "/include:?clear@?$vector@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:??$_Val_type@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@YAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@0@PAU10@@Z")
#pragma comment(linker, "/include:?CopyFrom@ExpParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?_Freenode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?begin@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$ConcatLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?kDeprecatedFieldNumber@MessageOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:?kTestInitializationFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:??0?$_Tree_comp@$0A@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:__TI2?AVbad_cast@std@@")
#pragma comment(linker, "/include:??_R1A@CA@3FA@clone_base@exception_detail@boost@@8")
#pragma comment(linker, "/include:?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??_R0?AV?$DeconvolutionLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?set_context_pad@WindowDataParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??$Creator_ReductionLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??0?$fpos@H@std@@QAE@_J@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$TanHLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_G?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_C@_0BB@GHLKOCCK@?5Layer?5produces?5?$AA@")
#pragma comment(linker, "/include:?has_negative_slope@ReLUParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@6Btoo_many_args@io@2@@")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@U?$pair@MH@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAU?$pair@MH@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@MH@std@@@std@@@2@@std@@YAPAU?$pair@MH@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@MH@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?kKernelSizeFieldNumber@ConvolutionParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$make_pair@ABNAAH@std@@YA?AU?$pair@NH@0@ABNAAH@Z")
#pragma comment(linker, "/include:??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??_C@_0EC@KLAAOKEG@Check?5failed?3?5google?3?3protobuf?3?3@")
#pragma comment(linker, "/include:??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$MultinomialLogisticLossLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$_Ptr_cat@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z")
#pragma comment(linker, "/include:??_R3?$Solver@M@caffe@@8")
#pragma comment(linker, "/include:?IsInitialized@MVNParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??$?0V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$$V@1@$0A@$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@QAE@AAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AAV?$tuple@$$$V@1@U?$_Arg_idx@$0A@@1@U?$_Arg_idx@$S@1@@Z")
#pragma comment(linker, "/include:??1?$TanHLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$ConcatLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$_Val_type@PAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@PAV12@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$LogLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEXXZ")
#pragma comment(linker, "/include:??$OwnInternal@VLossParameter@caffe@@@Arena@protobuf@google@@AAEXPAVLossParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:??_C@_0BG@FAIEKNNP@blob?9?$DOnum_axes?$CI?$CJ?5?$DO?$DN?51?$AA@")
#pragma comment(linker, "/include:?ABS_N@?$ratio@$0GE@$00@boost@@0_JB")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VMVNParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVMVNParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?Reshape@?$SilenceLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?mutable_cpu_data@?$Blob@I@caffe@@QAEPAIXZ")
#pragma comment(linker, "/include:?add_exclude@LayerParameter@caffe@@QAEPAVNetStateRule@2@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8")
#pragma comment(linker, "/include:?mutable_softmax_param@V1LayerParameter@caffe@@QAEPAVSoftmaxParameter@2@XZ")
#pragma comment(linker, "/include:?EltwiseOp_MIN@EltwiseParameter@caffe@@2W4EltwiseParameter_EltwiseOp@2@B")
#pragma comment(linker, "/include:??$swap@PAURep@?$RepeatedField@I@protobuf@google@@@std@@YAXAAPAURep@?$RepeatedField@I@protobuf@google@@0@Z")
#pragma comment(linker, "/include:??_R1BE@?0A@EA@exception@boost@@8")
#pragma comment(linker, "/include:?V0LayerParameter_PoolMethod_descriptor_@?A0x5e4fc710@caffe@@3PBVEnumDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??_R0D@8")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$SPPLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??0?$constrained_value@V?$simple_exception_policy@G$0FHI@$0CHBA@Ubad_year@gregorian@boost@@@CV@boost@@@CV@boost@@QAE@G@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Filler@M@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@V?$Filler@M@caffe@@@1@PAV?$Filler@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??$_Fill_n@PAIII@std@@YAPAIPAIIABI@Z")
#pragma comment(linker, "/include:?type@?$EuclideanLossLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?sumsq_diff@?$Blob@H@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?HDF5DataParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?Backward_gpu@?$LRNLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@QBE?AV01@H@Z")
#pragma comment(linker, "/include:?erase@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@2@@Z")
#pragma comment(linker, "/include:??_8?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@7B@")
#pragma comment(linker, "/include:??$?0ABHPAPAX@?$tuple@ABH@std@@QAE@$$QAV01@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:??_R3MVNParameter@caffe@@8")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$SoftmaxLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?const_min@?$integer_traits_base@_K$0A@$0?0@detail@boost@@2_KB")
#pragma comment(linker, "/include:??1InnerProductParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$MemoryDataLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?set_has_variance_norm@FillerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$HingeLossLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?Backward_cpu@?$SoftmaxWithLossLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?erase@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@0@Z")
#pragma comment(linker, "/include:__CT??_R0?AVformat_error@io@boost@@@8??0format_error@io@boost@@QAE@ABV012@@Z12")
#pragma comment(linker, "/include:??_C@_0L@ECCBKIIJ@WindowData?$AA@")
#pragma comment(linker, "/include:?kMeanValueFieldNumber@TransformationParameter@caffe@@2HB")
#pragma comment(linker, "/include:?Backward@?$Layer@M@caffe@@QAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$destroy@V?$vector@MV?$allocator@M@std@@@std@@@?$allocator_traits@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@1@PAV?$vector@MV?$allocator@M@std@@@1@@Z")
#pragma comment(linker, "/include:??_R2?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??_C@_0BF@IHJNIGDG@Creating?5test?5net?5?$CI?$CD?$AA@")
#pragma comment(linker, "/include:??_C@_0BE@HOGPKGPO@?5?5?5?5?$FLUpdate?$FN?5Layer?5?$AA@")
#pragma comment(linker, "/include:?allocate@?$allocator@VNetParameter@caffe@@@std@@QAEPAVNetParameter@caffe@@I@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@TransformationParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?push_back@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QAEX$$QAU?$pair@HH@2@@Z")
#pragma comment(linker, "/include:?_Rmost@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?has_max@FillerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$Creator_InfogainLossLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?kChannelsFieldNumber@MemoryDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?Swap@HDF5OutputParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??_C@_07DJLOGLFM@Pooling?$AA@")
#pragma comment(linker, "/include:?MAX@PoolingParameter@caffe@@2W4PoolingParameter_PoolMethod@2@B")
#pragma comment(linker, "/include:??_R3?$SGDSolver@M@caffe@@8")
#pragma comment(linker, "/include:?Backward_gpu@?$EuclideanLossLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?set_has_name@ParamSpec@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VSoftmaxParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVSoftmaxParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:??_C@_0BG@JDIOJEPK@num_generic_nets?5?$DM?$DN?51?$AA@")
#pragma comment(linker, "/include:??A?$vector@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@QAEAAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:??1?$vector@VNetParameter@caffe@@V?$allocator@VNetParameter@caffe@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?value@?$is_function_impl@V?$token_iterator@V?$char_separator@DU?$char_traits@D@std@@@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_C@_0N@GCLMDJC@InnerProduct?$AA@")
#pragma comment(linker, "/include:?Fill@?$ConstantFiller@M@caffe@@UAEXPAV?$Blob@M@2@@Z")
#pragma comment(linker, "/include:?MEMORY_DATA@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??$swap@PAV?$SplitLayer@N@caffe@@@std@@YAXAAPAV?$SplitLayer@N@caffe@@0@Z")
#pragma comment(linker, "/include:?value@?$arg@$0?0@mpl@boost@@2HB")
#pragma comment(linker, "/include:??0?$Blob@M@caffe@@QAE@HHHH@Z")
#pragma comment(linker, "/include:?max_size@?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$cast@VTypeHandler@?$RepeatedPtrField@VV1LayerParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@CAPAVV1LayerParameter@caffe@@PAX@Z")
#pragma comment(linker, "/include:?const_min@?$integer_traits_base@_W$0A@$0PPPP@@detail@boost@@2_WB")
#pragma comment(linker, "/include:?tempering_s@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@2IB")
#pragma comment(linker, "/include:??_R2?$SGDSolver@M@caffe@@8")
#pragma comment(linker, "/include:?clear_scale@WindowDataParameter@caffe@@QAEXXZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$ThresholdLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$construct@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@U12@@?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@QAEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@1@$$QAU21@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$SplitLayer@M@caffe@@8")
#pragma comment(linker, "/include:?size@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?MaxBottomBlobs@?$InfogainLossLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?const_max@?$integer_traits_base@_N$0A@$00@detail@boost@@2_NB")
#pragma comment(linker, "/include:?value@?$is_volatile_rval_filter@I@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$SliceLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0@Z")
#pragma comment(linker, "/include:??_R3?$LossLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_R0?AVSliceParameter@caffe@@@8")
#pragma comment(linker, "/include:??_C@_04DICKPMGH@Data?$AA@")
#pragma comment(linker, "/include:?set_has_margin@ContrastiveLossParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??1LayerParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@VCaffe@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?value@?$operator_exists@V?$basic_istream@DU?$char_traits@D@std@@@std@@H@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$InfogainLossLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_D?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@QAEXXZ")
#pragma comment(linker, "/include:??$?0V?$PowerLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$PowerLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?MergeFrom@SoftmaxParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bbad_day_of_month@gregorian@2@@")
#pragma comment(linker, "/include:??1?$vector@DV?$allocator@D@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$SilenceLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??0?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@QAE@ABU012@@Z")
#pragma comment(linker, "/include:?MoveArray@?$RepeatedField@M@protobuf@google@@AAEXPAM0H@Z")
#pragma comment(linker, "/include:?kMessageSetTypeIdTag@WireFormatLite@internal@protobuf@google@@2HB")
#pragma comment(linker, "/include:??0bad_day_of_month@gregorian@boost@@QAE@XZ")
#pragma comment(linker, "/include:?num@?$ratio@$00$0JIJGIA@@boost@@2_JB")
#pragma comment(linker, "/include:?_Getcont@_Iterator_base0@std@@QBEPBU_Container_base0@2@XZ")
#pragma comment(linker, "/include:??$?0V?$DropoutLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$DropoutLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??0?$shared_ptr@VDB@db@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??_Ebad_alloc_@exception_detail@boost@@WBE@AEPAXI@Z")
#pragma comment(linker, "/include:?_Inside@?$vector@U?$pair@NH@std@@V?$allocator@U?$pair@NH@std@@@2@@std@@IBE_NPBU?$pair@NH@2@@Z")
#pragma comment(linker, "/include:??$forward@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@YA$$QAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@AAV12@@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@NetState@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$ContrastiveLossLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$forward@M@std@@YA$$QAMAAM@Z")
#pragma comment(linker, "/include:?IsInitialized@PoolingParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?const_min@?$integer_traits_base@J$0?IAAAAAAA@$0HPPPPPPP@@detail@boost@@2JB")
#pragma comment(linker, "/include:?digits@?$numeric_limits@_K@std@@2HB")
#pragma comment(linker, "/include:?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$Add@VTypeHandler@?$RepeatedPtrField@VNetStateRule@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEPAVNetStateRule@caffe@@PAV45@@Z")
#pragma comment(linker, "/include:??_GInfogainLossParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??1bad_alloc_@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?MergeFrom@WindowDataParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$swap@PAVCaffe@caffe@@@std@@YAXAAPAVCaffe@caffe@@0@Z")
#pragma comment(linker, "/include:?c@?$choose_initial_n@$0BA@@static_log2_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$destroy@VNetParameter@caffe@@@?$allocator@VNetParameter@caffe@@@std@@QAEXPAVNetParameter@caffe@@@Z")
#pragma comment(linker, "/include:?unknown_fields@HDF5DataParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?set_top_k@ArgMaxParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?AddAlreadyReserved@?$RepeatedField@H@protobuf@google@@QAEXABH@Z")
#pragma comment(linker, "/include:??_GClosure@protobuf@google@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R3?$DeconvolutionLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@6Boverflow_error@std@@@")
#pragma comment(linker, "/include:?erase@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@2@0@Z")
#pragma comment(linker, "/include:??$get_static_exception_object@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@YA?AVexception_ptr@1@XZ")
#pragma comment(linker, "/include:??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV01@@Z")
#pragma comment(linker, "/include:??0?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$Filler@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?LayerSetUp@?$BasePrefetchingDataLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$SoftmaxLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@@std@@@std@@YAXPAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z")
#pragma comment(linker, "/include:?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$AbsValLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$_Uninit_move@PAPAV?$Blob@M@caffe@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@YAPAPAV?$Blob@M@caffe@@PAPAV12@00AAU?$_Wrap_alloc@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@@Z")
#pragma comment(linker, "/include:??0?$DummyDataLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??_R0?AV?$XavierFiller@M@caffe@@@8")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$TanHLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@1@AAPAU21@@Z")
#pragma comment(linker, "/include:??_7?$PoolingLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??$?0V?$EltwiseLayer@N@caffe@@@?$shared_ptr@V?$EltwiseLayer@N@caffe@@@boost@@QAE@PAV?$EltwiseLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$Creator_PReLULayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$InnerProductLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_C@_0FI@BCNJGCL@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?MergeFrom@SigmoidParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?significand@?$fp_traits_non_native@NUdouble_precision@detail@math@boost@@@detail@math@boost@@2_KB")
#pragma comment(linker, "/include:??0?$PowerLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??$forward@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@YA$$QAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@AAV12@@Z")
#pragma comment(linker, "/include:?value@?$enable_binary_hash@N$0EA@$0EAAA@@hash_detail@boost@@2_NB")
#pragma comment(linker, "/include:?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$SigmoidLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?EXP@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??_R4LogParameter@caffe@@6B@")
#pragma comment(linker, "/include:?OptimizeMode_MIN@FileOptions@protobuf@google@@2W4FileOptions_OptimizeMode@23@B")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@QAEPAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@2@I@Z")
#pragma comment(linker, "/include:?resize@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QAEXI@Z")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??0?$ExpLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z")
#pragma comment(linker, "/include:??_Glogic_error@std@@UAEPAXI@Z")
#pragma comment(linker, "/include:?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??$?0V?$PowerLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$PowerLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?value@?$is_pointer_impl@V?$basic_istream@DU?$char_traits@D@std@@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??0bad_month@gregorian@boost@@QAE@ABU012@@Z")
#pragma comment(linker, "/include:?fabs@@YAMM@Z")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@NH@std@@V?$allocator@U?$pair@NH@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@NH@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?mutable_layer@V1LayerParameter@caffe@@QAEPAVV0LayerParameter@2@XZ")
#pragma comment(linker, "/include:?GetMetadata@SolverParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$_Transform@PADV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@P6AHH@Z@std@@YA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@PAD0V10@P6AHH@Z@Z")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@N@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@QAEPAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?value@?$is_function_impl@Vthread_attributes@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@BlobProtoVector@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?snapshot@SolverParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?has_width@Datum@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?Backward_cpu@?$TanHLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$SilenceLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?gInstantiationGuardReductionLayer@caffe@@3DA")
#pragma comment(linker, "/include:??$Creator_ExpLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?Advance@CodedInputStream@io@protobuf@google@@AAEXH@Z")
#pragma comment(linker, "/include:?Mutable@?$RepeatedPtrField@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@protobuf@google@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$LogLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$arena_destruct_object@VV1LayerParameter@caffe@@@internal@protobuf@google@@YAXPAX@Z")
#pragma comment(linker, "/include:?parameter_a@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@2IB")
#pragma comment(linker, "/include:??AMStep@Mat@cv@@QBEABIH@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$Im2colLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?mean_file@DataParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$MemoryDataLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?copy_boost_exception@exception_detail@boost@@YAXPAVexception@2@PBV32@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$MemoryDataLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??C?$shared_ptr@V?$ConcatLayer@N@caffe@@@boost@@QBEPAV?$ConcatLayer@N@caffe@@XZ")
#pragma comment(linker, "/include:?value@?$is_function_impl@Uoutput_iterator_tag@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?value@?$max_pow2_less@$0A@$0A@@detail@boost@@2HB")
#pragma comment(linker, "/include:??_C@_06LAGGCOIO@im2col?$AA@")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Vruntime_error@std@@@12@@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$PowerLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV31@@Z")
#pragma comment(linker, "/include:??_R4?$Net@M@caffe@@6B@")
#pragma comment(linker, "/include:??R?$subtract@I$0A@@detail@random@boost@@QAEIII@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$MSRAFiller@M@caffe@@8")
#pragma comment(linker, "/include:?clear@?$vector@PAV?$FlattenLayer@M@caffe@@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:?has_name@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$throw_exception@Vdomain_error@std@@@boost@@YAXABVdomain_error@std@@@Z")
#pragma comment(linker, "/include:?Delete@?$GenericTypeHandler@VLayerParameter@caffe@@@internal@protobuf@google@@SAXPAVLayerParameter@caffe@@PAVArena@34@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$ReLULayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?_Swap_bx@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??C?$shared_ptr@V?$SplitLayer@M@caffe@@@boost@@QBEPAV?$SplitLayer@M@caffe@@XZ")
#pragma comment(linker, "/include:??0?$vector@IV?$allocator@_N@std@@@std@@QAE@IABIABV?$allocator@_N@1@@Z")
#pragma comment(linker, "/include:?kMeanFileFieldNumber@TransformationParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$_Insert_nohint@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??_R0?AV?$Solver@N@caffe@@@8")
#pragma comment(linker, "/include:??$arena_destruct_object@VLayerParameter@caffe@@@internal@protobuf@google@@YAXPAX@Z")
#pragma comment(linker, "/include:?size@?$vector@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?Backward_cpu@?$ContrastiveLossLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??0EltwiseParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?_Xlen@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@IBEXXZ")
#pragma comment(linker, "/include:??_R0?AVAccuracyParameter@caffe@@@8")
#pragma comment(linker, "/include:??_7?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@6Btoo_few_args@io@2@@")
#pragma comment(linker, "/include:?Backward_cpu@?$SilenceLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@PReLUParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@AAV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@AAV34@@Z")
#pragma comment(linker, "/include:?kInitialSize@RepeatedPtrFieldBase@internal@protobuf@google@@0HB")
#pragma comment(linker, "/include:??_R2?$DummyDataLayer@N@caffe@@8")
#pragma comment(linker, "/include:?default_instance_@SliceParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??_R0?AU?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:??_Gthread@boost@@QAEPAXI@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@VGenerator@RNG@Caffe@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$_Ucopy@PBD@?$vector@DV?$allocator@D@std@@@std@@IAEPADPBD0PAD@Z")
#pragma comment(linker, "/include:?set_has_biasterm@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$addressof@PAV?$FlattenLayer@N@caffe@@@std@@YAPAPAV?$FlattenLayer@N@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$PoolingLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$PoolingLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??1?$InnerProductLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?kDataFieldNumber@BlobProto@caffe@@2HB")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@8")
#pragma comment(linker, "/include:??$?0V?$ReductionLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$ReductionLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@VNetParameter@caffe@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$Net@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?_Lmost@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??_R3?$TanHLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_R3?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$DummyDataLayer@N@caffe@@@detail@boost@@QAE@PAV?$DummyDataLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?descriptor@WindowDataParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@XZ")
#pragma comment(linker, "/include:?has_hdf5_output_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??1?$BasePrefetchingDataLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?set_has_k@LRNParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_7WindowDataParameter@caffe@@6B@")
#pragma comment(linker, "/include:?DB_MAX@DataParameter@caffe@@2W4DataParameter_DB@2@B")
#pragma comment(linker, "/include:??_8?$basic_fstream@DU?$char_traits@D@std@@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@")
#pragma comment(linker, "/include:?PoolingParameter_Engine_descriptor_@?A0x5e4fc710@caffe@@3PBVEnumDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??_C@_0M@OBCILMLP@Setting?5up?5?$AA@")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?default_instance@ConvolutionParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??1?$RepeatedPtrField@VBlobProto@caffe@@@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:??A?$vector@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@QAEAAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@1@I@Z")
#pragma comment(linker, "/include:?mutable_gpu_data@?$Blob@I@caffe@@QAEPAIXZ")
#pragma comment(linker, "/include:?kConvolutionParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?New@LRNParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:?kScaleFieldNumber@TransformationParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_C@_0CC@KJNGAPJL@num_axes?5?$DN?$DN?5bottom?$FLi?$FN?9?$DOnum_axes?$CI@")
#pragma comment(linker, "/include:??_C@_0BN@LALACOCH@Check?5failed?3?5infile?4good?$CI?$CJ?5?$AA@")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$PoolingLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?set_has_tanh_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$reset@V?$PoolingLayer@M@caffe@@@?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@QAEXPAV?$PoolingLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$MakeCheckOpValueString@H@google@@YAXPAV?$basic_ostream@DU?$char_traits@D@std@@@std@@ABH@Z")
#pragma comment(linker, "/include:?pointer_to@?$pointer_traits@PAU?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@SAPAU?$pair@$$CBU?$pair@HH@std@@U12@@2@AAU32@@Z")
#pragma comment(linker, "/include:??$_Unchecked@PB_J@std@@YAPB_JPB_J@Z")
#pragma comment(linker, "/include:?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B")
#pragma comment(linker, "/include:?LayerSetUp@?$BaseConvolutionLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@LogParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@1@PAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@$$QAV34@@Z")
#pragma comment(linker, "/include:?add_stage@NetStateRule@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$ExpLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$vSub@N@@YAXHPBN0PAN@Z")
#pragma comment(linker, "/include:??$?0V?$AbsValLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$AbsValLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$LogLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$caffe_add_scalar@M@caffe@@YAXHMPAM@Z")
#pragma comment(linker, "/include:?value@?$alignment_of_impl@Tmax_align@detail@boost@@@detail@boost@@2IB")
#pragma comment(linker, "/include:?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABH@2@V?$tuple@$$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@PAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABH@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?engine@PoolingParameter@caffe@@QBE?AW4PoolingParameter_Engine@2@XZ")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEXXZ")
#pragma comment(linker, "/include:?forward_cpu_gemm@?$BaseConvolutionLayer@M@caffe@@IAEXPBM0PAM_N@Z")
#pragma comment(linker, "/include:?kJavaOuterClassnameFieldNumber@FileOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_C@_03PEGNKCLE@jpg?$AA@")
#pragma comment(linker, "/include:?_Reserve@?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?kUninterpretedOptionFieldNumber@FileOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z")
#pragma comment(linker, "/include:??$?0V?$DropoutLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$DropoutLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_7BlobProtoVector@caffe@@6B@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$SplitLayer@N@caffe@@8")
#pragma comment(linker, "/include:?_Reallocate@?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??_R3?$MemoryDataLayer@N@caffe@@8")
#pragma comment(linker, "/include:?CONCAT@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??_C@_0CM@CECBDDNB@Unknown?5parameter?5new_width?5for?5@")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@ImageDataParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_C@_0BF@DEEIJCPC@Unknown?5caffe?5mode?3?5?$AA@")
#pragma comment(linker, "/include:??$_Move@AAPAVDummyDataParameter@caffe@@@std@@YA$$QAPAVDummyDataParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?has_pad_h@PoolingParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?Mutable@?$RepeatedPtrField@VV1LayerParameter@caffe@@@protobuf@google@@QAEPAVV1LayerParameter@caffe@@H@Z")
#pragma comment(linker, "/include:??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@@std@@QAE@PAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@PBU_Container_base0@1@@Z")
#pragma comment(linker, "/include:?_Grow_to@?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@IBEII@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$LogLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??0DummyDataParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??_C@_0BH@FMPDPPJF@slice_point_?$FLi?$FN?5?$DO?5prev?$AA@")
#pragma comment(linker, "/include:??C?$shared_ptr@V?$Layer@N@caffe@@@boost@@QBEPAV?$Layer@N@caffe@@XZ")
#pragma comment(linker, "/include:?set_display@SolverParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:??_GSolverState@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?select_on_container_copy_construction@?$allocator@H@std@@QBE?AV12@XZ")
#pragma comment(linker, "/include:??0?$basic_format@DU?$char_traits@D@std@@V?$allocator@D@2@@boost@@QAE@PBD@Z")
#pragma comment(linker, "/include:??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:?kPadFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R4?$WindowDataLayer@N@caffe@@6BInternalThread@1@@")
#pragma comment(linker, "/include:__CT??_R0?AU?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@8??0?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@QAE@ABU012@@Z32")
#pragma comment(linker, "/include:??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@1@XZ")
#pragma comment(linker, "/include:?set_concat_dim@V0LayerParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?IsInitialized@ImageDataParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?max@?$br_mul@$00$0PECEA@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@NH@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?_Tidy@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:?InitAsDefaultInstance@ContrastiveLossParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$DummyDataLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$DummyDataLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?HDF5_OUTPUT@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:?has_type@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@V32@0@Z")
#pragma comment(linker, "/include:?set_axis@ReshapeParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?is_exact@_Num_int_base@std@@2_NB")
#pragma comment(linker, "/include:??$?0V?$AccuracyLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$AccuracyLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?default_instance_@ReLUParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?set_has_softmax_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??1?$SilenceLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R2?$SliceLayer@M@caffe@@8")
#pragma comment(linker, "/include:??$Own@VFlattenParameter@caffe@@@Arena@protobuf@google@@QAEXPAVFlattenParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_7?$PReLULayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@bad_alloc@std@@8")
#pragma comment(linker, "/include:??0?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@QAE@ABU0123@@Z")
#pragma comment(linker, "/include:??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@SAAAU?$pair@QBXUtss_data_node@detail@boost@@@2@PAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_Gformat_error@io@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?CanonicalAxisIndex@?$Blob@H@caffe@@QBEHH@Z")
#pragma comment(linker, "/include:?set_has_coeff@ReductionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:?value@?$is_reference_impl@V?$unique_future@X@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?Forward_gpu@?$SilenceLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??1?$DummyDataLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ")
#pragma comment(linker, "/include:?kArgmaxParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?set_has_det_fg_fraction@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$ImageDataLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$shared_ptr@V?$Net@N@caffe@@@boost@@PAV12@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@V12@@std@@YAPAV?$shared_ptr@V?$Net@N@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??_7?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@6Bbad_alloc@std@@@")
#pragma comment(linker, "/include:??_C@_03LODLOOIE@?$CJ?$DL?5?$AA@")
#pragma comment(linker, "/include:??_G?$DummyDataLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??0?$_Tree_buy@U?$pair@$$CBU?$pair@HH@std@@H@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@1@@Z")
#pragma comment(linker, "/include:??1?$SGDSolver@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$LRNLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?kStrideHFieldNumber@PoolingParameter@caffe@@2HB")
#pragma comment(linker, "/include:?Swap@ArenaStringPtr@internal@protobuf@google@@QAEXPAU1234@@Z")
#pragma comment(linker, "/include:?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?New@ConvolutionParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??_R4?$LogLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??_R3?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?set_has_stride@PoolingParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?lr_mult@ParamSpec@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?SharedDtor@ReLUParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:?kCropSizeFieldNumber@ImageDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?InitAsDefaultInstance@BlobProtoVector@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?LRNParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??0?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??0Message@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$FilterLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$construct@PAV?$FlattenLayer@M@caffe@@PAV12@@?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@QAEXPAPAV?$FlattenLayer@M@caffe@@$$QAPAV23@@Z")
#pragma comment(linker, "/include:??_C@_0BF@FLGHIMGO@Sharing?5parameters?5?8?$AA@")
#pragma comment(linker, "/include:?CAFFE@PoolingParameter@caffe@@2W4PoolingParameter_Engine@2@B")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$EltwiseLayer@M@caffe@@@detail@boost@@QAE@PAV?$EltwiseLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$construct@PAV?$Blob@M@caffe@@PAV12@@?$allocator@PAV?$Blob@M@caffe@@@std@@QAEXPAPAV?$Blob@M@caffe@@$$QAPAV23@@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VSliceParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVSliceParameter@caffe@@@Z")
#pragma comment(linker, "/include:?set_has_axis@ReductionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@U?$pair@NH@std@@V?$allocator@U?$pair@NH@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R3?$LossLayer@N@caffe@@8")
#pragma comment(linker, "/include:??0?$time_duration@V0posix_time@boost@@V?$time_resolution_traits@Utime_resolution_traits_adapted64_impl@date_time@boost@@$04$0PECEA@$05H@date_time@2@@date_time@boost@@QAE@HHH_J@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$EltwiseLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?set_has_type@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?set_has_hdf5_output_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$Im2colLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$BNLLLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$GetReferenceableValue@N@google@@YAABNABN@Z")
#pragma comment(linker, "/include:??$enable_current_exception@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@boost@@YA?AV?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@0@ABU?$error_info_injector@Vthread_resource_error@boost@@@20@@Z")
#pragma comment(linker, "/include:??0FlattenParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?OptimizeMode_ARRAYSIZE@FileOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@$$QAU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?add_bottom@LayerParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??_R2?$ImageDataLayer@M@caffe@@8")
#pragma comment(linker, "/include:??$?0V?$Layer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$Layer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$Own@VConvolutionParameter@caffe@@@Arena@protobuf@google@@QAEXPAVConvolutionParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_7?$SGDSolver@N@caffe@@6B@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$NesterovSolver@M@caffe@@8")
#pragma comment(linker, "/include:?Backward_gpu@?$ExpLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??C?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@QBEPAV?$PoolingLayer@N@caffe@@XZ")
#pragma comment(linker, "/include:??$forward_as_tuple@U?$pair@HH@std@@@std@@YA?AV?$tuple@$$QAU?$pair@HH@std@@@0@$$QAU?$pair@HH@0@@Z")
#pragma comment(linker, "/include:?size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$_Unchecked@PAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@PAV12@@Z")
#pragma comment(linker, "/include:??_R0?AV?$AbsValLayer@M@caffe@@@8")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$InnerProductLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ")
#pragma comment(linker, "/include:?IsInitialized@V1LayerParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@AccuracyParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@0@AAPAU10@@Z")
#pragma comment(linker, "/include:?SolverParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??0?$GaussianFiller@N@caffe@@QAE@ABVFillerParameter@1@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$SilenceLayer@N@caffe@@@boost@@YAXPAV?$SilenceLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$?0V?$DropoutLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$DropoutLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?EltwiseOp_MAX@EltwiseParameter@caffe@@2W4EltwiseParameter_EltwiseOp@2@B")
#pragma comment(linker, "/include:??_C@_0BM@IBGDCEBO@transformation?5parameters?3?5?$AA@")
#pragma comment(linker, "/include:??_C@_0BF@CLJIHFDC@datum_width?5?$DN?$DN?5width?$AA@")
#pragma comment(linker, "/include:??$_Allocate@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@YAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@0@IPAU10@@Z")
#pragma comment(linker, "/include:?TYPE_BYTES@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Type@23@B")
#pragma comment(linker, "/include:?New@ReshapeParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:?CopyFrom@Datum@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@PoolingParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@HDF5DataParameter@caffe@@8")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@InternalThread@caffe@@8")
#pragma comment(linker, "/include:?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@SAAAU?$pair@$$CBHH@2@PAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?SetCachedSize@ReshapeParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:??1?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$caffe_rng_bernoulli@M@caffe@@YAXHMPAH@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??1?$PoolingLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@1@@Z")
#pragma comment(linker, "/include:??$?0V?$MultinomialLogisticLossLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$MultinomialLogisticLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??0Mat@cv@@QAE@XZ")
#pragma comment(linker, "/include:?max_exponent10@_Num_base@std@@2HB")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$AccuracyLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$AccuracyLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@1@$$QA_N@Z")
#pragma comment(linker, "/include:?type@?$DummyDataLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?value@?$is_pod_impl@Ua64@tt_align_ns@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$_Rechecked@PAV?$shared_ptr@V?$Net@M@caffe@@@boost@@PAV12@@std@@YAAAPAV?$shared_ptr@V?$Net@M@caffe@@@boost@@AAPAV12@PAV12@@Z")
#pragma comment(linker, "/include:??_R3?$Im2colLayer@M@caffe@@8")
#pragma comment(linker, "/include:??$?0V?$SigmoidCrossEntropyLossLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$SigmoidCrossEntropyLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$LossLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?MVNParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?BackwardFromTo@?$Net@M@caffe@@QAEXHH@Z")
#pragma comment(linker, "/include:??$Creator_InnerProductLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?is_inf@?$int_adapter@I@date_time@boost@@SA_NI@Z")
#pragma comment(linker, "/include:??$_Partial_sort@PAU?$pair@MH@std@@U12@U?$greater@U?$pair@MH@std@@@2@@std@@YAXPAU?$pair@MH@0@00U?$greater@U?$pair@MH@std@@@0@0@Z")
#pragma comment(linker, "/include:?DEFAULT@ReLUParameter@caffe@@2W4ReLUParameter_Engine@2@B")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$Blob@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$max_value@N@tools@math@boost@@YANXZ")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@V12@@?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@$$QAV23@@Z")
#pragma comment(linker, "/include:?CopyFrom@?$Blob@H@caffe@@QAEXABV12@_N1@Z")
#pragma comment(linker, "/include:?default_instance_@ArgMaxParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??_C@_0CB@PBIOBKMN@shape?4dim_size?$CI?$CJ?5?$DM?$DN?5kMaxBlobAxes@")
#pragma comment(linker, "/include:?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B")
#pragma comment(linker, "/include:??_R2?$BaseConvolutionLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_C@_0GK@PHGCOBL@Check?5failed?3?5?$CBconv_param?4has_ke@")
#pragma comment(linker, "/include:?sig_bits@?$low_bits_mask_t@$07@boost@@2EB")
#pragma comment(linker, "/include:?has_batch_size@DataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?round@@YAMM@Z")
#pragma comment(linker, "/include:??1?$map@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R3?$MSRAFiller@N@caffe@@8")
#pragma comment(linker, "/include:??_R3error_category@std@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$InfogainLossLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$caffe_rng_bernoulli@N@caffe@@YAXHNPAH@Z")
#pragma comment(linker, "/include:?unknown_fields@ArgMaxParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?num@?$Blob@I@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??$_Uninitialized_default_fill_n@PAV?$vector@_NV?$allocator@_N@std@@@std@@IU?$_Wrap_alloc@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@2@@std@@YAXPAV?$vector@_NV?$allocator@_N@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VExpParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVExpParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?SharedDtor@TransformationParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?Engine_MIN@ConvolutionParameter@caffe@@2W4ConvolutionParameter_Engine@2@B")
#pragma comment(linker, "/include:?New@EltwiseParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:?SharedDtor@ReductionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?set_has_hdf5_data_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?allocate@?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@QAEPAV?$vector@HV?$allocator@H@std@@@2@I@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$PowerLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$ReductionLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??1?$_Tree_comp@$0A@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@VDB@db@caffe@@V123@@detail@boost@@YAXPAV?$shared_ptr@VDB@db@caffe@@@1@PAVDB@db@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?AVE@PoolingParameter@caffe@@2W4PoolingParameter_PoolMethod@2@B")
#pragma comment(linker, "/include:??_R3NetParameter@caffe@@8")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?value@?$integral_constant@I$01@std@@2IB")
#pragma comment(linker, "/include:??0?$allocator@N@std@@QAE@XZ")
#pragma comment(linker, "/include:??0?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@QAE@ABU012@@Z")
#pragma comment(linker, "/include:?Swap@SPPParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:?Get@?$RepeatedPtrField@VNetParameter@caffe@@@protobuf@google@@QBEABVNetParameter@caffe@@H@Z")
#pragma comment(linker, "/include:??$forward@V?$tuple@$$$V@std@@@std@@YA$$QAV?$tuple@$$$V@0@AAV10@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@ExpParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:?digits@?$numeric_limits@C@std@@2HB")
#pragma comment(linker, "/include:?digits@?$numeric_limits@N@std@@2HB")
#pragma comment(linker, "/include:??_R0?AV?$DropoutLayer@N@caffe@@@8")
#pragma comment(linker, "/include:?clear@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:?max@?$simple_exception_policy@G$00$0M@Ubad_month@gregorian@boost@@@CV@boost@@SAGXZ")
#pragma comment(linker, "/include:?New@LossParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A")
#pragma comment(linker, "/include:?set_has_channels@BlobProto@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?ABS_D@?$ratio@$00$0CHBA@@boost@@0_JB")
#pragma comment(linker, "/include:??_C@_0BE@JPFPFCPL@top?$FLi?$FN?5?$CB?$DN?5bottom?$FL0?$FN?$AA@")
#pragma comment(linker, "/include:?params_lr@?$Net@M@caffe@@QBEABV?$vector@MV?$allocator@M@std@@@std@@XZ")
#pragma comment(linker, "/include:?_Tidy@?$vector@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:?Backward_gpu@?$FilterLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?_Tidy@?$vector@U?$pair@NH@std@@V?$allocator@U?$pair@NH@std@@@2@@std@@IAEXXZ")
#pragma comment(linker, "/include:??A?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@QBEABV?$shared_ptr@V?$Blob@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:??_C@_0FB@PKLMBFLI@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?seekpos@?$fpos@H@std@@QBE_JXZ")
#pragma comment(linker, "/include:??_R0?AV?$LossLayer@N@caffe@@@8")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$MemoryDataLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_C@_0DE@LHCLDIBM@Number?5of?5labels?5must?5match?5numb@")
#pragma comment(linker, "/include:??_C@_0CN@BPJFKHND@Warning?3?5had?5one?5or?5more?5problem@")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VV1LayerParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVV1LayerParameter@caffe@@@Z")
#pragma comment(linker, "/include:?min@?$constrained_value@V?$simple_exception_policy@G$00$0BP@Ubad_day_of_month@gregorian@boost@@@CV@boost@@@CV@boost@@SAGXZ")
#pragma comment(linker, "/include:??_C@_0EL@HNFGDMOB@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?kWeightFillerFieldNumber@ConvolutionParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$forward@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@0@AAU10@@Z")
#pragma comment(linker, "/include:?add_test_state@SolverParameter@caffe@@QAEPAVNetState@2@XZ")
#pragma comment(linker, "/include:?has_dropout_ratio@DropoutParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?Backward_cpu@?$SplitLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QAEAAV01@H@Z")
#pragma comment(linker, "/include:??_C@_0BH@LOKBHGPF@Unknown?5reduction?5op?3?5?$AA@")
#pragma comment(linker, "/include:?clone@?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:??$?0VLayerParameter@caffe@@@shared_count@detail@boost@@QAE@PAVLayerParameter@caffe@@@Z")
#pragma comment(linker, "/include:??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?has_name@NetParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@QAEPAPAV?$Blob@M@caffe@@I@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$ExpLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$ExpLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??0?$constrained_value@V?$simple_exception_policy@G$00$0M@Ubad_month@gregorian@boost@@@CV@boost@@@CV@boost@@QAE@G@Z")
#pragma comment(linker, "/include:?kTrailingCommentsFieldNumber@SourceCodeInfo_Location@protobuf@google@@2HB")
#pragma comment(linker, "/include:??0DummyDataParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??_G?$shared_ptr@V?$Filler@M@caffe@@@boost@@QAEPAXI@Z")
#pragma comment(linker, "/include:?mutable_shape@ReshapeParameter@caffe@@QAEPAVBlobShape@2@XZ")
#pragma comment(linker, "/include:?size@?$vector@U?$pair@NH@std@@V?$allocator@U?$pair@NH@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@PReLUParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??C?$shared_ptr@V?$EltwiseLayer@N@caffe@@@boost@@QBEPAV?$EltwiseLayer@N@caffe@@XZ")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$Net@N@caffe@@@boost@@QAE@$$QAV01@@Z")
#pragma comment(linker, "/include:??_R0?AV?$WindowDataLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??_R2Closure@protobuf@google@@8")
#pragma comment(linker, "/include:?_Get_rest@?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEAAV?$tuple@$$$V@2@XZ")
#pragma comment(linker, "/include:??_G?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$SplitLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_7?$ReLULayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??_7?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@6B@")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VSliceParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVSliceParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:??_R3FunctionClosure0@internal@protobuf@google@@8")
#pragma comment(linker, "/include:?deallocate@?$allocator@U?$pair@NH@std@@@std@@QAEXPAU?$pair@NH@2@I@Z")
#pragma comment(linker, "/include:?SetCachedSize@SPPParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@QAEPAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@2@I@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$SilenceLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$SilenceLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?_Reallocate@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??1?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0FF@IFLBBLGE@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??$construct@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@PAV12@@?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@QAEXPAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@1@$$QAPAV21@@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$ReductionLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R4?$BilinearFiller@N@caffe@@6B@")
#pragma comment(linker, "/include:?CopyFrom@ConcatParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?den@?$ratio@$00$0DLJKMKAA@@boost@@2_JB")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$ReshapeLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?window_data_param@LayerParameter@caffe@@QBEABVWindowDataParameter@2@XZ")
#pragma comment(linker, "/include:??$Creator_ExpLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?mutable_convolution_param@LayerParameter@caffe@@QAEPAVConvolutionParameter@2@XZ")
#pragma comment(linker, "/include:?clear_has_scale@DataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_G?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?display@SolverParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??_E?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@WM@AEPAXI@Z")
#pragma comment(linker, "/include:?destroy@sp_counted_base@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?has_ignore_label@AccuracyParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?ABS_N@?$ratio@$00$0CHBA@@boost@@0_JB")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@N@caffe@@@detail@boost@@QAE@PAV?$SoftmaxWithLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0CM@KNACEDFN@boost?3?3format_error?3?5format?5gene@")
#pragma comment(linker, "/include:??_R4?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@6Bbad_year@gregorian@2@@")
#pragma comment(linker, "/include:_logf")
#pragma comment(linker, "/include:?ep@?1???$get_static_exception_object@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@YA?AVexception_ptr@2@XZ@4V32@A")
#pragma comment(linker, "/include:?vdSqr@@YAXHPBNPAN@Z")
#pragma comment(linker, "/include:??_C@_0CD@EKHKOMOM@Day?5of?5month?5is?5not?5valid?5for?5ye@")
#pragma comment(linker, "/include:?deallocate@?$allocator@PAV?$Blob@N@caffe@@@std@@QAEXPAPAV?$Blob@N@caffe@@I@Z")
#pragma comment(linker, "/include:??$absolute_value@H@date_time@boost@@YAHH@Z")
#pragma comment(linker, "/include:??1?$ReLULayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R3ImageDataParameter@caffe@@8")
#pragma comment(linker, "/include:?const_min@?$integer_traits_base@_J$0?IAAAAAAAAAAAAAAA@$0HPPPPPPPPPPPPPPP@@detail@boost@@2_JB")
#pragma comment(linker, "/include:?_Assign_rv@?$vector@NV?$allocator@N@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z")
#pragma comment(linker, "/include:?const_max@?$integer_traits_base@G$0A@$0PPPP@@detail@boost@@2GB")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$DeconvolutionLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?set_concat_dim@ConcatParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$ConvolutionLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?compare@?$char_traits@D@std@@SAHPBD0I@Z")
#pragma comment(linker, "/include:?out@?$_Iosb@H@std@@2W4_Openmode@12@B")
#pragma comment(linker, "/include:?set_has_cache_images@WindowDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?set_out_max_val@ArgMaxParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$DataTransformer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?data_at@?$Blob@I@caffe@@QBEIHHHH@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVNetParameter@caffe@@@internal@protobuf@google@@YAPBVNetParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$Filler@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?not_stage@NetStateRule@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z")
#pragma comment(linker, "/include:?set_crop_size@ImageDataParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??0bad_day_of_month@gregorian@boost@@QAE@ABU012@@Z")
#pragma comment(linker, "/include:??$_Move@AAPAV?$Net@M@caffe@@@std@@YA$$QAPAV?$Net@M@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??$addressof@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@YAPAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@AAPAV10@@Z")
#pragma comment(linker, "/include:??_7?$SigmoidLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:?end@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??_C@_0JD@JJJGJKGH@Check?5failed?3?5?$CI?$CBpool_param?4has_p@")
#pragma comment(linker, "/include:?_Grow_to@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@2@@std@@IBEII@Z")
#pragma comment(linker, "/include:??$?0V?$SplitLayer@N@caffe@@@?$shared_ptr@V?$SplitLayer@N@caffe@@@boost@@QAE@PAV?$SplitLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$?0V?$TanHLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$TanHLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?vsAbs@@YAXHPBMPAM@Z")
#pragma comment(linker, "/include:?_Inside@?$vector@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@IBE_NPBV?$shared_ptr@V?$Layer@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?has_top_k@ArgMaxParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?Reset@?$MemoryDataLayer@M@caffe@@QAEXPAM0H@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$ImageDataLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?add_top@LayerParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:?_Get_rest@?$tuple@$$QAU?$pair@HH@std@@@std@@QAEAAV?$tuple@$$$V@2@XZ")
#pragma comment(linker, "/include:??0?$allocator@_N@std@@QAE@XZ")
#pragma comment(linker, "/include:?_Xlen@?$vector@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@IBEXXZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$DropoutLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$_Unchecked@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPADV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_R0?AU?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:??1?$DummyDataLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R0?AV?$SPPLayer@M@caffe@@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@BlobProto@caffe@@8")
#pragma comment(linker, "/include:??1?$Blob@I@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??$forward@ABH@std@@YAABHABH@Z")
#pragma comment(linker, "/include:?mirror@DataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??$_Buynode_if_nil@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@1@U_Nil@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z")
#pragma comment(linker, "/include:?ByteSize@EltwiseParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?SharedDtor@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$?0V?$SigmoidCrossEntropyLossLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$SigmoidCrossEntropyLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_R4bad_alloc_@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVConcatParameter@caffe@@@internal@protobuf@google@@YAPBVConcatParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$reset@V?$PowerLayer@N@caffe@@@?$shared_ptr@V?$PowerLayer@N@caffe@@@boost@@QAEXPAV?$PowerLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?descriptor@EltwiseParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$OwnInternal@VInnerProductParameter@caffe@@@Arena@protobuf@google@@AAEXPAVInnerProductParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:??$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?ExpectTag@CodedInputStream@io@protobuf@google@@QAE_NI@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$EltwiseLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$AccuracyLayer@N@caffe@@8")
#pragma comment(linker, "/include:?operation@EltwiseParameter@caffe@@QBE?AW4EltwiseParameter_EltwiseOp@2@XZ")
#pragma comment(linker, "/include:?value@?$integral_c@I$01@mpl@boost@@2IB")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R3?$ReLULayer@M@caffe@@8")
#pragma comment(linker, "/include:??$checked_delete@V?$SliceLayer@N@caffe@@@boost@@YAXPAV?$SliceLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?engine@?$variate_generator@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@V?$uniform_real@N@3@@random@boost@@QAEAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@23@XZ")
#pragma comment(linker, "/include:?GetMetadata@SoftmaxParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?StringSize@WireFormatLite@internal@protobuf@google@@SAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@TanHParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$checked_delete@V?$InfogainLossLayer@N@caffe@@@boost@@YAXPAV?$InfogainLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VThresholdParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVThresholdParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$ImageDataLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$OwnInternal@VImageDataParameter@caffe@@@Arena@protobuf@google@@AAEXPAVImageDataParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$ContrastiveLossLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$ContrastiveLossLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??_G?$PReLULayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Net@M@caffe@@@boost@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Net@M@caffe@@@boost@@$$QAV34@@Z")
#pragma comment(linker, "/include:??_C@_0BA@FOJHEJK@channels?$CI?$CJ?5?$DO?$DN?50?$AA@")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$DeconvolutionLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?kInitialSize@?$RepeatedField@I@protobuf@google@@0HB")
#pragma comment(linker, "/include:??_R0?AV?$DummyDataLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?MergeFrom@SoftmaxParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$Get@VTypeHandler@?$RepeatedPtrField@VNetStateRule@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IBEABVNetStateRule@caffe@@H@Z")
#pragma comment(linker, "/include:?allocate@?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@QAEPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@I@Z")
#pragma comment(linker, "/include:?Reshape@?$Blob@I@caffe@@QAEXABV?$vector@HV?$allocator@H@std@@@std@@@Z")
#pragma comment(linker, "/include:?value@?$trait_impl1@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@_JUdont_care@has_right_shift_impl@detail@boost@@$0A@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_C@_0M@BMLPNGDC@Top?5shape?3?5?$AA@")
#pragma comment(linker, "/include:??_R4CPUTimer@caffe@@6B@")
#pragma comment(linker, "/include:??_R2?$DropoutLayer@N@caffe@@8")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$ExpLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??$_Ucopy@V?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@@?$vector@NV?$allocator@N@std@@@std@@IAEPANV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@1@0PAN@Z")
#pragma comment(linker, "/include:??$swap@PAVMemoryDataParameter@caffe@@@std@@YAXAAPAVMemoryDataParameter@caffe@@0@Z")
#pragma comment(linker, "/include:??$?0V?$AccuracyLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$AccuracyLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_G?$ImageDataLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?default_instance_@ConcatParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??_7?$PositiveUnitballFiller@N@caffe@@6B@")
#pragma comment(linker, "/include:?Reshape@?$BaseConvolutionLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$swap@PAVSliceParameter@caffe@@@std@@YAXAAPAVSliceParameter@caffe@@0@Z")
#pragma comment(linker, "/include:?rand_skip@ImageDataParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?_Destroy@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@IAEXPAV?$vector@HV?$allocator@H@std@@@2@0@Z")
#pragma comment(linker, "/include:??_R2?$DataTransformer@N@caffe@@8")
#pragma comment(linker, "/include:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$ExpLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?ExpParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$ReductionLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?TYPE_SFIXED32@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Type@23@B")
#pragma comment(linker, "/include:??_C@_0BG@DBIPBGMD@indices?$FLi?$FN?5?$DM?5shape?$CIi?$CJ?$AA@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@BlobShape@caffe@@8")
#pragma comment(linker, "/include:??_C@_0CI@JAKCDEHJ@input_channels?5?$DN?$DN?5data_mean_?4cha@")
#pragma comment(linker, "/include:?unknown_fields@NetParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@PAMPBU_Container_base0@1@@Z")
#pragma comment(linker, "/include:?ldexp@@YAMMH@Z")
#pragma comment(linker, "/include:?MinTopBlobs@?$PoolingLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?has_stride_w@PoolingParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?has_net_param@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_7?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@6Bruntime_error@std@@@")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@SAIABV?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@Z")
#pragma comment(linker, "/include:?CopyTrainedLayersFrom@?$Net@N@caffe@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?assign@?$constrained_value@V?$simple_exception_policy@G$00$0M@Ubad_month@gregorian@boost@@@CV@boost@@@CV@boost@@AAEXG@Z")
#pragma comment(linker, "/include:??$_Distance2@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@0@0AAHUrandom_access_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??_C@_0BJ@BIMNOOHG@infogain?9?$DOwidth?$CI?$CJ?5?$DN?$DN?5dim?$AA@")
#pragma comment(linker, "/include:?Solve@?$Solver@N@caffe@@UAEXPBD@Z")
#pragma comment(linker, "/include:??_R4?$ReshapeLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??4SolverParameter@caffe@@QAEAAV01@ABV01@@Z")
#pragma comment(linker, "/include:??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@XZ")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@$$QAV23@@Z")
#pragma comment(linker, "/include:?encoded@Datum@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??0?$vector@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?max_size@?$vector@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:??_C@_0BI@MJJKEAIC@Unknown?5pooling?5method?4?$AA@")
#pragma comment(linker, "/include:?num@?$Blob@N@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?digits10@?$numeric_limits@_J@std@@2HB")
#pragma comment(linker, "/include:??_C@_0EP@NMIFGAAD@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?has_power_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R0?AV?$ArgMaxLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??_R0?AV?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@std@@QAEXPAV?$vector@HV?$allocator@H@std@@@2@I@Z")
#pragma comment(linker, "/include:??$MakeCheckOpValueString@PAV?$Blob@N@caffe@@@google@@YAXPAV?$basic_ostream@DU?$char_traits@D@std@@@std@@ABQAV?$Blob@N@caffe@@@Z")
#pragma comment(linker, "/include:??_R2?$SPPLayer@N@caffe@@8")
#pragma comment(linker, "/include:?kObjcClassPrefixFieldNumber@FileOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:??$forward@V?$vector@HV?$allocator@H@std@@@std@@@std@@YA$$QAV?$vector@HV?$allocator@H@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:?WriteEnumToArray@WireFormatLite@internal@protobuf@google@@SAPAEHHPAE@Z")
#pragma comment(linker, "/include:??$reset@V?$Filler@M@caffe@@@?$shared_ptr@V?$Filler@M@caffe@@@boost@@QAEXPAV?$Filler@M@caffe@@@Z")
#pragma comment(linker, "/include:?default_instance_@NetStateRule@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?val@?1???$get_min_shift_value@M@detail@math@boost@@YAMXZ@4MB")
#pragma comment(linker, "/include:?SolverState_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??$construct@U?$pair@MH@std@@U12@@?$allocator@U?$pair@MH@std@@@std@@QAEXPAU?$pair@MH@1@$$QAU21@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$ReLULayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_G?$shared_ptr@V?$Net@M@caffe@@@boost@@QAEPAXI@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@VGenerator@RNG@Caffe@caffe@@V1234@@detail@boost@@YAXPAV?$shared_ptr@VGenerator@RNG@Caffe@caffe@@@1@PAVGenerator@RNG@Caffe@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??$forward@AAPAV?$Blob@M@caffe@@@std@@YAAAPAV?$Blob@M@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?push_back@?$vector@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@2@@std@@QAEX$$QAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@2@@Z")
#pragma comment(linker, "/include:?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$Im2colLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?mutable_lrn_param@LayerParameter@caffe@@QAEPAVLRNParameter@2@XZ")
#pragma comment(linker, "/include:?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?value@?$is_reference_impl@ABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?const_max@?$integer_traits_base@C$0?IA@$0HP@@detail@boost@@2CB")
#pragma comment(linker, "/include:??$_Dist_type@PAU?$pair@MH@std@@@std@@YAPAHPAU?$pair@MH@0@@Z")
#pragma comment(linker, "/include:??0?$vector@VNetParameter@caffe@@V?$allocator@VNetParameter@caffe@@@std@@@std@@QAE@I@Z")
#pragma comment(linker, "/include:??0?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?MinTopBlobs@?$BaseConvolutionLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R3?$EuclideanLossLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$ConvolutionLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAV?$shared_ptr@V?$Net@M@caffe@@@boost@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@@std@@YAPAV?$shared_ptr@V?$Net@M@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:?generator@RNG@Caffe@caffe@@QAEPAXXZ")
#pragma comment(linker, "/include:?arity@?$function0@X@boost@@2HB")
#pragma comment(linker, "/include:?const_max@?$integer_traits_base@_J$0?IAAAAAAAAAAAAAAA@$0HPPPPPPPPPPPPPPP@@detail@boost@@2_JB")
#pragma comment(linker, "/include:__real@408f400000000000")
#pragma comment(linker, "/include:??_R1A@?0A@EA@DummyDataParameter@caffe@@8")
#pragma comment(linker, "/include:?AppendTop@?$Net@N@caffe@@IAEXABVNetParameter@2@HHPAV?$set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@5@@Z")
#pragma comment(linker, "/include:?set_has_pyramid_height@SPPParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?Backward_cpu@?$SPPLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?kSoftmaxParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@1@@Z")
#pragma comment(linker, "/include:?is_infinity@?$int_adapter@_J@date_time@boost@@QBE_NXZ")
#pragma comment(linker, "/include:?_Pop_back_n@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z")
#pragma comment(linker, "/include:??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABV21@@Z")
#pragma comment(linker, "/include:??_C@_0O@KNDGCLAH@height?$CI?$CJ?5?$DO?$DN?50?$AA@")
#pragma comment(linker, "/include:??$Check_LEImpl@NH@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABNABHPBD@Z")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$SoftmaxLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$SoftmaxLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?InternalThreadEntry@InternalThread@caffe@@MAEXXZ")
#pragma comment(linker, "/include:?InternalSwap@ContrastiveLossParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?value@?$length@V?$tuple@Unull_type@tuples@boost@@U123@U123@U123@U123@U123@U123@U123@U123@U123@@tuples@boost@@@tuples@boost@@2HB")
#pragma comment(linker, "/include:??$_Uninit_def_fill_n@PAV?$vector@_NV?$allocator@_N@std@@@std@@IV?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@V12@@std@@YAXPAV?$vector@_NV?$allocator@_N@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$ImageDataLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?set_axis@SoftmaxParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$ConcatLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?rng_stream@Caffe@caffe@@SAAAVRNG@12@XZ")
#pragma comment(linker, "/include:?kUninterpretedOptionFieldNumber@EnumOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:?InternalSwap@LRNParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:??_G?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@0@AAPAU10@@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VLogParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVLogParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?gcd_d1_d2@?$is_evenly_divisible_by@V?$ratio@$00$0DLJKMKAA@@boost@@V12@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:??_G?$TanHLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$construct@V?$vector@HV?$allocator@H@std@@@std@@$$$V@?$allocator_traits@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@1@PAV?$vector@HV?$allocator@H@std@@@1@@Z")
#pragma comment(linker, "/include:?height@?$Blob@N@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?_Grow_to@?$vector@MV?$allocator@M@std@@@std@@IBEII@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$ReductionLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??$_Val_type@PAM@std@@YAPAMPAM@Z")
#pragma comment(linker, "/include:??$_Unchecked@PAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@YAPAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@PAPAV10@@Z")
#pragma comment(linker, "/include:??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_G?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$make_pair@HAAH@std@@YA?AU?$pair@HH@0@$$QAHAAH@Z")
#pragma comment(linker, "/include:?_Swap_alloc@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VConcatParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVConcatParameter@caffe@@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$SPPLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??$digits@MU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@math@boost@@@policies@math@boost@@YAHXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$ImageDataLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R0?AV?$SGDSolver@N@caffe@@@8")
#pragma comment(linker, "/include:?ByteSize@ReductionParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_C@_0FF@LKLBGJEN@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:__real@4049000000000000")
#pragma comment(linker, "/include:?normalize_variance@MVNParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?JSType_ARRAYSIZE@FieldOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:??$?8V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@V01@@std@@YA_NABV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@0@0@Z")
#pragma comment(linker, "/include:?Reshape@?$InnerProductLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?value@?$is_xchar_to_xchar@_JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??1?$RepeatedField@M@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:?eltwise_param@LayerParameter@caffe@@QBEABVEltwiseParameter@2@XZ")
#pragma comment(linker, "/include:?Backward_gpu@?$SoftmaxLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$isnan@M@@YA_NM@Z")
#pragma comment(linker, "/include:??$?0V?$SoftmaxLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$SoftmaxLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$PowerLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?kMaxNumber@FieldDescriptor@protobuf@google@@2HB")
#pragma comment(linker, "/include:?Backward_cpu@?$HingeLossLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?has_image_data_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?data@?$Blob@I@caffe@@QBEABV?$shared_ptr@VSyncedMemory@caffe@@@boost@@XZ")
#pragma comment(linker, "/include:??$_Umove@PAM@?$vector@MV?$allocator@M@std@@@std@@IAEPAMPAM00@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?has_scale@ExpParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?protobuf_RegisterTypes@?A0x5e4fc710@caffe@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$FlattenLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?unknown_fields@ParamSpec@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?clear@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:??0InnerProductParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??_G?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ")
#pragma comment(linker, "/include:??_C@_0CC@KGBEODPP@Unknown?5SyncedMemory?5head?5state?3@")
#pragma comment(linker, "/include:?ByteSize@ArgMaxParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$addressof@PAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@0@AAPAU10@@Z")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??_R4?$UniformFiller@M@caffe@@6B@")
#pragma comment(linker, "/include:?set_stride@PoolingParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?PtrTag@InternalMetadataWithArena@internal@protobuf@google@@ABEHXZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$SplitLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?EnumSize@WireFormatLite@internal@protobuf@google@@SAHH@Z")
#pragma comment(linker, "/include:??1?$RepeatedPtrField@VNetParameter@caffe@@@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@@?$uniform_int@H@boost@@QBEHAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@1@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$Im2colLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?Clear@BlobProto@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?L1@HingeLossParameter@caffe@@2W4HingeLossParameter_Norm@2@B")
#pragma comment(linker, "/include:??$?8V?$allocator@D@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z")
#pragma comment(linker, "/include:??$construct@NN@?$allocator_traits@V?$allocator@N@std@@@std@@SAXAAV?$allocator@N@1@PAN$$QAN@Z")
#pragma comment(linker, "/include:?GetMetadata@InfogainLossParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?loss_weight@LayerParameter@caffe@@QBEMH@Z")
#pragma comment(linker, "/include:?value@?$is_pod_impl@$$CBX@detail@boost@@2_NB")
#pragma comment(linker, "/include:?state_size@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@2IB")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$AccuracyLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??$construct@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@QAEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@$$QAU21@@Z")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?value@?$enable_binary_hash@N$0DF@$0EAA@@hash_detail@boost@@2_NB")
#pragma comment(linker, "/include:?variance_norm@FillerParameter@caffe@@QBE?AW4FillerParameter_VarianceNorm@2@XZ")
#pragma comment(linker, "/include:??_G?$WindowDataLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?kPowerFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_Ebad_exception_@exception_detail@boost@@WBE@AEPAXI@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$LogLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??$caffe_sqr@M@caffe@@YAXHPBMPAM@Z")
#pragma comment(linker, "/include:??_R0?AV?$MemoryDataLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??0time_duration@posix_time@boost@@QAE@HHH_J@Z")
#pragma comment(linker, "/include:?swap@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:?is_nan@?$int_adapter@I@date_time@boost@@QBE_NXZ")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?Swap@ConcatParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:?mean_value_size@TransformationParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?_Root@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?gcd_d1_d2@?$is_evenly_divisible_by@V?$ratio@$00$0DOI@@boost@@V12@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:??_R0?AV?$Net@M@caffe@@@8")
#pragma comment(linker, "/include:??_G?$PositiveUnitballFiller@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?ByteSize@BlobProto@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?exclude_size@LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?set_has_shift@ExpParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?destroy@?$optional_base@Vlocale@std@@@optional_detail@boost@@IAEXXZ")
#pragma comment(linker, "/include:??$destroy@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@?$allocator_traits@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@1@PAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@1@@Z")
#pragma comment(linker, "/include:??1?$_Tree_buy@U?$pair@QBXUtss_data_node@detail@boost@@@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??1clone_base@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_R0?AV?$InfogainLossLayer@M@caffe@@@8")
#pragma comment(linker, "/include:??_C@_0DF@BFMBIAML@Exactly?5one?5input_shape?5must?5be?5@")
#pragma comment(linker, "/include:??_C@_0FG@KOLNFIAL@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?New@PReLUParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:?deallocate@?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEXPAV?$vector@_NV?$allocator@_N@std@@@2@I@Z")
#pragma comment(linker, "/include:__CT??_R0?AV?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@@8??0?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z44")
#pragma comment(linker, "/include:?SharedCtor@TransformationParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBU?$pair@HH@std@@U12@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?descriptor@SliceParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$destroy@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@QAEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@@Z")
#pragma comment(linker, "/include:?unknown_fields@ReductionParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??A?$map@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@@std@@QAEAAH$$QAU?$pair@HH@1@@Z")
#pragma comment(linker, "/include:??0?$allocator@N@std@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??0?$variate_generator@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@V?$normal_distribution@N@23@@random@boost@@QAE@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@V?$normal_distribution@N@12@@Z")
#pragma comment(linker, "/include:??0?$FlattenLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??0?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@QAE@ABU012@@Z")
#pragma comment(linker, "/include:??_R3DropoutParameter@caffe@@8")
#pragma comment(linker, "/include:?numeric@?$_Locbase@H@std@@2HB")
#pragma comment(linker, "/include:?Swap@InfogainLossParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??1Container@InternalMetadataWithArena@internal@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:??$_Unchecked@PBD@std@@YAPBDPBD@Z")
#pragma comment(linker, "/include:?value@?$is_xchar_to_xchar@GV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?mutable_learned_net@SolverState@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$ReshapeLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??0?$SigmoidLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?Clear@ContrastiveLossParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?SharedDtor@WindowDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?add_include@LayerParameter@caffe@@QAEPAVNetStateRule@2@XZ")
#pragma comment(linker, "/include:??_7?$ImageDataLayer@N@caffe@@6B?$BaseDataLayer@N@1@@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@ConvolutionParameter@caffe@@8")
#pragma comment(linker, "/include:?default_instance@HDF5OutputParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:?value@?$is_function_impl@PBC@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@VRNG@Caffe@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$?MNH@std@@YA_NABU?$pair@NH@0@0@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBU?$pair@HH@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@1@PAU?$pair@$$CBU?$pair@HH@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$DataTransformer@M@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?sumsq_data@?$Blob@N@caffe@@QBENXZ")
#pragma comment(linker, "/include:??$_Rechecked@PAV?$vector@HV?$allocator@H@std@@@std@@PAV12@@std@@YAAAPAV?$vector@HV?$allocator@H@std@@@0@AAPAV10@PAV10@@Z")
#pragma comment(linker, "/include:??_R0?AV?$BaseDataLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?Add@?$RepeatedPtrField@VV1LayerParameter@caffe@@@protobuf@google@@QAEPAVV1LayerParameter@caffe@@XZ")
#pragma comment(linker, "/include:??0?$UniformFiller@N@caffe@@QAE@ABVFillerParameter@1@@Z")
#pragma comment(linker, "/include:?AutoTopBlobs@?$Layer@M@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??$_Umove@PAV?$vector@HV?$allocator@H@std@@@std@@@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@IAEPAV?$vector@HV?$allocator@H@std@@@1@PAV21@00@Z")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@EBEXXZ")
#pragma comment(linker, "/include:??$addressof@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAPAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AAU10@@Z")
#pragma comment(linker, "/include:__CT??_R0?AV?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@@8??0?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z44")
#pragma comment(linker, "/include:??$_Ptr_cat@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@0@Z")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?SharedDtor@DataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0SolverParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??_7?$BilinearFiller@N@caffe@@6B@")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@PAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$ConcatLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$EuclideanLossLayer@N@caffe@@@boost@@YAXPAV?$EuclideanLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?blobs_size@V1LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?Forward_cpu@?$LRNLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_G?$FlattenLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z")
#pragma comment(linker, "/include:?InitAsDefaultInstance@SigmoidParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??1?$vector@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$ExpLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?MinTopBlobs@?$DummyDataLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@SPPParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R4?$FlattenLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEXXZ")
#pragma comment(linker, "/include:?set_bias_term@InnerProductParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:??$?0VSyncedMemory@caffe@@@?$shared_ptr@VSyncedMemory@caffe@@@boost@@QAE@PAVSyncedMemory@caffe@@@Z")
#pragma comment(linker, "/include:?InitTrainNet@?$Solver@N@caffe@@QAEXXZ")
#pragma comment(linker, "/include:?get_ptr_impl@?$optional_base@Vlocale@std@@@optional_detail@boost@@IAEPAVlocale@std@@XZ")
#pragma comment(linker, "/include:??_R17?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:??$Creator_LRNLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?set_has_current_step@SolverState@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?kJavaStringCheckUtf8FieldNumber@FileOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:??$_Unchecked@PAM@std@@YAPAMPAM@Z")
#pragma comment(linker, "/include:??_G?$AbsValLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?mutable_window_data_param@V1LayerParameter@caffe@@QAEPAVWindowDataParameter@2@XZ")
#pragma comment(linker, "/include:?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:?axis@ReductionParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?MergeFrom@SliceParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$?0V?$tuple@ABH@std@@V?$tuple@$$$V@1@$0A@$S@?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAV?$tuple@ABH@1@AAV?$tuple@$$$V@1@U?$_Arg_idx@$0A@@1@U?$_Arg_idx@$S@1@@Z")
#pragma comment(linker, "/include:??$?0V?$Filler@N@caffe@@@?$shared_ptr@V?$Filler@N@caffe@@@boost@@QAE@PAV?$Filler@N@caffe@@@Z")
#pragma comment(linker, "/include:?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z")
#pragma comment(linker, "/include:??_R0?AVV0LayerParameter@caffe@@@8")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VSliceParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVSliceParameter@caffe@@@Z")
#pragma comment(linker, "/include:?value@?$is_pod_impl@$$CCX@detail@boost@@2_NB")
#pragma comment(linker, "/include:?SUM@EltwiseParameter@caffe@@2W4EltwiseParameter_EltwiseOp@2@B")
#pragma comment(linker, "/include:?channel_shared@PReLUParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?digits10@?$numeric_limits@E@std@@2HB")
#pragma comment(linker, "/include:??_C@_09CBHIBNJM@Reduction?$AA@")
#pragma comment(linker, "/include:?Swap@PowerParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??$?0V?$ExpLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$ExpLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?value@?$is_const_rvalue_filter@H@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$forward@AAVDatum@caffe@@@std@@YAAAVDatum@caffe@@AAV12@@Z")
#pragma comment(linker, "/include:?mutable_root_folder@WindowDataParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?default_instance@ReshapeParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@2@@std@@YAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?_Destroy@?$vector@EV?$allocator@E@std@@@std@@IAEXPAE0@Z")
#pragma comment(linker, "/include:??$reset@V?$ConcatLayer@M@caffe@@@?$shared_ptr@V?$ConcatLayer@M@caffe@@@boost@@QAEXPAV?$ConcatLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?_Rmost@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??_R0?AVArgMaxParameter@caffe@@@8")
#pragma comment(linker, "/include:?monetary@?$_Locbase@H@std@@2HB")
#pragma comment(linker, "/include:?SharedCtor@SPPParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??1?$ArgMaxLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?set_has_negative_slope@ReLUParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$destroy@V?$vector@HV?$allocator@H@std@@@std@@@?$allocator_traits@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@1@PAV?$vector@HV?$allocator@H@std@@@1@@Z")
#pragma comment(linker, "/include:?set_has_dropout_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?CType_MIN@FieldOptions@protobuf@google@@2W4FieldOptions_CType@23@B")
#pragma comment(linker, "/include:?set_new_width@V0LayerParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?CopyFrom@ReLUParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R0?AVthread_exception@boost@@@8")
#pragma comment(linker, "/include:??0DropoutParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?start_thread@thread@boost@@AAEXXZ")
#pragma comment(linker, "/include:?delta@SolverParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:??$construct@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V12@@?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@QAEXPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@1@$$QAV21@@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$ReLULayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?blobs_lr_size@V1LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@HDF5OutputParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??_7ConvolutionParameter@caffe@@6B@")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$AbsValLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?_Tidy@?$vector@V?$shared_ptr@V?$Net@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:??0TanHParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?set_random_seed@Caffe@caffe@@SAXI@Z")
#pragma comment(linker, "/include:??$MakeCheckOpValueString@N@google@@YAXPAV?$basic_ostream@DU?$char_traits@D@std@@@std@@ABN@Z")
#pragma comment(linker, "/include:??_G?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?kNumOutputFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R0?AV?$SliceLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??$swap@PAVCursor@db@caffe@@@std@@YAXAAPAVCursor@db@caffe@@0@Z")
#pragma comment(linker, "/include:__real@8010000000000000")
#pragma comment(linker, "/include:?New@AccuracyParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??_G?$SplitLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$ArgMaxLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$construct@MAAM@?$allocator@M@std@@QAEXPAMAAM@Z")
#pragma comment(linker, "/include:?set_stride_h@ConvolutionParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??_7?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@6Bbad_exception@std@@@")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$SilenceLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$SPPLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_R2?$AdaGradSolver@N@caffe@@8")
#pragma comment(linker, "/include:?SharedCtor@Datum@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$checked_delete@V?$LRNLayer@N@caffe@@@boost@@YAXPAV?$LRNLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@thread_resource_error@boost@@8")
#pragma comment(linker, "/include:?set_has_out_max_val@ArgMaxParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$Creator_WindowDataLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@$$$V@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?capacity@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??1?$LRNLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?has_batch_size@HDF5DataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?type@?$FlattenLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??$Creator_Im2colLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?_Root@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?SharedCtor@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?MaxTopBlobs@?$SoftmaxWithLossLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R3SolverParameter@caffe@@8")
#pragma comment(linker, "/include:?Swap@SoftmaxParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:?set_width@Datum@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?has_root_folder@WindowDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?Swap@TransformationParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:?kStringValueFieldNumber@UninterpretedOption@protobuf@google@@2HB")
#pragma comment(linker, "/include:?has_test_compute_loss@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$AbsValLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?has_image_data_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?Reshape@?$Blob@H@caffe@@QAEXABVBlobShape@2@@Z")
#pragma comment(linker, "/include:??_7?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??_R4SliceParameter@caffe@@6B@")
#pragma comment(linker, "/include:?construct@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$Filler@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R0?AV?$DummyDataLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??_R3?$SplitLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$MakeCheckOpString@II@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI0PBD@Z")
#pragma comment(linker, "/include:??$ReadRepeatedPrimitive@_J$02@WireFormatLite@internal@protobuf@google@@SA_NHIPAVCodedInputStream@io@23@PAV?$RepeatedField@_J@23@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$MVNLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?Forward_gpu@?$BasePrefetchingDataLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_C@_0BD@JFIPEONN@width?5?$DM?$DN?5img_width?$AA@")
#pragma comment(linker, "/include:??$_Val_type@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@YAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@0@PAU10@@Z")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$vector@_NV?$allocator@_N@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@2@@std@@YAPAV?$vector@_NV?$allocator@_N@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_GFunctionClosure0@internal@protobuf@google@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$?0VDB@db@caffe@@@?$shared_ptr@VDB@db@caffe@@@boost@@QAE@PAVDB@db@caffe@@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$HingeLossLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$HingeLossLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QAE@ABV?$allocator@N@1@@Z")
#pragma comment(linker, "/include:?CopyFrom@InfogainLossParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$_Uninitialized_default_fill_n@PAV?$shared_ptr@V?$Net@N@caffe@@@boost@@IU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$Net@N@caffe@@@boost@@IAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VDropoutParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVDropoutParameter@caffe@@@Z")
#pragma comment(linker, "/include:?is_integral@?$integer_traits_base@_K$0A@$0?0@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$?0$$QAH$$$V@?$pair@$$CBHH@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAH@1@V?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$InfogainLossLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:__TI6?AV?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:??1?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$EuclideanLossLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$EuclideanLossLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?set_dropout_ratio@DropoutParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$BNLLLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?CopyFrom@DummyDataParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?clone@?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@PAV?$FlattenLayer@M@caffe@@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@IBEXPAPAV?$FlattenLayer@M@caffe@@0@Z")
#pragma comment(linker, "/include:?New@DataParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??$_Val_type@PAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@PAV12@@Z")
#pragma comment(linker, "/include:?params@?$Net@N@caffe@@QBEABV?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@XZ")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVBlobProtoVector@caffe@@@internal@protobuf@google@@YAPBVBlobProtoVector@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?value@?$integral_c@I$07@mpl@boost@@2IB")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??_C@_0CF@OOEMCO@Inputs?5must?5have?5the?5same?5dimens@")
#pragma comment(linker, "/include:??_7too_few_args@io@boost@@6B@")
#pragma comment(linker, "/include:?value@?$is_pointer_impl@_J@detail@boost@@2_NB")
#pragma comment(linker, "/include:?set_has_window_data_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$HingeLossLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??$_Move@AAPAVLossParameter@caffe@@@std@@YA$$QAPAVLossParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??$Create@VNetParameter@caffe@@@Arena@protobuf@google@@SAPAVNetParameter@caffe@@PAV012@@Z")
#pragma comment(linker, "/include:?set_has_pad_h@PoolingParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?NetNeedsV1ToV2Upgrade@caffe@@YA_NABVNetParameter@1@@Z")
#pragma comment(linker, "/include:??_7?$Solver@N@caffe@@6B@")
#pragma comment(linker, "/include:??_C@_0KC@BJKJJFPG@Check?5failed?3?5?$CI?$CBconv_param?4has_s@")
#pragma comment(linker, "/include:??_7?$MemoryDataLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@VCaffe@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?Forward_gpu@?$ExpLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:__real@4008000000000000")
#pragma comment(linker, "/include:?unknown_fields@PythonParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_G?$DataLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$DropoutLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VInfogainLossParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVInfogainLossParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0BC@DJACJNDN@Datum?5not?5encoded?$AA@")
#pragma comment(linker, "/include:?Add@?$RepeatedPtrField@VBlobProto@caffe@@@protobuf@google@@QAEPAVBlobProto@caffe@@XZ")
#pragma comment(linker, "/include:?New@?$GenericTypeHandler@VParamSpec@caffe@@@internal@protobuf@google@@SAPAVParamSpec@caffe@@PAVArena@34@@Z")
#pragma comment(linker, "/include:?type@?$Im2colLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z")
#pragma comment(linker, "/include:?type@?$AbsValLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?NetNeedsV0ToV1Upgrade@caffe@@YA_NABVNetParameter@1@@Z")
#pragma comment(linker, "/include:?_Grow_to@?$vector@V?$shared_ptr@V?$Net@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@IBEII@Z")
#pragma comment(linker, "/include:??R?$variate_generator@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@V?$uniform_real@N@3@@random@boost@@QAENXZ")
#pragma comment(linker, "/include:?float_data_size@Datum@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?width@BlobProto@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??_R0?AV?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:?SolverMode_ARRAYSIZE@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R2?$LRNLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$sp_pointer_construct@$$CBVclone_base@exception_detail@boost@@V?$clone_impl@Ubad_exception_@exception_detail@boost@@@23@@detail@boost@@YAXPAV?$shared_ptr@$$CBVclone_base@exception_detail@boost@@@1@PAV?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@1@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?New@?$GenericTypeHandler@VV1LayerParameter@caffe@@@internal@protobuf@google@@SAPAVV1LayerParameter@caffe@@PAVArena@34@@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVInnerProductParameter@caffe@@@internal@protobuf@google@@YAPBVInnerProductParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?_Reallocate@?$vector@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@NetParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$ReductionLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?set_mirror@ImageDataParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:?initializer@?$min_shift_initializer@M@detail@math@boost@@2Uinit@1234@B")
#pragma comment(linker, "/include:?value@?$integral_constant@_N$00@std@@2_NB")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$InfogainLossLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?MergeFrom@NetStateRule@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_C@_0CK@HHPCIFGC@?5does?5not?5transform?5array?5data?5o@")
#pragma comment(linker, "/include:??$destroy@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@?$allocator_traits@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@1@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@1@@Z")
#pragma comment(linker, "/include:?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$SigmoidLayer@M@caffe@@@detail@boost@@QAE@PAV?$SigmoidLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??1?$ConstantFiller@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?shape@?$Blob@N@caffe@@QBEABV?$vector@HV?$allocator@H@std@@@std@@XZ")
#pragma comment(linker, "/include:?Reshape@?$SplitLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?SliceParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_pd@PAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@VNo_Op@?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@23@@detail@boost@@8")
#pragma comment(linker, "/include:?default_instance@ReLUParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??_C@_0BE@KIADBBHK@crop_size?5?$DN?$DN?5height?$AA@")
#pragma comment(linker, "/include:?Backward_cpu@?$Im2colLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$fill@PAMM@std@@YAXPAM0ABM@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$EuclideanLossLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??1ReductionParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$ConcatLayer@N@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ")
#pragma comment(linker, "/include:??_7?$HingeLossLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??1?$NeuronLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R0?AV?$ExpLayer@M@caffe@@@8")
#pragma comment(linker, "/include:??$construct@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@U12@@?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@QAEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@$$QAU21@@Z")
#pragma comment(linker, "/include:?begin@?$vector@MV?$allocator@M@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??0?$ExpLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z")
#pragma comment(linker, "/include:?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??1?$Solver@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?value@?$is_scalar_impl@$$CDX@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_G?$Net@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$caffe_nextafter@M@caffe@@YAMM@Z")
#pragma comment(linker, "/include:?ByteSize@SliceParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?clear@?$vector@IV?$allocator@_N@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:??_R0?AV?$ExpLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??$col2im_cpu@M@caffe@@YAXPBMHHHHHHHHHPAM@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$SliceLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$ArgMaxLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?radix@_Num_float_base@std@@2HB")
#pragma comment(linker, "/include:?max@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@SAIXZ")
#pragma comment(linker, "/include:?ByteSize@NetParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$DeconvolutionLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?data_param@LayerParameter@caffe@@QBEABVDataParameter@2@XZ")
#pragma comment(linker, "/include:??_C@_0DE@BIPCGGEE@target_blobs?4size?$CI?$CJ?5?$DN?$DN?5source_la@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@PReLUParameter@caffe@@8")
#pragma comment(linker, "/include:??$?0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@@std@@QAE@ABV?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@1@@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$DropoutLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$move@AAV?$tuple@$$QAU?$pair@HH@std@@@std@@@std@@YA$$QAV?$tuple@$$QAU?$pair@HH@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:?has_min@FillerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@@Z")
#pragma comment(linker, "/include:??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??_R4?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@6Bbad_exception@std@@@")
#pragma comment(linker, "/include:?IsInitialized@NetState@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??$_Allocate@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@IPAV12@@Z")
#pragma comment(linker, "/include:??1?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?mutable_gpu_data@?$Blob@H@caffe@@QAEPAHXZ")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@AAE@ABV012@Uclone_tag@012@@Z")
#pragma comment(linker, "/include:??$?0AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$vector@HV?$allocator@H@std@@@1@X@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV?$vector@HV?$allocator@H@std@@@1@@Z")
#pragma comment(linker, "/include:??_7?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@$$QA_N@Z")
#pragma comment(linker, "/include:?New@MVNParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$WindowDataLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$WindowDataLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??$OwnInternal@VDropoutParameter@caffe@@@Arena@protobuf@google@@AAEXPAVDropoutParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:??$?0V?$TanHLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$TanHLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$EuclideanLossLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0?$vector@_NV?$allocator@_N@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@?$bernoulli_distribution@M@random@boost@@QBE_NAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@@Z")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$SplitLayer@N@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??$Creator_SigmoidCrossEntropyLossLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?New@FlattenParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?top@LayerParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z")
#pragma comment(linker, "/include:?Reshape@?$ReductionLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?kHdf5DataParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??0?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?kPowerParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$caffe_cpu_axpby@N@caffe@@YAXHNPBNNPAN@Z")
#pragma comment(linker, "/include:??$Creator_SliceLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBU?$pair@HH@std@@U12@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?norm@HingeLossParameter@caffe@@QBE?AW4HingeLossParameter_Norm@2@XZ")
#pragma comment(linker, "/include:??_R4?$ThresholdLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$swap@_N@std@@YAXAA_N0@Z")
#pragma comment(linker, "/include:??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z")
#pragma comment(linker, "/include:??_C@_0CA@GBGHBDPP@top?4size?$CI?$CJ?5?$DN?$DN?5bottom?4size?$CI?$CJ?5?9?51?$AA@")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VArgMaxParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVArgMaxParameter@caffe@@@Z")
#pragma comment(linker, "/include:??$GetReferenceableValue@PAV?$Blob@M@caffe@@@google@@YAABQAV?$Blob@M@caffe@@ABQAV12@@Z")
#pragma comment(linker, "/include:?Rand@?$DataTransformer@N@caffe@@MAEHH@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$SoftmaxLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?mutable_source@V0LayerParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?Clear@?$GenericTypeHandler@VNetState@caffe@@@internal@protobuf@google@@SAXPAVNetState@caffe@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@TransformationParameter@caffe@@8")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$Filler@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?Forward_gpu@?$FilterLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R4?$GaussianFiller@M@caffe@@6B@")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$InnerProductLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?add_blobs@V0LayerParameter@caffe@@QAEPAVBlobProto@2@XZ")
#pragma comment(linker, "/include:??$_Unchecked@PAU?$pair@HH@std@@@std@@YAPAU?$pair@HH@0@PAU10@@Z")
#pragma comment(linker, "/include:??_C@_0DI@GDMCLBMH@Check?5failed?3?5ReadProtoFromBinar@")
#pragma comment(linker, "/include:?kDetContextPadFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R0?AV?$SigmoidLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??_C@_0ED@FIPDPHMH@Padding?5layer?5input?5to?5non?9convo@")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$AccuracyLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$AccuracyLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??0?$PositiveUnitballFiller@N@caffe@@QAE@ABVFillerParameter@1@@Z")
#pragma comment(linker, "/include:??_GPythonParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?BackwardFromTo@?$Net@N@caffe@@QAEXHH@Z")
#pragma comment(linker, "/include:??$_Ptr_cat@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:??$arena_destruct_object@VBlobShape@caffe@@@internal@protobuf@google@@YAXPAX@Z")
#pragma comment(linker, "/include:?gInstantiationGuardBaseDataLayer@caffe@@3DA")
#pragma comment(linker, "/include:??_7?$SilenceLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?kForceEncodedColorFieldNumber@DataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?default_instance_@PReLUParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R2?$XavierFiller@M@caffe@@8")
#pragma comment(linker, "/include:??_R3thread_exception@boost@@8")
#pragma comment(linker, "/include:??_C@_04CNBNFAL@step?$AA@")
#pragma comment(linker, "/include:?_Lbound@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@ABU?$pair@HH@2@@Z")
#pragma comment(linker, "/include:??_R0?AV?$FlattenLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?tick_per_second@millisec_posix_time_system_config@posix_time@boost@@2_JB")
#pragma comment(linker, "/include:??$OwnInternal@VLayerParameter@caffe@@@Arena@protobuf@google@@AAEXPAVLayerParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:??$do_format@V?$basic_format@DU?$char_traits@D@std@@V?$allocator@D@2@@boost@@U?$group1@U?$group2@U?$_Smanip@_J@std@@ABN@detail@io@boost@@@detail@io@2@@detail@policies@math@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_format@DU?$char_traits@D@std@@V?$allocator@D@2@@3@ABU?$group1@U?$group2@U?$_Smanip@_J@std@@ABN@detail@io@boost@@@0io@3@@Z")
#pragma comment(linker, "/include:?kIsColorFieldNumber@ImageDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$SplitLayer@M@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?DataLayerSetUp@?$WindowDataLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?SliceParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?IsInitialized@InfogainLossParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?kReshapeParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$back_inserter@V?$vector@HV?$allocator@H@std@@@std@@@std@@YA?AV?$back_insert_iterator@V?$vector@HV?$allocator@H@std@@@std@@@0@AAV?$vector@HV?$allocator@H@std@@@0@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$LogLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?value@?$alignment_logic@$07$07@detail@boost@@2IB")
#pragma comment(linker, "/include:??0PowerParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?allocate@?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@QAEPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@I@Z")
#pragma comment(linker, "/include:?kReductionParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$_Umove@PAV?$vector@_NV?$allocator@_N@std@@@std@@@?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@IAEPAV?$vector@_NV?$allocator@_N@std@@@1@PAV21@00@Z")
#pragma comment(linker, "/include:??$_Val_type@PAPAV?$Blob@M@caffe@@@std@@YAPAPAV?$Blob@M@caffe@@PAPAV12@@Z")
#pragma comment(linker, "/include:??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@NH@std@@@std@@@std@@@std@@QBE?AV01@H@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@Closure@protobuf@google@@8")
#pragma comment(linker, "/include:??1MemoryDataParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$?0VLayerParameter@caffe@@@?$shared_ptr@VLayerParameter@caffe@@@boost@@QAE@PAVLayerParameter@caffe@@@Z")
#pragma comment(linker, "/include:?clear_mean_file@WindowDataParameter@caffe@@QAEXXZ")
#pragma comment(linker, "/include:??_G?$XavierFiller@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R0?AU?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:?max_iter@SolverParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?unknown_fields@LogParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_7?$PReLULayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?CopyFrom@InnerProductParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_7?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$ConvolutionLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VNetParameter@caffe@@V?$allocator@VNetParameter@caffe@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VNetParameter@caffe@@@std@@@2@XZ")
#pragma comment(linker, "/include:?set_name@ParamSpec@caffe@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?digits10@?$numeric_limits@H@std@@2HB")
#pragma comment(linker, "/include:??$?0V?$SliceLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$SliceLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@QAE@PAV?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@2@@Z")
#pragma comment(linker, "/include:??_R3HingeLossParameter@caffe@@8")
#pragma comment(linker, "/include:??_C@_09LNEFIGAK@DummyData?$AA@")
#pragma comment(linker, "/include:?size@?$RepeatedField@_J@protobuf@google@@QBEHXZ")
#pragma comment(linker, "/include:??$?0V?$InnerProductLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$InnerProductLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?type@?$SplitLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?value@?$abs_wknd@_J$0DLJKMKAA@@aux@mpl@boost@@2_JB")
#pragma comment(linker, "/include:??_7?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:?neg_infinity@?$int_adapter@_J@date_time@boost@@SA?BV123@XZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$ReshapeLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$ReshapeLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$EuclideanLossLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$EuclideanLossLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?set_engine@SoftmaxParameter@caffe@@QAEXW4SoftmaxParameter_Engine@2@@Z")
#pragma comment(linker, "/include:??D?$shared_ptr@V?$Blob@N@caffe@@@boost@@QBEAAV?$Blob@N@caffe@@XZ")
#pragma comment(linker, "/include:?PoolMethod_MIN@V0LayerParameter@caffe@@2W4V0LayerParameter_PoolMethod@2@B")
#pragma comment(linker, "/include:?GetMetadata@ImageDataParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_C@_0O@EBFMMLFL@?5out?5of?5range?$AA@")
#pragma comment(linker, "/include:??G?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QBEHABV01@@Z")
#pragma comment(linker, "/include:?add_not_stage@NetStateRule@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??0DataParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?HDF5OutputParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?_Change_alloc@?$_Vector_alloc@$0A@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@N@std@@@2@@Z")
#pragma comment(linker, "/include:?TYPE_SINT32@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Type@23@B")
#pragma comment(linker, "/include:?MergeFrom@HDF5DataParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?_Reallocate@?$vector@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:__real@7effffff")
#pragma comment(linker, "/include:??1TransformationParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_G?$SoftmaxWithLossLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_C@_0ED@EGILLHNJ@Must?5specify?5either?5input_shape?5@")
#pragma comment(linker, "/include:??$set_info@V?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@@exception_detail@boost@@YAABV?$clone_impl@Ubad_exception_@exception_detail@boost@@@01@ABV201@ABV?$error_info@Uthrow_file_@boost@@PBD@1@@Z")
#pragma comment(linker, "/include:?set_has_kernel_w@PoolingParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$?0ABU?$pair@HH@std@@PAPAX@?$tuple@ABU?$pair@HH@std@@@std@@QAE@$$QAV01@@Z")
#pragma comment(linker, "/include:?length@?$char_traits@D@std@@SAIPBD@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$Layer@M@caffe@@@boost@@YAXPAV?$Layer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_E?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@WM@AEPAXI@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$HingeLossLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R0?AVexception@boost@@@8")
#pragma comment(linker, "/include:??$MergeFromInnerLoop@VTypeHandler@?$RepeatedPtrField@VNetState@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@AAEXPAPAX0HH@Z")
#pragma comment(linker, "/include:?InternalSwap@?$RepeatedField@H@protobuf@google@@AAEXPAV123@@Z")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@$$QAV34@@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@ReshapeParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?clear_float_data@Datum@caffe@@QAEXXZ")
#pragma comment(linker, "/include:??_G?$DropoutLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R2?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?CopyFrom@SPPParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?value@?$abs_wknd@_J$0DOI@@aux@mpl@boost@@2_JB")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@M@caffe@@@detail@boost@@QAE@PAV?$MultinomialLogisticLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QAEAAV01@H@Z")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAE@ABV?$allocator@H@1@@Z")
#pragma comment(linker, "/include:??$construct@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@U1234@@?$_Wrap_alloc@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@QAEXPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@$$QAU2345@@Z")
#pragma comment(linker, "/include:?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$PReLULayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?is_exact@_Num_base@std@@2_NB")
#pragma comment(linker, "/include:??_C@_0DH@NILJDGOC@Input?5size?5incompatible?5with?5inn@")
#pragma comment(linker, "/include:?WriteProtoToBinaryFile@caffe@@YAXABVMessage@protobuf@google@@PBD@Z")
#pragma comment(linker, "/include:??1bad_year@gregorian@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_C@_0BF@NFFFEOIE@The?5NetState?5level?5?$CI?$AA@")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$ContrastiveLossLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?shift@ExpParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:??A?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QAEAAV?$vector@HV?$allocator@H@std@@@1@I@Z")
#pragma comment(linker, "/include:?end@?$RepeatedField@I@protobuf@google@@QBEPBIXZ")
#pragma comment(linker, "/include:?kNameFieldNumber@NetParameter@caffe@@2HB")
#pragma comment(linker, "/include:?cropsize@V0LayerParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Net@N@caffe@@@boost@@V12@@?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Net@N@caffe@@@boost@@$$QAV23@@Z")
#pragma comment(linker, "/include:?push_back@?$vector@NV?$allocator@N@std@@@std@@QAEXABN@Z")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Net@M@caffe@@@boost@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Net@M@caffe@@@boost@@$$QAV23@@Z")
#pragma comment(linker, "/include:?SolverParameter_SolverMode_descriptor@caffe@@YAPBVEnumDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??0?$group1@ABM@detail@io@boost@@QAE@ABM@Z")
#pragma comment(linker, "/include:?capacity@?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$_Uninitialized_default_fill_n@PAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@IU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@IAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_R0?AV?$NesterovSolver@M@caffe@@@8")
#pragma comment(linker, "/include:??_E?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@$4PPPPPPPM@A@AEPAXI@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?WriteUInt32ToArray@WireFormatLite@internal@protobuf@google@@SAPAEHIPAE@Z")
#pragma comment(linker, "/include:??_E?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@WM@AEPAXI@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VEltwiseParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVEltwiseParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:??$vDiv@N@@YAXHPBN0PAN@Z")
#pragma comment(linker, "/include:??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@")
#pragma comment(linker, "/include:??_C@_0JJ@ILPDDDAF@Check?5failed?3?5?$CB?$CIthis?9?$DOlayer_para@")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VNetState@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVNetState@caffe@@@Z")
#pragma comment(linker, "/include:?gInstantiationGuardSilenceLayer@caffe@@3DA")
#pragma comment(linker, "/include:??$forward@V?$bind_t@XV?$mf0@XVInternalThread@caffe@@@_mfi@boost@@V?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@3@@_bi@boost@@@boost@@YA$$QAV?$bind_t@XV?$mf0@XVInternalThread@caffe@@@_mfi@boost@@V?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@3@@_bi@0@AAV120@@Z")
#pragma comment(linker, "/include:?is_signed@?$numeric_limits@K@std@@2_NB")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$Layer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?train_net@SolverParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?CopyFrom@ArgMaxParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$DataLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??$swap@PAV?$PowerLayer@N@caffe@@@std@@YAXAAPAV?$PowerLayer@N@caffe@@0@Z")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VReductionParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVReductionParameter@caffe@@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$ReductionLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?phase@NetStateRule@caffe@@QBE?AW4Phase@2@XZ")
#pragma comment(linker, "/include:?ByteSize@SoftmaxParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?value@?$is_unsigned_imp@_J@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R2?$ReductionLayer@N@caffe@@8")
#pragma comment(linker, "/include:?diff_at@?$Blob@I@caffe@@QBEIABV?$vector@HV?$allocator@H@std@@@std@@@Z")
#pragma comment(linker, "/include:?_Tidy@?$vector@IV?$allocator@_N@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$InfogainLossLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$InfogainLossLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PAF@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R0?AVthread_resource_error@boost@@@8")
#pragma comment(linker, "/include:??$construct@PAV?$FlattenLayer@M@caffe@@PAV12@@?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@QAEXPAPAV?$FlattenLayer@M@caffe@@$$QAPAV23@@Z")
#pragma comment(linker, "/include:??_G?$basic_fstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z")
#pragma comment(linker, "/include:??1?$DataLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$AbsValLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_C@_0O@HNOJGGIG@Opening?5file?5?$AA@")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@QAEPAPAV?$Blob@N@caffe@@I@Z")
#pragma comment(linker, "/include:??$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAHV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@0@0@Z")
#pragma comment(linker, "/include:?size@?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$caffe_rng_gaussian@N@caffe@@YAXHNNPAN@Z")
#pragma comment(linker, "/include:?CheckBlobCounts@?$Layer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$EltwiseLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R3ConvolutionParameter@caffe@@8")
#pragma comment(linker, "/include:??_R2?$ReshapeLayer@M@caffe@@8")
#pragma comment(linker, "/include:?Backward_gpu@?$DropoutLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?Clear@?$RepeatedPtrField@VLayerParameter@caffe@@@protobuf@google@@QAEXXZ")
#pragma comment(linker, "/include:??$_Uninit_def_fill_n@PAV?$shared_ptr@V?$Net@M@caffe@@@boost@@IV?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@V12@@std@@YAXPAV?$shared_ptr@V?$Net@M@caffe@@@boost@@IAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?GetMetadata@LogParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$Blob@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?Reshape@?$FilterLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R4?$BasePrefetchingDataLayer@M@caffe@@6B?$BaseDataLayer@M@1@@")
#pragma comment(linker, "/include:?max_size@?$allocator@N@std@@QBEIXZ")
#pragma comment(linker, "/include:?size@?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$PowerLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$WindowDataLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??0?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@2@XZ")
#pragma comment(linker, "/include:?MaxTopBlobs@?$SPPLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_7?$EuclideanLossLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??_7?$SPPLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$DummyDataLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$swap@PAVThresholdParameter@caffe@@@std@@YAXAAPAVThresholdParameter@caffe@@0@Z")
#pragma comment(linker, "/include:?has_decay_mult@ParamSpec@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$Creator_FlattenLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$FilterLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?HDF5OutputParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??_R0?AV?$ContrastiveLossLayer@M@caffe@@@8")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z")
#pragma comment(linker, "/include:?default_instance@FillerParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@MemoryDataParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$SigmoidLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_7bad_exception@std@@6B@")
#pragma comment(linker, "/include:?kJavaGenericServicesFieldNumber@FileOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:??$construct@U?$pair@HH@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@HH@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@HH@std@@@1@PAU?$pair@HH@1@$$QAU31@@Z")
#pragma comment(linker, "/include:??$copy@PB_JPA_J@std@@YAPA_JPB_J0PA_J@Z")
#pragma comment(linker, "/include:??_C@_0GI@HKJJNJAI@Check?5failed?3?5conv_param?4has_ker@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$DropoutLayer@N@caffe@@8")
#pragma comment(linker, "/include:?IsInitialized@BlobShape@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??_C@_0EL@KABPEOPP@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?UnsafeArenaSwap@?$RepeatedPtrField@VNetParameter@caffe@@@protobuf@google@@QAEXPAV123@@Z")
#pragma comment(linker, "/include:?max_size@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?value@?$is_function_impl@Udefault_barrier_reseter@thread_detail@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?shape@?$Blob@M@caffe@@QBEHH@Z")
#pragma comment(linker, "/include:?ReLUParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?num@?$ratio@$00$0CHBA@@boost@@2_JB")
#pragma comment(linker, "/include:?Fill@?$XavierFiller@M@caffe@@UAEXPAV?$Blob@M@2@@Z")
#pragma comment(linker, "/include:?swap@?$shared_ptr@V?$PowerLayer@M@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:?_Tidy@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:?kWeakDependencyFieldNumber@FileDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?LayerSetUp@?$ReshapeLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?Fill@?$BilinearFiller@N@caffe@@UAEXPAV?$Blob@N@2@@Z")
#pragma comment(linker, "/include:?min_exponent10@_Num_base@std@@2HB")
#pragma comment(linker, "/include:??$Creator_SoftmaxWithLossLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?_Freenode0@?$_Tree_buy@U?$pair@$$CBU?$pair@HH@std@@M@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?Swap@BlobProto@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PAPAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?MinTopBlobs@?$SoftmaxWithLossLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_GSPPParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?V1LayerParameter_DimCheckMode_IsValid@caffe@@YA_NH@Z")
#pragma comment(linker, "/include:?default_instance_@ThresholdParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?default_instance@InfogainLossParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z")
#pragma comment(linker, "/include:??_R4?$SGDSolver@M@caffe@@6B@")
#pragma comment(linker, "/include:??$_Uninit_move@PAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@PAU12@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@2@U12@@std@@YAPAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?kUninterpretedOptionFieldNumber@ServiceOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:??$arena_destruct_object@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@internal@protobuf@google@@YAXPAX@Z")
#pragma comment(linker, "/include:?new_num@V0LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?has_kernelsize@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?set_has_argmax_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?has_base_lr@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?gInstantiationGuardFilterLayer@caffe@@3DA")
#pragma comment(linker, "/include:??$checked_delete@V?$PowerLayer@N@caffe@@@boost@@YAXPAV?$PowerLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?Reshape@?$Blob@N@caffe@@QAEXABV?$vector@HV?$allocator@H@std@@@std@@@Z")
#pragma comment(linker, "/include:?EltwiseParameter_EltwiseOp_descriptor_@?A0x5e4fc710@caffe@@3PBVEnumDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??_C@_0M@NCMLFGLC@?$CIautomatic?$CJ?$AA@")
#pragma comment(linker, "/include:??_R3?$MSRAFiller@M@caffe@@8")
#pragma comment(linker, "/include:??A?$vector@EV?$allocator@E@std@@@std@@QAEAAEI@Z")
#pragma comment(linker, "/include:?_Free_proxy@?$_Vb_val@V?$allocator@_N@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:??$forward@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@YA$$QAV?$shared_ptr@V?$Net@M@caffe@@@boost@@AAV12@@Z")
#pragma comment(linker, "/include:??$addressof@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@YAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@0@AAU10@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$ContrastiveLossLayer@N@caffe@@@detail@boost@@QAE@PAV?$ContrastiveLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?is_iec559@_Num_base@std@@2_NB")
#pragma comment(linker, "/include:??$Creator_DummyDataLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?Swap@NetState@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Net@N@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@V?$Net@N@caffe@@@1@PAV?$Net@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@TanHParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$_Uninit_def_fill_n@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@IV?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@V12@@std@@YAXPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?DataLayerSetUp@?$ImageDataLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??1?$DeconvolutionLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_C@_0BH@DNJPPKEP@lines_size?5?$DO?5lines_id_?$AA@")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$ImageDataLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?IsInitialized@ReLUParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?Reshape@?$SliceLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0?$arg@$05@boost@@QAE@XZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@LogParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$DropoutLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?set_has_ignore_label@LossParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@1@@Z")
#pragma comment(linker, "/include:?digits@?$numeric_limits@H@std@@2HB")
#pragma comment(linker, "/include:?set_rand_skip@V0LayerParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?kTestComputeLossFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:?GetMetadata@SPPParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$MemoryDataLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$construct@PAV?$Blob@N@caffe@@AAPAV12@@?$allocator_traits@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@SAXAAV?$allocator@PAV?$Blob@N@caffe@@@1@PAPAV?$Blob@N@caffe@@AAPAV34@@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$InnerProductLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z")
#pragma comment(linker, "/include:?IsInitialized@PReLUParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$DummyDataLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?neg_infinity@?$int_adapter@I@date_time@boost@@SA?BV123@XZ")
#pragma comment(linker, "/include:??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@")
#pragma comment(linker, "/include:??_C@_0BI@KHJPMONE@bottom?$FL2?$FN?9?$DOwidth?$CI?$CJ?5?$DN?$DN?51?$AA@")
#pragma comment(linker, "/include:?set_has_shape@ReshapeParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??1?$PReLULayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$get@$0A@$$QAH@std@@YA$$QAH$$QAV?$tuple@$$QAH@0@@Z")
#pragma comment(linker, "/include:??_C@_0DC@HPEEKADD@Unknown?5parameter?5det_context_pa@")
#pragma comment(linker, "/include:?SetUp@?$Layer@N@caffe@@QAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_C@_0CL@JKDGFCDE@bottom?$FL0?$FN?9?$DOcount?$CI1?$CJ?5?$DN?$DN?5bottom?$FL1?$FN@")
#pragma comment(linker, "/include:?CaffeMallocHost@caffe@@YAXPAPAXI@Z")
#pragma comment(linker, "/include:??0Generator@RNG@Caffe@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?CAFFE@SigmoidParameter@caffe@@2W4SigmoidParameter_Engine@2@B")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$ImageDataLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@QAEXPAPAV?$Blob@M@caffe@@I@Z")
#pragma comment(linker, "/include:?min@?$simple_exception_policy@G$00$0M@Ubad_month@gregorian@boost@@@CV@boost@@SAGXZ")
#pragma comment(linker, "/include:?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ")
#pragma comment(linker, "/include:?mutable_unknown_fields@FillerParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_7?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@6Btoo_many_args@io@2@@")
#pragma comment(linker, "/include:?ForwardPrefilled@?$Net@N@caffe@@QAEABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@PAN@Z")
#pragma comment(linker, "/include:??$?0V?$SliceLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$SliceLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?train_net_param@SolverParameter@caffe@@QBEABVNetParameter@2@XZ")
#pragma comment(linker, "/include:??_R2?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?set_has_data_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_7sp_counted_base@detail@boost@@6B@")
#pragma comment(linker, "/include:??$nextafter@MM@math@boost@@YAMABM0@Z")
#pragma comment(linker, "/include:??$Check_GEImpl@MH@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABMABHPBD@Z")
#pragma comment(linker, "/include:??_G?$ConvolutionLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?kSigmoidParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?MinTopBlobs@?$SplitLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??0?$Layer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$SliceLayer@M@caffe@@@detail@boost@@QAE@PAV?$SliceLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@format_error@io@boost@@8")
#pragma comment(linker, "/include:?construct@?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEXPAV?$vector@_NV?$allocator@_N@std@@@2@@Z")
#pragma comment(linker, "/include:??$?0V?$MemoryDataLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$MemoryDataLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?kPyramidHeightFieldNumber@SPPParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@SPPParameter@caffe@@8")
#pragma comment(linker, "/include:?New@WindowDataParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??_R4?$TanHLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??$Own@VDataParameter@caffe@@@Arena@protobuf@google@@QAEXPAVDataParameter@caffe@@@Z")
#pragma comment(linker, "/include:?system_category@std@@YAABVerror_category@1@XZ")
#pragma comment(linker, "/include:?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?_Key@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@IBEABU?$pair@HH@2@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$InnerProductLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?channels@?$MemoryDataLayer@N@caffe@@QAEHXZ")
#pragma comment(linker, "/include:??$_Move@AAPAVThresholdParameter@caffe@@@std@@YA$$QAPAVThresholdParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??$?0V?$MemoryDataLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$MemoryDataLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?default_instance_@HDF5OutputParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?value@?$trait_impl1@V?$basic_istream@DU?$char_traits@D@std@@@std@@FUdont_care@has_right_shift_impl@detail@boost@@$0A@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:?kTopKFieldNumber@ArgMaxParameter@caffe@@2HB")
#pragma comment(linker, "/include:?mutable_hdf5_output_param@LayerParameter@caffe@@QAEPAVHDF5OutputParameter@2@XZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$DropoutLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?mutable_data@?$RepeatedField@M@protobuf@google@@QAEPAMXZ")
#pragma comment(linker, "/include:?value@?$br_mul@$00$0PECEA@@ratio_detail@boost@@2_JB")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$ThresholdLayer@N@caffe@@@detail@boost@@QAE@PAV?$ThresholdLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$?0V?$InfogainLossLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$InfogainLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?CopyFrom@PoolingParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@N@caffe@@@detail@boost@@QAE@PAV?$MultinomialLogisticLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$construct@MAAM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAEXPAMAAM@Z")
#pragma comment(linker, "/include:??_C@_04MJLKEOMN@ReLU?$AA@")
#pragma comment(linker, "/include:??0?$ArgMaxLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@1@AAPAU21@@Z")
#pragma comment(linker, "/include:?value@?$is_arithmetic_impl@$$CB_K@detail@boost@@2_NB")
#pragma comment(linker, "/include:__CT??_R0?AUbad_year@gregorian@boost@@@8??0bad_year@gregorian@boost@@QAE@ABU012@@Z12")
#pragma comment(linker, "/include:??_R0?AV?$ReLULayer@N@caffe@@@8")
#pragma comment(linker, "/include:?unknown_fields@ImageDataParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?deallocate@?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?NewFromPrototype@?$GenericTypeHandler@VNetParameter@caffe@@@internal@protobuf@google@@SAPAVNetParameter@caffe@@PBV56@PAVArena@34@@Z")
#pragma comment(linker, "/include:?LegacyShape@?$Blob@N@caffe@@QBEHH@Z")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?_Erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?mutable_coeff@EltwiseParameter@caffe@@QAEPAV?$RepeatedField@M@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R2thread_exception@boost@@8")
#pragma comment(linker, "/include:??$?0V?$ReshapeLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$ReshapeLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?max_exponent10@?$numeric_limits@N@std@@2HB")
#pragma comment(linker, "/include:??$?0AAPAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@VNo_Op@?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@12@X@?$base_from_member@V?$shared_ptr@V?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@@boost@@$0A@@boost@@IAE@AAPAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@1@$$QAVNo_Op@?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@31@@Z")
#pragma comment(linker, "/include:?allocate@?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@QAEPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?threshold_param@LayerParameter@caffe@@QBEABVThresholdParameter@2@XZ")
#pragma comment(linker, "/include:?StartInternalThread@InternalThread@caffe@@QAE_NXZ")
#pragma comment(linker, "/include:?mutable_eltwise_param@LayerParameter@caffe@@QAEPAVEltwiseParameter@2@XZ")
#pragma comment(linker, "/include:?set_has_is_color@ImageDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?construct@?$allocator@PAV?$Blob@M@caffe@@@std@@QAEXPAPAV?$Blob@M@caffe@@ABQAV34@@Z")
#pragma comment(linker, "/include:?value@?$operator_exists@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@H@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Net@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?SetCachedSize@DropoutParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:__TI7?AV?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:?is_integral@?$integer_traits_base@C$0?IA@$0HP@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$construct@V?$vector@_NV?$allocator@_N@std@@@std@@$$$V@?$allocator_traits@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@1@PAV?$vector@_NV?$allocator@_N@std@@@1@@Z")
#pragma comment(linker, "/include:??$_Insert_at@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U_Nil@2@@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@U_Nil@1@@Z")
#pragma comment(linker, "/include:??0?$ConstantFiller@M@caffe@@QAE@ABVFillerParameter@1@@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$BNLLLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?InitAsDefaultInstance@SPPParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?Forward_cpu@?$PReLULayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$MakeCheckOpString@MH@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABMABHPBD@Z")
#pragma comment(linker, "/include:??_C@_0CK@MBJEGGHM@this_blob?9?$DOcount?$CI?$CJ?5?$DN?$DN?5owner_blob@")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$DropoutLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@QAE?AV01@H@Z")
#pragma comment(linker, "/include:?resize@?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@QAEXI@Z")
#pragma comment(linker, "/include:?_Freeheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBHH@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??$Creator_SPPLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??0?$Net@N@caffe@@QAE@ABVNetParameter@1@@Z")
#pragma comment(linker, "/include:??$put_head@DU?$char_traits@D@std@@U?$group2@U?$_Smanip@_J@std@@ABN@detail@io@boost@@@detail@io@boost@@YAXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@ABU?$group1@U?$group2@U?$_Smanip@_J@std@@ABN@detail@io@boost@@@012@@Z")
#pragma comment(linker, "/include:??_R0?AUthread_data_base@detail@boost@@@8")
#pragma comment(linker, "/include:?ABS_N@?$ratio@$0PECEA@$00@boost@@0_JB")
#pragma comment(linker, "/include:?kDependencyFieldNumber@FileDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@system_error@system@boost@@8")
#pragma comment(linker, "/include:??0BlobProto@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAV?$FlattenLayer@M@caffe@@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@@std@@QAE@ABV?$allocator@PAV?$FlattenLayer@M@caffe@@@1@@Z")
#pragma comment(linker, "/include:?CopyTrainedLayersFrom@?$Net@M@caffe@@QAEXABVNetParameter@2@@Z")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:?nan@?$br_mul@$00$0CHBA@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:??$swap@PAV?$EltwiseLayer@M@caffe@@@std@@YAXAAPAV?$EltwiseLayer@M@caffe@@0@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VConcatParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVConcatParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?max_size@?$vector@DV?$allocator@D@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?DataLayerSetUp@?$BaseDataLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$ContrastiveLossLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?default_instance@EltwiseParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:?get_object@?$optional_base@Vlocale@std@@@optional_detail@boost@@AAEPAVlocale@std@@XZ")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEXXZ")
#pragma comment(linker, "/include:?kAverageLossFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:?mutable_regularization_type@SolverParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAHPAHU?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAPAHPAH00AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@@Z")
#pragma comment(linker, "/include:??_R0?AV?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:?MergeFrom@SPPParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?_Assign_rv@?$vector@NV?$allocator@N@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$0A@@2@@Z")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:??_R4?$PowerLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?to_cpu@SyncedMemory@caffe@@AAEXXZ")
#pragma comment(linker, "/include:__CT??_R0?AVexception@boost@@@8??0exception@boost@@QAE@ABV01@@Z2012")
#pragma comment(linker, "/include:??_C@_0BP@BBMIFMLB@either?50?5or?5bottom_size?5times?5?$AA@")
#pragma comment(linker, "/include:?MergeFrom@V1LayerParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??0?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@1@@Z")
#pragma comment(linker, "/include:??1?$vector@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$iter_swap@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@V12@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@0@0@Z")
#pragma comment(linker, "/include:??$Create@VV1LayerParameter@caffe@@@Arena@protobuf@google@@SAPAVV1LayerParameter@caffe@@PAV012@@Z")
#pragma comment(linker, "/include:?WriteFloatToArray@WireFormatLite@internal@protobuf@google@@SAPAEHMPAE@Z")
#pragma comment(linker, "/include:??_7?$AccuracyLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??F?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$ReshapeLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$ReshapeLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?clear_has_crop_size@DataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@U?$pair@HH@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?num_axes@?$Blob@N@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$PoolingLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$_Uninit_def_fill_n@PAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@IV?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@V12@@std@@YAXPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@IAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$Filler@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_7?$UniformFiller@N@caffe@@6B@")
#pragma comment(linker, "/include:?CopyFrom@DataParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$Destroy@VTypeHandler@?$RepeatedPtrField@VFillerParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXXZ")
#pragma comment(linker, "/include:?kShapeFieldNumber@DummyDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?Swap@SolverParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:?GCD@?$ratio@$00$0JIJGIA@@boost@@0_JB")
#pragma comment(linker, "/include:?AddAlreadyReserved@?$RepeatedField@_J@protobuf@google@@QAEXAB_J@Z")
#pragma comment(linker, "/include:?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$SPPLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0?$ReductionLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?type@?$DropoutLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?clear_mirror@WindowDataParameter@caffe@@QAEXXZ")
#pragma comment(linker, "/include:?set_ignore_label@LossParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:??1bad_day_of_month@gregorian@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$BasePrefetchingDataLayer@M@caffe@@8")
#pragma comment(linker, "/include:??0?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@QAE@ABI@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAH@2@V?$tuple@$$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@PAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAH@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$Blob@M@caffe@@@boost@@QAE@$$QAV01@@Z")
#pragma comment(linker, "/include:?set_stable_prod_grad@EltwiseParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$DataLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?InternalSwap@FillerParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?kDebugInfoFieldNumber@NetParameter@caffe@@2HB")
#pragma comment(linker, "/include:?gInstantiationGuardPowerLayer@caffe@@3DA")
#pragma comment(linker, "/include:??1exception_ptr@boost@@QAE@XZ")
#pragma comment(linker, "/include:?clear_has_crop_size@ImageDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?has_axis@ReductionParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_0BE@CGGBGNM@Unknown?5layer?5name?5?$AA@")
#pragma comment(linker, "/include:??R?$greater@U?$pair@MH@std@@@std@@QBE_NABU?$pair@MH@1@0@Z")
#pragma comment(linker, "/include:?width@?$Blob@I@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?slice_point@SliceParameter@caffe@@QBEIH@Z")
#pragma comment(linker, "/include:?SetCachedSize@BlobProto@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?default_instance_@ImageDataParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_C@_07ONLOIMC@Sigmoid?$AA@")
#pragma comment(linker, "/include:??_C@_0O@FGCAEICE@?0?5param?5blob?5?$AA@")
#pragma comment(linker, "/include:?default_instance@TransformationParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:?kernel_size@ConvolutionParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??$Creator_InnerProductLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??0?$map@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$?0V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$$V@1@$0A@$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@AAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AAV?$tuple@$$$V@1@U?$_Arg_idx@$0A@@1@U?$_Arg_idx@$S@1@@Z")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$SplitLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??0WindowDataParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??_C@_0EL@NHHMHKGG@Check?5failed?3?5mean_values_?4size?$CI@")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$PowerLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?gInstantiationGuardSGDSolver@caffe@@3DA")
#pragma comment(linker, "/include:??_R3FillerParameter@caffe@@8")
#pragma comment(linker, "/include:??A?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QBEABV?$vector@HV?$allocator@H@std@@@1@I@Z")
#pragma comment(linker, "/include:?Reshape@?$Blob@N@caffe@@QAEXHHHH@Z")
#pragma comment(linker, "/include:??_C@_0BJ@GDGOGBPJ@bottom?$FL1?$FN?9?$DOheight?$CI?$CJ?5?$DN?$DN?51?$AA@")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$Layer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_R3domain_error@std@@8")
#pragma comment(linker, "/include:?is_adapted@?$time_resolution_traits@Utime_resolution_traits_adapted64_impl@date_time@boost@@$04$0PECEA@$05H@date_time@boost@@SA_NXZ")
#pragma comment(linker, "/include:?AllowForceBackward@?$LossLayer@N@caffe@@UBE_NH@Z")
#pragma comment(linker, "/include:??_R0?AVdomain_error@std@@@8")
#pragma comment(linker, "/include:?set_decay_mult@ParamSpec@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??$checked_delete@VGenerator@RNG@Caffe@caffe@@@boost@@YAXPAVGenerator@RNG@Caffe@caffe@@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$DataTransformer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?capacity@?$vector@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?input_blobs@?$Net@M@caffe@@QBEABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@XZ")
#pragma comment(linker, "/include:?has_local_size@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?layers@NetParameter@caffe@@QBEABVV1LayerParameter@2@H@Z")
#pragma comment(linker, "/include:??_7?$DropoutLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@12@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@HDF5DataParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?Backward_cpu@?$PoolingLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?const_min@?$integer_traits_base@C$0?IA@$0HP@@detail@boost@@2CB")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$MVNLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@SliceParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?memory_data_param@LayerParameter@caffe@@QBEABVMemoryDataParameter@2@XZ")
#pragma comment(linker, "/include:?clone@?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:??_R2?$UniformFiller@N@caffe@@8")
#pragma comment(linker, "/include:??$_Ptr_cat@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@PAV12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@0@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@@std@@QAEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@1@$$QAU21@@Z")
#pragma comment(linker, "/include:?mutable_relu_param@V1LayerParameter@caffe@@QAEPAVReLUParameter@2@XZ")
#pragma comment(linker, "/include:?Transform@?$DataTransformer@M@caffe@@IAEXABVDatum@2@PAM@Z")
#pragma comment(linker, "/include:??0?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??0MemoryDataParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??1runtime_error@std@@UAE@XZ")
#pragma comment(linker, "/include:??0?$vector@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?descriptor@V1LayerParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$enable_error_info@Vruntime_error@std@@@boost@@YA?AU?$error_info_injector@Vruntime_error@std@@@exception_detail@0@ABVruntime_error@std@@@Z")
#pragma comment(linker, "/include:?Init@?$Solver@M@caffe@@QAEXABVSolverParameter@2@@Z")
#pragma comment(linker, "/include:?GetNoArena@ArenaStringPtr@internal@protobuf@google@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBV56@@Z")
#pragma comment(linker, "/include:?set_has_regularization_type@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?data@?$Blob@H@caffe@@QBEABV?$shared_ptr@VSyncedMemory@caffe@@@boost@@XZ")
#pragma comment(linker, "/include:?mutable_hinge_loss_param@LayerParameter@caffe@@QAEPAVHingeLossParameter@2@XZ")
#pragma comment(linker, "/include:_ldexpf")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$FilterLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$InfogainLossLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?propagate_down@LayerParameter@caffe@@QBE_NH@Z")
#pragma comment(linker, "/include:??$enable_error_info@Vtoo_many_args@io@boost@@@boost@@YA?AU?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@0@ABVtoo_many_args@io@0@@Z")
#pragma comment(linker, "/include:__TI7?AV?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$InnerProductLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$InnerProductLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?add_top@V1LayerParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?value@?$int_@$06@mpl@boost@@2HB")
#pragma comment(linker, "/include:??$GetFiller@N@caffe@@YAPAV?$Filler@N@0@ABVFillerParameter@0@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$SigmoidCrossEntropyLossLayer@N@caffe@@8")
#pragma comment(linker, "/include:?kWeightDecayFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@$$QAV23@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$ThresholdLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBHH@std@@U?$pair@HH@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@1@PAU?$pair@$$CBHH@1@$$QAU?$pair@HH@1@@Z")
#pragma comment(linker, "/include:??_R0?AU?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$Net@N@caffe@@@boost@@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??$vSqr@N@@YAXHPBNPAN@Z")
#pragma comment(linker, "/include:??$_Rechecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@PAV10@@Z")
#pragma comment(linker, "/include:??$?OMH@std@@YA_NABU?$pair@MH@0@0@Z")
#pragma comment(linker, "/include:??$Own@VHDF5DataParameter@caffe@@@Arena@protobuf@google@@QAEXPAVHDF5DataParameter@caffe@@@Z")
#pragma comment(linker, "/include:?end@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??$set_info@V?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@@exception_detail@boost@@YAABV?$clone_impl@Ubad_exception_@exception_detail@boost@@@01@ABV201@ABV?$error_info@Uthrow_line_@boost@@H@1@@Z")
#pragma comment(linker, "/include:?Reshape@?$ArgMaxLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?JSType_MIN@FieldOptions@protobuf@google@@2W4FieldOptions_JSType@23@B")
#pragma comment(linker, "/include:??_R3?$InnerProductLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$GaussianFiller@M@caffe@@8")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:?has_shuffle@HDF5DataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?has_relu_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@2@@Z")
#pragma comment(linker, "/include:??_R3?$AccuracyLayer@N@caffe@@8")
#pragma comment(linker, "/include:?set_dropout_ratio@V0LayerParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??_C@_08MEKFGGIM@base?5?$DO?50?$AA@")
#pragma comment(linker, "/include:?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?constructor_sanity_check@?$AdaGradSolver@N@caffe@@IAEXXZ")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@SAIABV?$allocator@PAV?$FlattenLayer@N@caffe@@@2@@Z")
#pragma comment(linker, "/include:??$OwnInternal@VPowerParameter@caffe@@@Arena@protobuf@google@@AAEXPAVPowerParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?value@?$ice_eq@$0BI@$01@type_traits@boost@@2_NB")
#pragma comment(linker, "/include:?New@ExpParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??_7bad_month@gregorian@boost@@6B@")
#pragma comment(linker, "/include:?_Reallocate@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?value@?$is_function_impl@U?$thread_move_t@V?$unique_lock@Vmutex@boost@@@boost@@@detail@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bbad_day_of_month@gregorian@2@@")
#pragma comment(linker, "/include:??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?mutable_train_net_param@SolverParameter@caffe@@QAEPAVNetParameter@2@XZ")
#pragma comment(linker, "/include:??_C@_0CD@DNKLNHLM@bottom?$FL0?$FN?9?$DOchannels?$CI?$CJ?5?$DN?$DN?5channel@")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$ReshapeLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??$?0$$QAU?$pair@HH@std@@$$$V@?$pair@$$CBU?$pair@HH@std@@H@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAU?$pair@HH@std@@@1@V?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEXXZ")
#pragma comment(linker, "/include:??$CreateInternal@UContainer@InternalMetadataWithArena@internal@protobuf@google@@@Arena@protobuf@google@@AAEPAUContainer@InternalMetadataWithArena@internal@12@_N@Z")
#pragma comment(linker, "/include:??$enable_current_exception@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@boost@@YA?AV?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@0@ABU?$error_info_injector@Voverflow_error@std@@@20@@Z")
#pragma comment(linker, "/include:??$?0V?$EuclideanLossLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$EuclideanLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?deallocate@?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@QAEXPAV?$vector@HV?$allocator@H@std@@@2@I@Z")
#pragma comment(linker, "/include:?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$AccuracyLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@2@@Z")
#pragma comment(linker, "/include:??_R2FunctionClosure0@internal@protobuf@google@@8")
#pragma comment(linker, "/include:?value@?$operator_returns_Ret@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@FUdont_care@has_right_shift_impl@detail@boost@@$0A@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??0?$optional@Vlocale@std@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??$construct@HH@?$allocator_traits@V?$allocator@H@std@@@std@@SAXAAV?$allocator@H@1@PAH$$QAH@Z")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:??_C@_07GDLIKBJC@num?5?$DO?50?$AA@")
#pragma comment(linker, "/include:??_R2?$SplitLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_R3out_of_range@std@@8")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VSigmoidParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVSigmoidParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:??_C@_0CM@BCLIKHJP@?5Layer?5does?5not?5allow?5in?9place?5c@")
#pragma comment(linker, "/include:?Registry@?$LayerRegistry@N@caffe@@SAAAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@XZ")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VReshapeParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVReshapeParameter@caffe@@@Z")
#pragma comment(linker, "/include:??0InternalThread@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?GetCachedSize@ConvolutionParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_7bad_format_string@io@boost@@6B@")
#pragma comment(linker, "/include:__real@ffefffffffffffff")
#pragma comment(linker, "/include:??$heap_new@V?$thread_data@V?$bind_t@XV?$mf0@XVInternalThread@caffe@@@_mfi@boost@@V?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@3@@_bi@boost@@@detail@boost@@V?$bind_t@XV?$mf0@XVInternalThread@caffe@@@_mfi@boost@@V?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@3@@_bi@3@@detail@boost@@YAPAV?$thread_data@V?$bind_t@XV?$mf0@XVInternalThread@caffe@@@_mfi@boost@@V?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@3@@_bi@boost@@@01@$$QAV?$bind_t@XV?$mf0@XVInternalThread@caffe@@@_mfi@boost@@V?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@3@@_bi@1@@Z")
#pragma comment(linker, "/include:?as_number@?$int_adapter@I@date_time@boost@@QBEIXZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@LayerParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?kDoubleValueFieldNumber@UninterpretedOption@protobuf@google@@2HB")
#pragma comment(linker, "/include:??$?0V?$DataLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$DataLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?set_has_type@FillerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?min_exponent@?$numeric_limits@M@std@@2HB")
#pragma comment(linker, "/include:?ReductionParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?max_exponent@?$numeric_limits@M@std@@2HB")
#pragma comment(linker, "/include:??_G_Generic_error_category@std@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$ThresholdLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_C@_0CF@GNIMOCNF@Argument?5must?5be?5finite?0?5but?5got@")
#pragma comment(linker, "/include:??$_Insert_nohint@AAU?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBU?$pair@HH@std@@U12@@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@1@@Z")
#pragma comment(linker, "/include:?_Destroy@?$vector@NV?$allocator@N@std@@@std@@IAEXPAN0@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$DataTransformer@N@caffe@@@boost@@YAXPAV?$DataTransformer@N@caffe@@@Z")
#pragma comment(linker, "/include:?GetCachedSize@SoftmaxParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?IMAGE_DATA@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:?pad_h@PoolingParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??1?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@UAE@XZ")
#pragma comment(linker, "/include:?ReadProtoFromBinaryFileOrDie@caffe@@YAXPBDPAVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?intrusive_ptr_release@detail@boost@@YAXPAUthread_data_base@12@@Z")
#pragma comment(linker, "/include:??0?$MSRAFiller@N@caffe@@QAE@ABVFillerParameter@1@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$MVNLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??0?$AccuracyLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??_C@_0FH@JGAGCGCA@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??_R2?$SoftmaxLayer@N@caffe@@8")
#pragma comment(linker, "/include:?MergeFrom@EltwiseParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$DataLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??_R0?AU?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:?set_has_threshold_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?GetArenaNoVirtual@?$RepeatedPtrField@VV1LayerParameter@caffe@@@protobuf@google@@IBEPAVArena@23@XZ")
#pragma comment(linker, "/include:??$?0V?$WindowDataLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$WindowDataLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?kNameFieldNumber@FieldDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_G?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??D?$shared_ptr@VCaffe@caffe@@@boost@@QBEAAVCaffe@caffe@@XZ")
#pragma comment(linker, "/include:?SharedCtor@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?name@ParamSpec@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Net@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?Reshape@?$EltwiseLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?InternalSwap@DummyDataParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$DataTransformer@M@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z")
#pragma comment(linker, "/include:??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:?exponent@?$fp_traits_non_native@OUextended_double_precision@detail@math@boost@@@detail@math@boost@@2IB")
#pragma comment(linker, "/include:?has_transform_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_0BB@IEMPILBC@img_channels?5?$DO?50?$AA@")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$ConcatLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?mean_file@TransformationParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@PAV12@PAV12@@std@@YAPAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??_E?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@$4PPPPPPPM@DA@AEPAXI@Z")
#pragma comment(linker, "/include:?crop_size@WindowDataParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??_R2?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?has_reshape_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$enable_current_exception@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@boost@@YA?AV?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@0@ABU?$error_info_injector@Vruntime_error@std@@@20@@Z")
#pragma comment(linker, "/include:?New@V0LayerParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??_R0?AVPReLUParameter@caffe@@@8")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$Filler@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?get@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QBEPAV?$Layer@M@caffe@@XZ")
#pragma comment(linker, "/include:?max_size@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?mutable_weight_decay@V0LayerParameter@caffe@@QAEPAV?$RepeatedField@M@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$Layer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_R4?$ConcatLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?has_kernel_w@ConvolutionParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$arena_delete_object@VMessage@protobuf@google@@@internal@protobuf@google@@YAXPAX@Z")
#pragma comment(linker, "/include:??_C@_0BH@NMFOIKBC@There?5is?5no?5MAT?5to?5add?$AA@")
#pragma comment(linker, "/include:?AVE@SPPParameter@caffe@@2W4SPPParameter_PoolMethod@2@B")
#pragma comment(linker, "/include:?default_instance_@BlobShape@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?vdPowx@@YAXHPBNMPAN@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$BNLLLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$BNLLLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_R4_Generic_error_category@std@@6B@")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$FlattenLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_C@_0BN@JKNHPKFO@NaN?5result?3?5log?$CIbase?$CJ?5?$DN?5log?$CI?$AA@")
#pragma comment(linker, "/include:??4?$shared_ptr@V?$Blob@N@caffe@@@boost@@QAEAAV01@ABV01@@Z")
#pragma comment(linker, "/include:?has_channels@BlobProto@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?SharedDtor@LogParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?CreateLayer@?$LayerRegistry@N@caffe@@SA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@2@@Z")
#pragma comment(linker, "/include:??0?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@1@@Z")
#pragma comment(linker, "/include:?set_has_dummy_data_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_7BlobShape@caffe@@6B@")
#pragma comment(linker, "/include:?kInputDimFieldNumber@NetParameter@caffe@@2HB")
#pragma comment(linker, "/include:?Reshape@?$InnerProductLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??1?$DataTransformer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z")
#pragma comment(linker, "/include:?layers_size@NetParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??0?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@QAE@ABUbad_month@gregorian@2@@Z")
#pragma comment(linker, "/include:?MaxTopBlobs@?$PoolingLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_Gsp_counted_base@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??1?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBHH@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Vtoo_few_args@io@boost@@@12@@Z")
#pragma comment(linker, "/include:?message_type@FileDescriptor@protobuf@google@@QBEPBVDescriptor@23@H@Z")
#pragma comment(linker, "/include:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PAN@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_C@_0BJ@HFFKEHDI@Loading?5mean?5file?5from?3?5?$AA@")
#pragma comment(linker, "/include:?clip_gradients@SolverParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?hdf5_data_param@LayerParameter@caffe@@QBEABVHDF5DataParameter@2@XZ")
#pragma comment(linker, "/include:?height_size@DummyDataParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?Forward_gpu@?$BNLLLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@NH@std@@@std@@@std@@QAEPAU?$pair@NH@2@I@Z")
#pragma comment(linker, "/include:?has_hdf5_output_param@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?MergeFrom@ReshapeParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VDummyDataParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVDummyDataParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?has_momentum@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:?set_has_height@BlobProto@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?PoolMethod_MAX@SPPParameter@caffe@@2W4SPPParameter_PoolMethod@2@B")
#pragma comment(linker, "/include:??$construct@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@QAEXPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@1@$$QAV21@@Z")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@SoftmaxParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?has_det_fg_fraction@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_7?$ConvolutionLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??_E?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@WBE@AEPAXI@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$LogLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@SAIABV?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@Z")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PAG@detail@boost@@2_NB")
#pragma comment(linker, "/include:??0Closure@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:??$put_last@DU?$char_traits@D@std@@@detail@io@boost@@YAXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@ABU?$put_holder@DU?$char_traits@D@std@@@012@@Z")
#pragma comment(linker, "/include:?ToProto@?$Layer@N@caffe@@UAEXPAVLayerParameter@2@_N@Z")
#pragma comment(linker, "/include:??_7SPPParameter@caffe@@6B@")
#pragma comment(linker, "/include:??$enable_current_exception@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@boost@@YA?AV?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@0@ABU?$error_info_injector@Ubad_month@gregorian@boost@@@20@@Z")
#pragma comment(linker, "/include:??$vAdd@M@@YAXHPBM0PAM@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$Blob@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?_Eqrange@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@V12@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:?WriteFloatNoTag@WireFormatLite@internal@protobuf@google@@SAXMPAVCodedOutputStream@io@34@@Z")
#pragma comment(linker, "/include:?New@BlobProtoVector@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@AAE@ABV012@Uclone_tag@012@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$SplitLayer@M@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@V?$SplitLayer@M@caffe@@@1@PAV?$SplitLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?SharedCtor@NetState@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$ExpLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?default_instance_@V0LayerParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??_R2?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@8")
#pragma comment(linker, "/include:??_G?$ExpLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$MergeFrom@VTypeHandler@?$RepeatedPtrField@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXABV0123@@Z")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:?unknown_fields@LayerParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$checked_delete@V?$ExpLayer@M@caffe@@@boost@@YAXPAV?$ExpLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@2@0@Z")
#pragma comment(linker, "/include:?kGoPackageFieldNumber@FileOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEXXZ")
#pragma comment(linker, "/include:?multiplier@?$linear_congruential_engine@_K$0FNOOMOGGN@$0L@$0BAAAAAAAAAAAA@@random@boost@@2_KB")
#pragma comment(linker, "/include:?set_k@LRNParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??_C@_0BK@CCEJJHDF@?5Layer?5produces?5at?5least?5?$AA@")
#pragma comment(linker, "/include:??0ReductionParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??1?$_Tree_buy@U?$pair@$$CBU?$pair@HH@std@@H@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$caffe_cpu_scale@N@caffe@@YAXHNPBNPAN@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$PReLULayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_C@_0BF@BDONBEKL@The?5NetState?5phase?5?$CI?$AA@")
#pragma comment(linker, "/include:??_7?$thread_data@V?$bind_t@XV?$mf0@XVInternalThread@caffe@@@_mfi@boost@@V?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@3@@_bi@boost@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?value@?$ice_and@$0A@$00$00$00$00$00$00@type_traits@boost@@2_NB")
#pragma comment(linker, "/include:??0?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$DataTransformer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Net@N@caffe@@@boost@@$$$V@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Net@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?copy@?$char_traits@D@std@@SAPADPADPBDI@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$EuclideanLossLayer@M@caffe@@@detail@boost@@QAE@PAV?$EuclideanLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?MergeFrom@HDF5OutputParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?clear_has_crop_size@WindowDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$ConvolutionLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$ConvolutionLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??$_Uninit_copy@V?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@PANU?$_Wrap_alloc@V?$allocator@N@std@@@2@@std@@YAPANV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@0@0PANAAU?$_Wrap_alloc@V?$allocator@N@std@@@0@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$ConcatLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?kLabelFieldNumber@Datum@caffe@@2HB")
#pragma comment(linker, "/include:?InternalThreadEntry@?$DataLayer@M@caffe@@MAEXXZ")
#pragma comment(linker, "/include:?diff_at@?$Blob@N@caffe@@QBENHHHH@Z")
#pragma comment(linker, "/include:??_R4FillerParameter@caffe@@6B@")
#pragma comment(linker, "/include:?const_min@?$integer_traits_base@I$0A@$0PPPPPPPP@@detail@boost@@2IB")
#pragma comment(linker, "/include:?WindowDataParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@@Z")
#pragma comment(linker, "/include:?mutable_loss_param@LayerParameter@caffe@@QAEPAVLossParameter@2@XZ")
#pragma comment(linker, "/include:??0?$FilterLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??$Creator_SplitLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?kSlicePointFieldNumber@SliceParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$BNLLLayer@N@caffe@@8")
#pragma comment(linker, "/include:?weak_release@sp_counted_base@detail@boost@@QAEXXZ")
#pragma comment(linker, "/include:?gInstantiationGuardPReLULayer@caffe@@3DA")
#pragma comment(linker, "/include:?kHdf5DataParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??0ContrastiveLossParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??0?$_Tree_buy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@1@@Z")
#pragma comment(linker, "/include:?_Freeheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@2@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?value@?$is_pointer_impl@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?bottom_need_backward@?$Net@M@caffe@@QBEABV?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@XZ")
#pragma comment(linker, "/include:??_C@_0DI@JLIDAHKF@MemoryDataLayer?5needs?5to?5be?5init@")
#pragma comment(linker, "/include:??$?0V?$ReLULayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$ReLULayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?mutable_sigmoid_param@LayerParameter@caffe@@QAEPAVSigmoidParameter@2@XZ")
#pragma comment(linker, "/include:??_R4bad_exception@std@@6B@")
#pragma comment(linker, "/include:??_C@_0CC@EEONMDBG@datum_width?5?$DN?$DN?5data_mean_?4width?$CI@")
#pragma comment(linker, "/include:?_Mysize@?$tuple@ABUtype_info_@exception_detail@boost@@@std@@2IB")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$ThresholdLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?set_has_engine@ConvolutionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0exception_ptr@boost@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??_C@_0BG@JMHDANBJ@Check?5failed?3?5labels?5?$AA@")
#pragma comment(linker, "/include:??_R4PowerParameter@caffe@@6B@")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@U?$pair@MH@std@@V?$allocator@U?$pair@MH@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?_Xlen@?$vector@V?$shared_ptr@V?$Net@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@IBEXXZ")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PAH@detail@boost@@2_NB")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$shared_ptr@V?$Net@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@2@XZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$SliceLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?GetCachedSize@ThresholdParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@DataParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_C@_0CN@OPIOMMPC@Input?5NetParameter?5has?5V0?5layer?5@")
#pragma comment(linker, "/include:??A?$vector@PAV?$FlattenLayer@N@caffe@@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@QAEAAPAV?$FlattenLayer@N@caffe@@I@Z")
#pragma comment(linker, "/include:??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z")
#pragma comment(linker, "/include:??_7?$UniformFiller@M@caffe@@6B@")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@PythonParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?value@?$alignment_logic@$03$03@detail@boost@@2IB")
#pragma comment(linker, "/include:?construct@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@IV?$allocator@_N@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@I@std@@@2@XZ")
#pragma comment(linker, "/include:??_E?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@$4PPPPPPPM@CI@AEPAXI@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@DropoutParameter@caffe@@8")
#pragma comment(linker, "/include:??0too_many_args@io@boost@@QAE@ABV012@@Z")
#pragma comment(linker, "/include:??0?$Blob@H@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$ReshapeLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?InitAsDefaultInstance@DummyDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_C@_0L@EMKAGIKF@MemoryData?$AA@")
#pragma comment(linker, "/include:??_C@_03GGEOLGBL@Log?$AA@")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??1format_error@io@boost@@UAE@XZ")
#pragma comment(linker, "/include:?set_has_snapshot_after_train@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VConvolutionParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVConvolutionParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?tanh_param@LayerParameter@caffe@@QBEABVTanHParameter@2@XZ")
#pragma comment(linker, "/include:?is_leap_year@?$gregorian_calendar_base@U?$year_month_day_base@Vgreg_year@gregorian@boost@@Vgreg_month@23@Vgreg_day@23@@date_time@boost@@I@date_time@boost@@SA_NVgreg_year@gregorian@3@@Z")
#pragma comment(linker, "/include:?kShiftFieldNumber@LogParameter@caffe@@2HB")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@LRNParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$XavierFiller@M@caffe@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@FillerParameter@caffe@@8")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$EltwiseLayer@N@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@V?$EltwiseLayer@N@caffe@@@1@PAV?$EltwiseLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$ConvolutionLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?_Get_rest@?$tuple@ABH@std@@QAEAAV?$tuple@$$$V@2@XZ")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Ubad_year@gregorian@boost@@@12@@Z")
#pragma comment(linker, "/include:?kReservedNameFieldNumber@DescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??0?$ContrastiveLossLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@ReshapeParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$Im2colLayer@M@caffe@@@boost@@YAXPAV?$Im2colLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?New@ConvolutionParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_C@_04DNMEEHKD@?5?$CI?$CK?5?$AA@")
#pragma comment(linker, "/include:?stride_w@ConvolutionParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??0?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?gcd_n1_n2@?$is_evenly_divisible_by@V?$ratio@$00$0JIJGIA@@boost@@V?$ratio@$00$0DLJKMKAA@@2@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:??R?$ElementCopier@I$00@internal@protobuf@google@@QAEXPAIPBIH@Z")
#pragma comment(linker, "/include:?mutable_filler@PReLUParameter@caffe@@QAEPAVFillerParameter@2@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$ConstantFiller@M@caffe@@8")
#pragma comment(linker, "/include:??_R2?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?set_pad@PoolingParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??$_Insert_at@AAU?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@1@AAU?$pair@$$CBU?$pair@HH@std@@U12@@1@1@Z")
#pragma comment(linker, "/include:?kNewWidthFieldNumber@ImageDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$PowerLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?value@?$is_base_and_derived_impl@Uoptional_tag@optional_detail@boost@@V?$optional@Vlocale@std@@@3@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?set_axis@FlattenParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A")
#pragma comment(linker, "/include:?value@?$result_@F@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$Creator_MultinomialLogisticLossLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??$_Sort_heap@PAU?$pair@NH@std@@U?$greater@U?$pair@NH@std@@@2@@std@@YAXPAU?$pair@NH@0@0U?$greater@U?$pair@NH@std@@@0@@Z")
#pragma comment(linker, "/include:??$Creator_AccuracyLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?unknown_fields@ReshapeParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?binary@?$_Iosb@H@std@@2W4_Openmode@12@B")
#pragma comment(linker, "/include:?tinyness_before@_Num_base@std@@2_NB")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$PoolingLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??0?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B")
#pragma comment(linker, "/include:??$vSub@M@@YAXHPBM0PAM@Z")
#pragma comment(linker, "/include:?swap@?$shared_ptr@V?$SplitLayer@M@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$SigmoidLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_C@_0CH@CONJKKFF@Check?5failed?3?5has_mean_file_?5?$DN?$DN?5@")
#pragma comment(linker, "/include:??0?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@1@@Z")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAEPAMI@Z")
#pragma comment(linker, "/include:?set_has_new_channels@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R3?$BNLLLayer@M@caffe@@8")
#pragma comment(linker, "/include:__real@7f7fffff")
#pragma comment(linker, "/include:?descriptor@SoftmaxParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$addressof@$$CBH@std@@YAPBHABH@Z")
#pragma comment(linker, "/include:?Swap@V0LayerParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$Layer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??$checked_delete@V?$SplitLayer@M@caffe@@@boost@@YAXPAV?$SplitLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?SharedDtor@EltwiseParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R4?$MVNLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:??$?0V?$ContrastiveLossLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$ContrastiveLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$_Uninit_move@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAU12@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@U12@@std@@YAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$_Ptr_cat@V?$shared_ptr@V?$Net@M@caffe@@@boost@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$shared_ptr@V?$Net@M@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:?increment@?$linear_congruential_engine@_K$0FNOOMOGGN@$0L@$0BAAAAAAAAAAAA@@random@boost@@2_KB")
#pragma comment(linker, "/include:?test_net_param_size@SolverParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??4RNG@Caffe@caffe@@QAEAAV012@ABV012@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$FilterLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Vtoo_many_args@io@boost@@@12@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$SplitLayer@N@caffe@@@detail@boost@@QAE@PAV?$SplitLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z")
#pragma comment(linker, "/include:??_R1BE@?0A@EA@bad_alloc@std@@8")
#pragma comment(linker, "/include:?tempering_c@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@2IB")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$ContrastiveLossLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??1InternalMetadataWithArena@internal@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:?include@LayerParameter@caffe@@QBEABVNetStateRule@2@H@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$ContrastiveLossLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$SigmoidCrossEntropyLossLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?has_mirror@TransformationParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_0BD@HNKIEHFD@Number?5of?5images?3?5?$AA@")
#pragma comment(linker, "/include:?default_instance_@TransformationParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?value@?$is_function_impl@U?$thread_move_t@V?$nullary_function@$$A6AXXZ@detail@boost@@@detail@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@detail@boost@@8")
#pragma comment(linker, "/include:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12")
#pragma comment(linker, "/include:??$forward_as_tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z")
#pragma comment(linker, "/include:?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?tempering_l@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@2IB")
#pragma comment(linker, "/include:??1?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$?0V?$WindowDataLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$WindowDataLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?set_has_det_crop_mode@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?digits@?$numeric_limits@G@std@@2HB")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VHDF5OutputParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVHDF5OutputParameter@caffe@@@Z")
#pragma comment(linker, "/include:??$forward@V?$tuple@ABH@std@@@std@@YA$$QAV?$tuple@ABH@0@AAV10@@Z")
#pragma comment(linker, "/include:?construct@?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@ABV34@@Z")
#pragma comment(linker, "/include:??_C@_0M@IKBDHMP@mat_num?5?$DO?50?$AA@")
#pragma comment(linker, "/include:??0?$Net@M@caffe@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4Phase@1@@Z")
#pragma comment(linker, "/include:??_R0?AV?$NesterovSolver@N@caffe@@@8")
#pragma comment(linker, "/include:?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?has_shape@BlobProto@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?Forward_gpu@?$Im2colLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_C@_0CL@CPHGHFBL@net?0?5net_param?0?5train_net?0?5train@")
#pragma comment(linker, "/include:?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ")
#pragma comment(linker, "/include:?construct@?$allocator@M@std@@QAEXPAMABM@Z")
#pragma comment(linker, "/include:??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@VCaffe@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?type@?$ReductionLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?MergeFrom@?$RepeatedField@I@protobuf@google@@QAEXABV123@@Z")
#pragma comment(linker, "/include:?Reshape@?$EuclideanLossLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$Layer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R0?AV?$UniformFiller@M@caffe@@@8")
#pragma comment(linker, "/include:?type@?$ContrastiveLossLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??0?$NeuronLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?set_has_pad@ConvolutionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Rechecked@PANPAN@std@@YAAAPANAAPANPAN@Z")
#pragma comment(linker, "/include:??_7InternalThread@caffe@@6B@")
#pragma comment(linker, "/include:??_G?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?set_has_memory_data_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?deallocate@?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Net@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:??$Create@VBlobProto@caffe@@@Arena@protobuf@google@@SAPAVBlobProto@caffe@@PAV012@@Z")
#pragma comment(linker, "/include:?Reshape@?$SplitLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$?0V?$SigmoidCrossEntropyLossLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$SigmoidCrossEntropyLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_R2?$InfogainLossLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_G?$Im2colLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$_Ptr_cat@_J_J@std@@YA?AU_Scalar_ptr_iterator_tag@0@PB_JPA_J@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$ReLULayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?_Trim@?$vector@_NV?$allocator@_N@std@@@std@@QAEXI@Z")
#pragma comment(linker, "/include:?has_state@NetParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?InternalSwap@PoolingParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:??0locale@std@@QAE@XZ")
#pragma comment(linker, "/include:?mutable_data_param@LayerParameter@caffe@@QAEPAVDataParameter@2@XZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@VCaffe@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??0CPUTimer@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$DummyDataLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?IsInitialized@SolverState@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??_C@_01PKGAHCOL@?$CJ?$AA@")
#pragma comment(linker, "/include:?kAxisFieldNumber@ReshapeParameter@caffe@@2HB")
#pragma comment(linker, "/include:?unknown_fields@HingeLossParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$Filler@N@caffe@@@detail@boost@@QAE@PAV?$Filler@N@caffe@@@Z")
#pragma comment(linker, "/include:?mutable_mean_file@DataParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@SigmoidParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:?kInputTypeFieldNumber@MethodDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?set_det_fg_threshold@V0LayerParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??$destroy@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@1@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@1@@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBHH@std@@ABUpiecewise_construct_t@2@V?$tuple@ABH@2@V?$tuple@$$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@1@PAU?$pair@$$CBHH@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABH@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??$_Uninitialized_default_fill_n@PAV?$vector@HV?$allocator@H@std@@@std@@IU?$_Wrap_alloc@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@2@@std@@YAXPAV?$vector@HV?$allocator@H@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$DeconvolutionLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?_Xlen@?$vector@NV?$allocator@N@std@@@std@@IBEXXZ")
#pragma comment(linker, "/include:?GetMetadata@DummyDataParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$construct@NAAN@?$_Wrap_alloc@V?$allocator@N@std@@@std@@QAEXPANAAN@Z")
#pragma comment(linker, "/include:?set_has_phase@NetState@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?set_has_data_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??$?0V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@shared_count@detail@boost@@QAE@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@2@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$SliceLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBU?$pair@HH@std@@U12@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?value@?$trait_impl1@V?$basic_istream@DU?$char_traits@D@std@@@std@@GUdont_care@has_right_shift_impl@detail@boost@@$0A@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R3?$BaseConvolutionLayer@M@caffe@@8")
#pragma comment(linker, "/include:??$group@U?$_Smanip@_J@std@@M@io@boost@@YA?AU?$group1@U?$group2@U?$_Smanip@_J@std@@ABM@detail@io@boost@@@detail@01@U?$_Smanip@_J@std@@ABM@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$BNLLLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$forward@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@YA$$QAV?$shared_ptr@V?$Net@N@caffe@@@boost@@AAV12@@Z")
#pragma comment(linker, "/include:??$?6DU?$char_traits@D@std@@ABN@detail@io@boost@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV34@ABU?$group1@ABN@012@@Z")
#pragma comment(linker, "/include:??0?$storage1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@boost@@QAE@V?$value@PAVInternalThread@caffe@@@12@@Z")
#pragma comment(linker, "/include:??$_Rechecked@PAPAV?$Blob@M@caffe@@PAPAV12@@std@@YAAAPAPAV?$Blob@M@caffe@@AAPAPAV12@PAPAV12@@Z")
#pragma comment(linker, "/include:??_R3?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:__real@4f800000")
#pragma comment(linker, "/include:?end_of_month_day@?$gregorian_calendar_base@U?$year_month_day_base@Vgreg_year@gregorian@boost@@Vgreg_month@23@Vgreg_day@23@@date_time@boost@@I@date_time@boost@@SAGVgreg_year@gregorian@3@Vgreg_month@53@@Z")
#pragma comment(linker, "/include:??_R3?$LogLayer@M@caffe@@8")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@000@Z")
#pragma comment(linker, "/include:??0date@gregorian@boost@@QAE@W4special_values@date_time@2@@Z")
#pragma comment(linker, "/include:?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?SoftmaxParameter_Engine_IsValid@caffe@@YA_NH@Z")
#pragma comment(linker, "/include:?Engine_MIN@SoftmaxParameter@caffe@@2W4SoftmaxParameter_Engine@2@B")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??_C@_0O@BHPHBLMH@shape?$FLi?$FN?5?$DO?$DN?50?$AA@")
#pragma comment(linker, "/include:??$checked_delete@V?$DataTransformer@M@caffe@@@boost@@YAXPAV?$DataTransformer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0FF@KHCMICJP@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?clear@?$vector@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:?WriteVarint32ToArray@CodedOutputStream@io@protobuf@google@@SAPAEIPAE@Z")
#pragma comment(linker, "/include:?kNumberFieldNumber@EnumValueDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?clear@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:??_R0?AV?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:??0?$error_info@Uthrow_line_@boost@@H@boost@@QAE@H@Z")
#pragma comment(linker, "/include:?InitAsDefaultInstance@DropoutParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$ReshapeLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_C@_0CH@PGMCNOJE@Unknown?5parameter?5beta?5for?5layer@")
#pragma comment(linker, "/include:??$CreateMaybeMessage@VFillerParameter@caffe@@@Arena@protobuf@google@@CAPAVFillerParameter@caffe@@PAV012@ZZ")
#pragma comment(linker, "/include:??_G?$SoftmaxWithLossLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$FilterLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??0?$Size_@H@cv@@QAE@HH@Z")
#pragma comment(linker, "/include:?_Tidy@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$AbsValLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?_Freeheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?channels@?$Blob@H@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?cpu_data@SyncedMemory@caffe@@QAEPBXXZ")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@V0LayerParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?num@BlobProto@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$SliceLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_G?$MSRAFiller@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??_R3exception@boost@@8")
#pragma comment(linker, "/include:??$Creator_DropoutLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??1?$shared_ptr@VLayerParameter@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??1?$map@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?value@?$static_log2_impl@$00$0A@@static_log2_impl@detail@boost@@2HB")
#pragma comment(linker, "/include:??_C@_0BF@GLCOMDBG@lines_?4size?$CI?$CJ?5?$DO?5skip?$AA@")
#pragma comment(linker, "/include:?value@?$is_pointer_helper@H@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@")
#pragma comment(linker, "/include:?type@?$FlattenLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:__real@3f800000")
#pragma comment(linker, "/include:??0?$SoftmaxWithLossLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?blobs_lr_size@V0LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??$swap@PAVInnerProductParameter@caffe@@@std@@YAXAAPAVInnerProductParameter@caffe@@0@Z")
#pragma comment(linker, "/include:??_R0?AV?$Layer@N@caffe@@@8")
#pragma comment(linker, "/include:?Reshape@?$Net@N@caffe@@QAEXXZ")
#pragma comment(linker, "/include:?set_has_data@Datum@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$?0V?$SPPLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$SPPLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?type@?$PowerLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??_C@_0BO@FNJMAEL@Check?5failed?3?5?$CBhas_new_data_?5?$AA@")
#pragma comment(linker, "/include:?has_infogain_loss_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??1?$LogLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?mutable_test_iter@SolverParameter@caffe@@QAEPAV?$RepeatedField@H@protobuf@google@@XZ")
#pragma comment(linker, "/include:?filler@PReLUParameter@caffe@@QBEABVFillerParameter@2@XZ")
#pragma comment(linker, "/include:?value@?$is_function_impl@Uincrementable_traversal_tag@iterators@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??1Generator@RNG@Caffe@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?include_size@V1LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@1@X@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@QAE@$$QAU01@@Z")
#pragma comment(linker, "/include:?CUDNN@SigmoidParameter@caffe@@2W4SigmoidParameter_Engine@2@B")
#pragma comment(linker, "/include:??$_Uninit_copy@$$CBDD@std@@YAPADPBD0PADAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?diff_at@?$Blob@M@caffe@@QBEMHHHH@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$Filler@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$throw_exception@Vbad_format_string@io@boost@@@boost@@YAXABVbad_format_string@io@0@@Z")
#pragma comment(linker, "/include:?descriptor@TanHParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?size@?$vector@V?$shared_ptr@V?$Net@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?sigmoid_param@V1LayerParameter@caffe@@QBEABVSigmoidParameter@2@XZ")
#pragma comment(linker, "/include:?max_exponent10@?$numeric_limits@M@std@@2HB")
#pragma comment(linker, "/include:?_Reallocate@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??_C@_0M@CGDFIGLI@hdf5_output?$AA@")
#pragma comment(linker, "/include:??_C@_0EE@INFFMOHF@Check?5failed?3?5param?4num_size?$CI?$CJ?5?$DN@")
#pragma comment(linker, "/include:?Backward_cpu@?$BaseDataLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?_Reserve@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$TanHLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$raise_overflow_error@N@detail@policies@math@boost@@YANPBD0ABU?$overflow_error@$0A@@123@@Z")
#pragma comment(linker, "/include:??1InfogainLossParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_GDropoutParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$_Construct@V?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@@?$vector@NV?$allocator@N@std@@@std@@QAEXV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@1@0@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$PowerLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?SharedDtor@MVNParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??C?$shared_ptr@V?$ConcatLayer@M@caffe@@@boost@@QBEPAV?$ConcatLayer@M@caffe@@XZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@DummyDataParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R3?$HingeLossLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$destroy@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@QAEXPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@1@@Z")
#pragma comment(linker, "/include:??$addressof@$$CBN@std@@YAPBNABN@Z")
#pragma comment(linker, "/include:?gpu_diff@?$Blob@H@caffe@@QBEPBHXZ")
#pragma comment(linker, "/include:??1?$Net@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$checked_delete@V?$SilenceLayer@M@caffe@@@boost@@YAXPAV?$SilenceLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?kStableProdGradFieldNumber@EltwiseParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@$$QAV23@@Z")
#pragma comment(linker, "/include:?cleanup@handle_manager@win32@detail@boost@@AAEXXZ")
#pragma comment(linker, "/include:??_R0?AV?$LRNLayer@N@caffe@@@8")
#pragma comment(linker, "/include:?has_normalize@LossParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?get@?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QBEPAUerror_info_container@23@XZ")
#pragma comment(linker, "/include:??_C@_0FA@FCGEPPDO@Check?5failed?3?5?$CIlayer_param?4type?$CI@")
#pragma comment(linker, "/include:?UInt32Size@WireFormatLite@internal@protobuf@google@@SAHI@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$SigmoidCrossEntropyLossLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$SPPLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@X@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@QAE@$$QAU01@@Z")
#pragma comment(linker, "/include:?mutable_state@NetParameter@caffe@@QAEPAVNetState@2@XZ")
#pragma comment(linker, "/include:??_C@_0CM@FBLELCGA@pad?5is?5pad?5OR?5pad_h?5and?5pad_w?5ar@")
#pragma comment(linker, "/include:?NewFromPrototype@?$GenericTypeHandler@VBlobShape@caffe@@@internal@protobuf@google@@SAPAVBlobShape@caffe@@PBV56@PAVArena@34@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$ReLULayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?Backward_gpu@?$PReLULayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?scale_diff@?$Blob@H@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@V1LayerParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:?type@?$LogLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??$_Uninit_fill_n@HIHH@std@@YAXPAHIPBHAAU?$_Wrap_alloc@V?$allocator@H@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$vAbs@N@@YAXHPBNPAN@Z")
#pragma comment(linker, "/include:??$Own@VArgMaxParameter@caffe@@@Arena@protobuf@google@@QAEXPAVArgMaxParameter@caffe@@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$DummyDataLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?Reshape@?$ConcatLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?has_alpha@LRNParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_0BL@CKFPIOC@Check?5failed?3?5cv_img?4data?5?$AA@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@FlattenParameter@caffe@@8")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$NeuronLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?sig_bits@?$low_bits_mask_t@$0BA@@boost@@2GB")
#pragma comment(linker, "/include:?SharedDtor@HingeLossParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_C@_0BG@CMKMFALB@CHECK?5failed?3?5false?3?5?$AA@")
#pragma comment(linker, "/include:??_7?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@6Bdomain_error@std@@@")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VNetStateRule@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVNetStateRule@caffe@@@Z")
#pragma comment(linker, "/include:??$?0AAIAA_NX@?$pair@I_N@std@@QAE@AAIAA_N@Z")
#pragma comment(linker, "/include:??1too_few_args@io@boost@@UAE@XZ")
#pragma comment(linker, "/include:?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QBE?AU12@XZ")
#pragma comment(linker, "/include:?_Xlen@?$vector@PAV?$FlattenLayer@M@caffe@@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@IBEXXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$DataLayer@M@caffe@@8")
#pragma comment(linker, "/include:??0MessageLite@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:?set_sparse@FillerParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?kInputFieldNumber@NetParameter@caffe@@2HB")
#pragma comment(linker, "/include:__real@3810000000000000")
#pragma comment(linker, "/include:?_Destroy@?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@IAEXPAPAV?$Blob@N@caffe@@0@Z")
#pragma comment(linker, "/include:?_Xlen@?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@IBEXXZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@PAV12@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@V12@@std@@YAPAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtualNoRecursionDepth@VParamSpec@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVParamSpec@caffe@@@Z")
#pragma comment(linker, "/include:??_R4?$DataLayer@M@caffe@@6BInternalThread@1@@")
#pragma comment(linker, "/include:?vsPowx@@YAXHPBMMPAM@Z")
#pragma comment(linker, "/include:??$Creator_ArgMaxLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?diff@?$Blob@M@caffe@@QBEABV?$shared_ptr@VSyncedMemory@caffe@@@boost@@XZ")
#pragma comment(linker, "/include:??_C@_0DH@OBMGEKHF@blob_proto_vec?4blobs_size?$CI?$CJ?5?$DN?$DN?5n@")
#pragma comment(linker, "/include:?Reshape@?$Blob@H@caffe@@QAEXABV?$vector@HV?$allocator@H@std@@@std@@@Z")
#pragma comment(linker, "/include:??$construct@HABH@?$allocator_traits@V?$allocator@H@std@@@std@@SAXAAV?$allocator@H@1@PAHABH@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$ReLULayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?set_debug_info@?$Net@M@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$AccuracyLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$fpclassify@M@math@boost@@YAHM@Z")
#pragma comment(linker, "/include:?_Inside@?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@IBE_NPBU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$EltwiseLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$EltwiseLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$ConvolutionLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$_Equal@PBHPBH@std@@YA_NPBH00@Z")
#pragma comment(linker, "/include:??0?$SGDSolver@M@caffe@@QAE@ABVSolverParameter@1@@Z")
#pragma comment(linker, "/include:??$destroy@N@?$_Wrap_alloc@V?$allocator@N@std@@@std@@QAEXPAN@Z")
#pragma comment(linker, "/include:??$_Move@AAPAVPowerParameter@caffe@@@std@@YA$$QAPAVPowerParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?InferBlobShape@?$DataTransformer@M@caffe@@QAE?AV?$vector@HV?$allocator@H@std@@@std@@ABV?$vector@VDatum@caffe@@V?$allocator@VDatum@caffe@@@std@@@4@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$MVNLayer@M@caffe@@8")
#pragma comment(linker, "/include:?MergeFrom@NetState@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$PositiveUnitballFiller@M@caffe@@8")
#pragma comment(linker, "/include:??$_Move@AAPAURep@?$RepeatedField@M@protobuf@google@@@std@@YA$$QAPAURep@?$RepeatedField@M@protobuf@google@@AAPAU1234@@Z")
#pragma comment(linker, "/include:?set_has_weight_decay@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_7ThresholdParameter@caffe@@6B@")
#pragma comment(linker, "/include:?set_has_power@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$DataLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??_C@_01LFCBOECM@?4?$AA@")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??_R3?$MemoryDataLayer@M@caffe@@8")
#pragma comment(linker, "/include:??$im2col_cpu@M@caffe@@YAXPBMHHHHHHHHHPAM@Z")
#pragma comment(linker, "/include:??$_Ptr_cat@PAV?$FlattenLayer@N@caffe@@PAV12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAV?$FlattenLayer@N@caffe@@0@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$MVNLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@QAEAAP6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$AbsValLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?InitAsDefaultInstance@ConcatParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@1@$$QA_N@Z")
#pragma comment(linker, "/include:??$?0V?$PowerLayer@M@caffe@@@?$shared_ptr@V?$PowerLayer@M@caffe@@@boost@@QAE@PAV?$PowerLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??0?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?DeviceQuery@Caffe@caffe@@SAXXZ")
#pragma comment(linker, "/include:?set_has_det_bg_threshold@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@ConcatParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?_Erase@?$_Tree@V?$_Tmap_traits@PBXUtss_data_node@detail@boost@@U?$less@PBX@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_7?$AbsValLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?PoolingParameter_Engine_IsValid@caffe@@YA_NH@Z")
#pragma comment(linker, "/include:?erase@?$vector@IV?$allocator@_N@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@0@Z")
#pragma comment(linker, "/include:?insert@?$set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@_N@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@@std@@@std@@YAXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$float_next@MU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@math@boost@@@math@boost@@YAMABMABU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@01@@Z")
#pragma comment(linker, "/include:?has_blob@?$Net@N@caffe@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@V0LayerParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??$?0V?$LRNLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$LRNLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$InnerProductLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$_Rechecked@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@PAU12@@std@@YAAAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@0@AAPAU10@PAU10@@Z")
#pragma comment(linker, "/include:?kBatchSizeFieldNumber@WindowDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:??1?$pair@QBXUtss_data_node@detail@boost@@@std@@QAE@XZ")
#pragma comment(linker, "/include:__CTA7?AV?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:??_Gout_of_range@std@@UAEPAXI@Z")
#pragma comment(linker, "/include:?Merge@?$GenericTypeHandler@VBlobShape@caffe@@@internal@protobuf@google@@SAXABVBlobShape@caffe@@PAV56@@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVLossParameter@caffe@@@internal@protobuf@google@@YAPBVLossParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?V1LayerParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$ReshapeLayer@N@caffe@@@detail@boost@@QAE@PAV?$ReshapeLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_8?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@7B@")
#pragma comment(linker, "/include:??_C@_0BJ@CBBCNM@start_axis?5?$DM?$DN?5num_axes?$CI?$CJ?$AA@")
#pragma comment(linker, "/include:??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@1@$$QA_N@Z")
#pragma comment(linker, "/include:?kOperationFieldNumber@ReductionParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@PAV12@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@V12@@std@@YAPAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??_R0?AVDropoutParameter@caffe@@@8")
#pragma comment(linker, "/include:?kMinFieldNumber@FillerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?Engine_MAX@ConvolutionParameter@caffe@@2W4ConvolutionParameter_Engine@2@B")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$SigmoidLayer@M@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@V?$SigmoidLayer@M@caffe@@@1@PAV?$SigmoidLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$Im2colLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$AbsValLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R4?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:??0logic_error@std@@QAE@PBD@Z")
#pragma comment(linker, "/include:?Step@?$Solver@M@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?MergeFrom@ConcatParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?New@SolverParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?set_has_stride@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B")
#pragma comment(linker, "/include:?UpgradeV0LayerType@caffe@@YA?AW4V1LayerParameter_LayerType@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?set_type@LayerParameter@caffe@@QAEXPBD@Z")
#pragma comment(linker, "/include:??$put_head@DU?$char_traits@D@std@@PBD@detail@io@boost@@YAXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@ABQBD@Z")
#pragma comment(linker, "/include:??_R0?AV?$LRNLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?SharedCtor@PowerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?set_scale@LogParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?kNewWidthFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$vMul@N@@YAXHPBN0PAN@Z")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?has_test_interval@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$call_put_head@DU?$char_traits@D@std@@$$CBU?$group1@U?$group2@U?$_Smanip@_J@std@@ABM@detail@io@boost@@@detail@io@boost@@@detail@io@boost@@YAXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@PBX@Z")
#pragma comment(linker, "/include:?Resize@?$RepeatedField@M@protobuf@google@@QAEXHABM@Z")
#pragma comment(linker, "/include:?stepvalue_size@SolverParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_R4?$SoftmaxLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?blobs@?$Layer@N@caffe@@QAEAAV?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@XZ")
#pragma comment(linker, "/include:?params_weight_decay@?$Net@N@caffe@@QBEABV?$vector@MV?$allocator@M@std@@@std@@XZ")
#pragma comment(linker, "/include:??$forward@AAU?$pair@$$CBHH@std@@@std@@YAAAU?$pair@$$CBHH@0@AAU10@@Z")
#pragma comment(linker, "/include:??$feed@DU?$char_traits@D@std@@V?$allocator@D@2@ABU?$group1@U?$group2@U?$_Smanip@_J@std@@ABN@detail@io@boost@@@detail@io@boost@@@detail@io@boost@@YAAAV?$basic_format@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AAV32@ABU?$group1@U?$group2@U?$_Smanip@_J@std@@ABN@detail@io@boost@@@012@@Z")
#pragma comment(linker, "/include:??$?0V?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@VNo_Op@?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@12@@?$shared_ptr@V?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@@boost@@QAE@PAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@1@VNo_Op@?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@31@@Z")
#pragma comment(linker, "/include:?arena@InternalMetadataWithArena@internal@protobuf@google@@QBEPAVArena@34@XZ")
#pragma comment(linker, "/include:??$_Val_type@PAU?$pair@HH@std@@@std@@YAPAU?$pair@HH@0@PAU10@@Z")
#pragma comment(linker, "/include:?SharedCtor@SoftmaxParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?DEFAULT@TanHParameter@caffe@@2W4TanHParameter_Engine@2@B")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PAUbad_weekday@gregorian@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$Layer@N@caffe@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$BaseConvolutionLayer@M@caffe@@8")
#pragma comment(linker, "/include:?value@?$is_pod_impl@Ua16@tt_align_ns@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?New@SolverState@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?kNameFieldNumber@EnumValueDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$Net@M@caffe@@@detail@boost@@QAE@PAV?$Net@M@caffe@@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$LogLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$addressof@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@AAV12@@Z")
#pragma comment(linker, "/include:??1PythonParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?is_steady@system_clock@chrono@boost@@2_NB")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?engine@SPPParameter@caffe@@QBE?AW4SPPParameter_Engine@2@XZ")
#pragma comment(linker, "/include:?WITHIN_CHANNEL@LRNParameter@caffe@@2W4LRNParameter_NormRegion@2@B")
#pragma comment(linker, "/include:?digits10@?$numeric_limits@G@std@@2HB")
#pragma comment(linker, "/include:?Reserve@?$RepeatedField@_N@protobuf@google@@QAEXH@Z")
#pragma comment(linker, "/include:?kSyntaxFieldNumber@FileDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$DataTransformer@N@caffe@@8")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$DataTransformer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_C@_0IK@IOOOPHHC@Check?5failed?3?5this?9?$DOlayer_param?$CI@")
#pragma comment(linker, "/include:??_G?$FilterLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?new_channels@V0LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?DEFAULT@SoftmaxParameter@caffe@@2W4SoftmaxParameter_Engine@2@B")
#pragma comment(linker, "/include:?MergeFrom@TanHParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R3?$ContrastiveLossLayer@N@caffe@@8")
#pragma comment(linker, "/include:?DATA@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@SAAAU?$pair@$$CBU?$pair@HH@std@@U12@@2@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_pd@PAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@VNo_Op@?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@23@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??_R1BE@?0A@EA@exception@std@@8")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$AccuracyLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R2?$base_from_member@V?$shared_ptr@V?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@@boost@@$0A@@boost@@8")
#pragma comment(linker, "/include:??_C@_0EL@CNGFEIEJ@Check?5failed?3?5?$CB?$CIconcat_param?4has@")
#pragma comment(linker, "/include:??$forward@V?$vector@MV?$allocator@M@std@@@std@@@std@@YA$$QAV?$vector@MV?$allocator@M@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:?ABS_N@?$ratio@$00$0PECEA@@boost@@0_JB")
#pragma comment(linker, "/include:??_GCodedInputStream@io@protobuf@google@@QAEPAXI@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@MemoryDataParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$ThresholdLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??A?$vector@MV?$allocator@M@std@@@std@@QBEABMI@Z")
#pragma comment(linker, "/include:?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z")
#pragma comment(linker, "/include:?end_axis@FlattenParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?set_has_eps@MVNParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??R?$ElementCopier@H$00@internal@protobuf@google@@QAEXPAHPBHH@Z")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?WINDOW_DATA@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??_G?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_C@_0CI@FNJOJIGA@Incompatible?5number?5of?5blobs?5for@")
#pragma comment(linker, "/include:??$checked_delete@V?$InnerProductLayer@M@caffe@@@boost@@YAXPAV?$InnerProductLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?mutable_contrastive_loss_param@LayerParameter@caffe@@QAEPAVContrastiveLossParameter@2@XZ")
#pragma comment(linker, "/include:??1?$HingeLossLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?type@?$PReLULayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??_R2format_error@io@boost@@8")
#pragma comment(linker, "/include:?kAcrossChannelsFieldNumber@MVNParameter@caffe@@2HB")
#pragma comment(linker, "/include:?GetMetadata@ConcatParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?_Xlen@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@2@@std@@IBEXXZ")
#pragma comment(linker, "/include:??_GWindowDataParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?clear_layers@NetParameter@caffe@@QAEXXZ")
#pragma comment(linker, "/include:?kFileFieldNumber@FileDescriptorSet@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_C@_0EE@GNKIIAPG@Each?5bottom?5should?5have?5the?5same@")
#pragma comment(linker, "/include:__real@bff0000000000000")
#pragma comment(linker, "/include:??_R3Message@protobuf@google@@8")
#pragma comment(linker, "/include:??0?$RepeatedField@I@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0BK@JLKFFCDD@datum_height?5?$DO?$DN?5crop_size?$AA@")
#pragma comment(linker, "/include:??_G?$HingeLossLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R2SoftmaxParameter@caffe@@8")
#pragma comment(linker, "/include:??$OwnInternal@VV0LayerParameter@caffe@@@Arena@protobuf@google@@AAEXPAVV0LayerParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:??1?$Blob@M@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??_7?$ReLULayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@1@@Z")
#pragma comment(linker, "/include:?Clear@ImageDataParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??_GMemoryDataParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?kLrMultFieldNumber@ParamSpec@caffe@@2HB")
#pragma comment(linker, "/include:?descriptor@ConvolutionParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?set_has_infogain_loss_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??$GetSoftmaxLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$CreateMaybeMessage@VV1LayerParameter@caffe@@@Arena@protobuf@google@@CAPAVV1LayerParameter@caffe@@PAV012@ZZ")
#pragma comment(linker, "/include:?GetLearningRate@?$SGDSolver@M@caffe@@IAEMXZ")
#pragma comment(linker, "/include:??$?0AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVDatum@caffe@@X@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAVDatum@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0DB@MMDKMOIB@param?4input_size?$CI?$CJ?5?$CK?54?5?$DN?$DN?5param?4@")
#pragma comment(linker, "/include:??$generate_uniform_real@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@N@detail@random@boost@@YANAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@NN@Z")
#pragma comment(linker, "/include:?capacity@?$vector@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??1?$_Tree_buy@U?$pair@$$CBU?$pair@HH@std@@M@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?ClearToEmptyNoArena@ArenaStringPtr@internal@protobuf@google@@QAEXPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:??_R4logic_error@std@@6B@")
#pragma comment(linker, "/include:??_G?$ConcatLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_7error_category@std@@6B@")
#pragma comment(linker, "/include:?GetMetadata@V0LayerParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$make_pair@AAI_N@std@@YA?AU?$pair@I_N@0@AAI$$QA_N@Z")
#pragma comment(linker, "/include:?infinity@?$numeric_limits@M@std@@SAMXZ")
#pragma comment(linker, "/include:??$checked_delete@V?$SplitLayer@N@caffe@@@boost@@YAXPAV?$SplitLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0BE@IKHNJEEB@top?$FL0?$FN?5?$CB?$DN?5bottom?$FL0?$FN?$AA@")
#pragma comment(linker, "/include:??_R0?AVBlobShape@caffe@@@8")
#pragma comment(linker, "/include:??0CheckOpString@google@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:??_R2?$InnerProductLayer@M@caffe@@8")
#pragma comment(linker, "/include:?max_size@?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R4?$LossLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$SGDSolver@N@caffe@@8")
#pragma comment(linker, "/include:?kShapeFieldNumber@BlobProto@caffe@@2HB")
#pragma comment(linker, "/include:?fg_threshold@WindowDataParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??D?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QBE?AV?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@1@XZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$TanHLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?dealloc@?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@IAEXXZ")
#pragma comment(linker, "/include:??$?0$$CBU?$group1@U?$group2@U?$_Smanip@_J@std@@ABN@detail@io@boost@@@detail@io@boost@@@?$put_holder@DU?$char_traits@D@std@@@detail@io@boost@@QAE@ABU?$group1@U?$group2@U?$_Smanip@_J@std@@ABN@detail@io@boost@@@123@@Z")
#pragma comment(linker, "/include:??$OwnInternal@VSolverState@caffe@@@Arena@protobuf@google@@AAEXPAVSolverState@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:??_R3?$DataLayer@M@caffe@@8")
#pragma comment(linker, "/include:?ByteSize@BlobShape@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$InnerProductLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$EltwiseLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?SigmoidParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??$swap@PAV?$Net@M@caffe@@@std@@YAXAAPAV?$Net@M@caffe@@0@Z")
#pragma comment(linker, "/include:??_C@_0CF@MJMCPBBF@All?5inputs?5must?5have?5the?5same?5?$CDa@")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$WindowDataLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ")
#pragma comment(linker, "/include:??C?$shared_ptr@V?$PowerLayer@N@caffe@@@boost@@QBEPAV?$PowerLayer@N@caffe@@XZ")
#pragma comment(linker, "/include:??$raise_error@Voverflow_error@std@@M@detail@policies@math@boost@@YAXPBD0@Z")
#pragma comment(linker, "/include:??_C@_0DP@DIJDEOOO@test_state?5must?5be?5unspecified?5o@")
#pragma comment(linker, "/include:??A?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@QBEABU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@I@Z")
#pragma comment(linker, "/include:?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?unknown_fields@MemoryDataParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R2BlobProto@caffe@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$AccuracyLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??0?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_G?$GaussianFiller@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$Add@VTypeHandler@?$RepeatedPtrField@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV45@@Z")
#pragma comment(linker, "/include:?IsInitialized@TransformationParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?num@?$ratio@$00$0DOI@@boost@@2_JB")
#pragma comment(linker, "/include:??$swap@PAVReLUParameter@caffe@@@std@@YAXAAPAVReLUParameter@caffe@@0@Z")
#pragma comment(linker, "/include:?SharedDtor@SoftmaxParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Umove@PAPAV?$FlattenLayer@M@caffe@@@?$vector@PAV?$FlattenLayer@M@caffe@@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@IAEPAPAV?$FlattenLayer@M@caffe@@PAPAV23@00@Z")
#pragma comment(linker, "/include:?value@?$is_error_condition_enum@Verror_condition@system@boost@@@system@boost@@2_NB")
#pragma comment(linker, "/include:??$enable_current_exception@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@boost@@YA?AV?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@0@ABU?$error_info_injector@Vbad_alloc@std@@@20@@Z")
#pragma comment(linker, "/include:?set_has_new_width@ImageDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?Reshape@?$SigmoidCrossEntropyLossLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$_Uninitialized_fill_n@PAIIIU?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@YAXPAIIPBIAAU?$_Wrap_alloc@V?$allocator@I@std@@@0@@Z")
#pragma comment(linker, "/include:??_C@_0CJ@JJLKLNLM@Unknown?5parameter?5stride?5for?5lay@")
#pragma comment(linker, "/include:??$?0AAMAAHX@?$pair@MH@std@@QAE@AAMAAH@Z")
#pragma comment(linker, "/include:?GetCachedSize@ReLUParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$MemoryDataLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?has_mvn_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?CopyFrom@DropoutParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??1LossParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$_Unchecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z")
#pragma comment(linker, "/include:?set_has_snapshot_diff@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?CopyFrom@WindowDataParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_G?$AbsValLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$Layer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?set_scale@ExpParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??_R4?$PositiveUnitballFiller@M@caffe@@6B@")
#pragma comment(linker, "/include:?set_force_gray@TransformationParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:?descriptor@MemoryDataParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$_Allocate@U?$pair@MH@std@@@std@@YAPAU?$pair@MH@0@IPAU10@@Z")
#pragma comment(linker, "/include:??_C@_0BE@FBIECIGK@Check?5failed?3?5rng_?5?$AA@")
#pragma comment(linker, "/include:??_R3?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?begin@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?value@?$is_reference_impl@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?set_has_engine@SigmoidParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Ptr_cat@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:?New@ReLUParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R4?$DataLayer@N@caffe@@6B?$BaseDataLayer@N@1@@")
#pragma comment(linker, "/include:??$MakeCheckOpString@HH@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH0PBD@Z")
#pragma comment(linker, "/include:?Init@Timer@caffe@@IAEXXZ")
#pragma comment(linker, "/include:??_R3?$ImageDataLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$FilterLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?Update@?$Blob@M@caffe@@QAEXXZ")
#pragma comment(linker, "/include:??$swap@PAVDB@db@caffe@@@std@@YAXAAPAVDB@db@caffe@@0@Z")
#pragma comment(linker, "/include:??_R4?$BNLLLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?infogain_loss_param@LayerParameter@caffe@@QBEABVInfogainLossParameter@2@XZ")
#pragma comment(linker, "/include:?Clear@?$RepeatedPtrField@VParamSpec@caffe@@@protobuf@google@@QAEXXZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$Net@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$Im2colLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$swap@PAURep@?$RepeatedField@H@protobuf@google@@@std@@YAXAAPAURep@?$RepeatedField@H@protobuf@google@@0@Z")
#pragma comment(linker, "/include:?_Reserve@?$vector@PAV?$FlattenLayer@M@caffe@@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?set_has_operation@ReductionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?set_has_source@HDF5DataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@0@AAPAU10@@Z")
#pragma comment(linker, "/include:?_Advance@?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QAEXI@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$Layer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?set_source@InfogainLossParameter@caffe@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?m@?1???$get_smallest_value@N@detail@math@boost@@YANABU?$bool_@$00@mpl@3@@Z@4NB")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$FilterLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$FilterLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?value@?$alignment_of_impl@D@detail@boost@@2IB")
#pragma comment(linker, "/include:?set_has_pad@PoolingParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$DataTransformer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_C@_0L@JIKPFPMP@HDF5Output?$AA@")
#pragma comment(linker, "/include:??C?$shared_ptr@V?$Filler@M@caffe@@@boost@@QBEPAV?$Filler@M@caffe@@XZ")
#pragma comment(linker, "/include:?DataParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$ImageDataLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$Net@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?WriteEnumNoTagToArray@WireFormatLite@internal@protobuf@google@@SAPAEHPAE@Z")
#pragma comment(linker, "/include:?PrefetchRand@?$WindowDataLayer@N@caffe@@MAEIXZ")
#pragma comment(linker, "/include:??$caffe_div@N@caffe@@YAXHPBN0PAN@Z")
#pragma comment(linker, "/include:?MergeFrom@DropoutParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?SharedCtor@LRNParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$destroy@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@QAEXPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@1@@Z")
#pragma comment(linker, "/include:??_7?$DataTransformer@N@caffe@@6B@")
#pragma comment(linker, "/include:?NetNeedsDataUpgrade@caffe@@YA_NABVNetParameter@1@@Z")
#pragma comment(linker, "/include:??_G?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_C@_0M@IOGCKJJI@K_?5?$DN?$DN?5new_K?$AA@")
#pragma comment(linker, "/include:??_R0?AV?$HingeLossLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??0?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@QAE@ABUbad_year@gregorian@2@@Z")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??_C@_0DA@ILGI@Padding?5Layer?5produces?5a?5single?5@")
#pragma comment(linker, "/include:?unknown_fields@LRNParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$set_info@V?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@@exception_detail@boost@@YAABV?$clone_impl@Ubad_alloc_@exception_detail@boost@@@01@ABV201@ABV?$error_info@Uthrow_function_@boost@@PBD@1@@Z")
#pragma comment(linker, "/include:??0?$vector@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?MergeFrom@LossParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$AbsValLayer@M@caffe@@8")
#pragma comment(linker, "/include:??$_Move@AAPAD@std@@YA$$QAPADAAPAD@Z")
#pragma comment(linker, "/include:??1bad_alloc@std@@UAE@XZ")
#pragma comment(linker, "/include:?Fill@?$XavierFiller@N@caffe@@UAEXPAV?$Blob@N@2@@Z")
#pragma comment(linker, "/include:??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PBV?$optional@Vlocale@std@@@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$OwnInternal@VBlobProto@caffe@@@Arena@protobuf@google@@AAEXPAVBlobProto@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?in@?$_Iosb@H@std@@2W4_Openmode@12@B")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$SPPLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?ABS_D@?$ratio@$00$0DLJKMKAA@@boost@@0_JB")
#pragma comment(linker, "/include:?V1LayerParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??$_Ptr_cat@DD@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAD0@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@MH@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@MH@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@MH@std@@@1@PAU?$pair@MH@1@$$QAU31@@Z")
#pragma comment(linker, "/include:?PythonParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??_R4?$ExpLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?has_stride_h@ConvolutionParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$SoftmaxLayer@M@caffe@@@detail@boost@@QAE@PAV?$SoftmaxLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$_Umove@PAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@@?$vector@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@IAEPAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@PAV23@00@Z")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@6Btoo_few_args@io@2@@")
#pragma comment(linker, "/include:?set_crop_size@TransformationParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VConvolutionParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVConvolutionParameter@caffe@@@Z")
#pragma comment(linker, "/include:??$set_info@V?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@@exception_detail@boost@@YAABV?$clone_impl@Ubad_exception_@exception_detail@boost@@@01@ABV201@ABV?$error_info@Uthrow_function_@boost@@PBD@1@@Z")
#pragma comment(linker, "/include:?Reshape@?$SoftmaxLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?mutable_bias_filler@V0LayerParameter@caffe@@QAEPAVFillerParameter@2@XZ")
#pragma comment(linker, "/include:?add_top@V1LayerParameter@caffe@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?_Grow_to@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@IBEII@Z")
#pragma comment(linker, "/include:??_C@_0CN@LBJFICCC@Unknown?5parameter?5local_size?5for@")
#pragma comment(linker, "/include:?_Lmost@?$_Tree@V?$_Tmap_traits@PBXUtss_data_node@detail@boost@@U?$less@PBX@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??_7_Iostream_error_category@std@@6B@")
#pragma comment(linker, "/include:??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?loss@?$Layer@M@caffe@@QBEMH@Z")
#pragma comment(linker, "/include:?_Destroy@?$vector@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@IAEXPAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:??0?$AbsValLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?set_source@DataParameter@caffe@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?_Reserve@?$vector@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??_R3?$Layer@N@caffe@@8")
#pragma comment(linker, "/include:??$checked_delete@V?$Net@N@caffe@@@boost@@YAXPAV?$Net@N@caffe@@@Z")
#pragma comment(linker, "/include:?MinBottomBlobs@?$BaseConvolutionLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_E?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@WBE@AEPAXI@Z")
#pragma comment(linker, "/include:??$?0V?$MultinomialLogisticLossLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$MultinomialLogisticLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?set_has_bg_threshold@WindowDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@YAXPAI0AAU?$_Wrap_alloc@V?$allocator@I@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??1?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?SolverState_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??$Creator_SilenceLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?InternalSwap@ReductionParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:??$_Insert_nohint@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U_Nil@2@@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@_N@1@_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@U_Nil@1@@Z")
#pragma comment(linker, "/include:?has_dummy_data_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?kInputShapeFieldNumber@NetParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R2?$LossLayer@M@caffe@@8")
#pragma comment(linker, "/include:?set_has_dropout_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?default_instance_@SigmoidParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?hdf5_output_param@LayerParameter@caffe@@QBEABVHDF5OutputParameter@2@XZ")
#pragma comment(linker, "/include:?min@?$numeric_limits@_J@std@@SA_JXZ")
#pragma comment(linker, "/include:?SetCachedSize@PoolingParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?set_has_local_size@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?IsInitialized@ConcatParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??$_Move@AAPAVDropoutParameter@caffe@@@std@@YA$$QAPAVDropoutParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?_Change_alloc@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@D@std@@@2@@Z")
#pragma comment(linker, "/include:?kBlobsFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?IsInitialized@LayerParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@1@$$QA_N@Z")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@2@@Z")
#pragma comment(linker, "/include:?clear_scale@DataParameter@caffe@@QAEXXZ")
#pragma comment(linker, "/include:?Clear@MVNParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??_R3?$ConcatLayer@M@caffe@@8")
#pragma comment(linker, "/include:?det_bg_threshold@V0LayerParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?asum_data@?$Blob@I@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$Blob@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??0?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@1@@Z")
#pragma comment(linker, "/include:??_C@_0CI@JGFLOJPA@Domain?5Error?5evaluating?5function@")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$SigmoidCrossEntropyLossLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$SigmoidCrossEntropyLossLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??0?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_7?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:?MergeFrom@PowerParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R3?$InfogainLossLayer@M@caffe@@8")
#pragma comment(linker, "/include:?set_scale@ImageDataParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@EltwiseParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$_Allocate@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@IPAV12@@Z")
#pragma comment(linker, "/include:??0AccuracyParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??$_Swap_adl@PAD@std@@YAXAAPAD0@Z")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??$set_info@V?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@@exception_detail@boost@@YAABV?$clone_impl@Ubad_alloc_@exception_detail@boost@@@01@ABV201@ABV?$error_info@Uthrow_file_@boost@@PBD@1@@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVConvolutionParameter@caffe@@@internal@protobuf@google@@YAPBVConvolutionParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$InfogainLossLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@2@@Z")
#pragma comment(linker, "/include:??$apply@I@?$integer_log2_impl@$0BA@@detail@random@boost@@SAHIH@Z")
#pragma comment(linker, "/include:?New@ImageDataParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$PowerLayer@M@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@V?$PowerLayer@M@caffe@@@1@PAV?$PowerLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?SetCachedSize@ReductionParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$TanHLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$reset@V?$Blob@M@caffe@@@?$shared_ptr@V?$Blob@M@caffe@@@boost@@QAEXPAV?$Blob@M@caffe@@@Z")
#pragma comment(linker, "/include:??1locale@std@@QAE@XZ")
#pragma comment(linker, "/include:??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?Clear@ArgMaxParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?has_eps@MVNParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?value@?$has_member_called_unlock@PAV?$unique_lock@Vmutex@boost@@@boost@@$0A@@detail@sync@boost@@2_NB")
#pragma comment(linker, "/include:??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z")
#pragma comment(linker, "/include:?set_cpu_data@?$Blob@I@caffe@@QAEXPAI@Z")
#pragma comment(linker, "/include:_frexpf")
#pragma comment(linker, "/include:??_C@_07GOBJOKJF@layer?5?8?$AA@")
#pragma comment(linker, "/include:?value@?$int_@$09@mpl@boost@@2HB")
#pragma comment(linker, "/include:??_C@_0DG@NIKLBDNH@boost?3?3bad_format_string?3?5format@")
#pragma comment(linker, "/include:??_C@_0CB@BPCIKJNI@NaN?5result?3?51?1log?$CIbase?$CJ?5?$DN?51?1log?$CI@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$DummyDataLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?BackwardDebugInfo@?$Net@M@caffe@@IAEXH@Z")
#pragma comment(linker, "/include:?CopyFrom@ReductionParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$ReductionLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@SolverState@caffe@@8")
#pragma comment(linker, "/include:??0?$ReshapeLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?stride@ConvolutionParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??0?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?value@?$bool_@$00@mpl@boost@@2_NB")
#pragma comment(linker, "/include:?Backward_gpu@?$DeconvolutionLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$_Unchecked@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@YAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@PAV10@@Z")
#pragma comment(linker, "/include:?mutable_data_param@V1LayerParameter@caffe@@QAEPAVDataParameter@2@XZ")
#pragma comment(linker, "/include:??$equal@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YA_NV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@00@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$ImageDataLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?_Freenode0@?$_Tree_buy@U?$pair@$$CBU?$pair@HH@std@@H@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$InnerProductLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?has_max_level@NetStateRule@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?pool@PoolingParameter@caffe@@QBE?AW4PoolingParameter_PoolMethod@2@XZ")
#pragma comment(linker, "/include:??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??_R2V0LayerParameter@caffe@@8")
#pragma comment(linker, "/include:?set_has_pooling_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?CopyFrom@LayerParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVDropoutParameter@caffe@@@internal@protobuf@google@@YAPBVDropoutParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$AccuracyLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?_Reserve@?$vector@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??$_Uninit_def_fill_n@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@6Btoo_many_args@io@2@@")
#pragma comment(linker, "/include:??4?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAEAAV012@ABV012@@Z")
#pragma comment(linker, "/include:??$Check_LEImpl@MH@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABMABHPBD@Z")
#pragma comment(linker, "/include:??$forward@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@YA$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@0@AAU10@@Z")
#pragma comment(linker, "/include:?kFlattenParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??0NetState@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??_R4ReLUParameter@caffe@@6B@")
#pragma comment(linker, "/include:??C?$shared_ptr@V?$Net@M@caffe@@@boost@@QBEPAV?$Net@M@caffe@@XZ")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$ExpLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?SetCachedSize@NetParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:??$_Ptr_cat@II@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAI0@Z")
#pragma comment(linker, "/include:??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QAE?AV01@H@Z")
#pragma comment(linker, "/include:??_GPReLUParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?construct@?$optional_base@Vlocale@std@@@optional_detail@boost@@IAEXABVlocale@std@@@Z")
#pragma comment(linker, "/include:?InternalSwap@ParamSpec@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?IsInitialized@NetParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$AbsValLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?unknown_fields@PowerParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MH@std@@@std@@@std@@@std@@QAEAAV01@H@Z")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBHH@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBHH@1@@Z")
#pragma comment(linker, "/include:?VarintSize32@CodedOutputStream@io@protobuf@google@@SAHI@Z")
#pragma comment(linker, "/include:??$copy@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z")
#pragma comment(linker, "/include:??$?0V?$PoolingLayer@M@caffe@@@?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@QAE@PAV?$PoolingLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?Test@?$Solver@N@caffe@@IAEXH@Z")
#pragma comment(linker, "/include:??_R4LRNParameter@caffe@@6B@")
#pragma comment(linker, "/include:?assign@?$constrained_value@V?$simple_exception_policy@G$00$0BP@Ubad_day_of_month@gregorian@boost@@@CV@boost@@@CV@boost@@AAEXG@Z")
#pragma comment(linker, "/include:??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@1@XZ")
#pragma comment(linker, "/include:??$OwnInternal@VReshapeParameter@caffe@@@Arena@protobuf@google@@AAEXPAVReshapeParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$ConcatLayer@M@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@V?$ConcatLayer@M@caffe@@@1@PAV?$ConcatLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??$swap@PAVNetParameter@caffe@@@std@@YAXAAPAVNetParameter@caffe@@0@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$ConcatLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0?$ReshapeLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??0?$BNLLLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?value@?$choose_initial_n@$0CA@@static_log2_impl@detail@boost@@2HB")
#pragma comment(linker, "/include:?GetCachedSize@ImageDataParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$_Val_type@PAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@PAV12@@Z")
#pragma comment(linker, "/include:??$?0VGenerator@RNG@Caffe@caffe@@@?$shared_ptr@VGenerator@RNG@Caffe@caffe@@@boost@@QAE@PAVGenerator@RNG@Caffe@caffe@@@Z")
#pragma comment(linker, "/include:??_G?$BasePrefetchingDataLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R3?$PowerLayer@M@caffe@@8")
#pragma comment(linker, "/include:?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:?kOutMaxValFieldNumber@ArgMaxParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$ReLULayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?MinBottomBlobs@?$InfogainLossLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_E?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@WBE@AEPAXI@Z")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@1@AAPAU21@@Z")
#pragma comment(linker, "/include:??$?0V?$BNLLLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$BNLLLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$MemoryDataLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?blobs@BlobProtoVector@caffe@@QBEABVBlobProto@2@H@Z")
#pragma comment(linker, "/include:??$_Rechecked@PAMPAM@std@@YAAAPAMAAPAMPAM@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$InnerProductLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?ByteSize@V1LayerParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?DataParameter_DB_descriptor_@?A0x5e4fc710@caffe@@3PBVEnumDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?Backward_gpu@?$LogLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$?0V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$$V@1@$0A@$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@QAE@AAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AAV?$tuple@$$$V@1@U?$_Arg_idx@$0A@@1@U?$_Arg_idx@$S@1@@Z")
#pragma comment(linker, "/include:?_Destroy@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@IAEXPAV?$vector@MV?$allocator@M@std@@@2@0@Z")
#pragma comment(linker, "/include:??$construct@HAAH@?$allocator@H@std@@QAEXPAHAAH@Z")
#pragma comment(linker, "/include:??_C@_0CP@FPEIBMIP@Check?5failed?3?5this?9?$DOtransformed_@")
#pragma comment(linker, "/include:?kPadWFieldNumber@ConvolutionParameter@caffe@@2HB")
#pragma comment(linker, "/include:??0?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@QAE@ABU012@@Z")
#pragma comment(linker, "/include:??_C@_0CG@BAMBBKEP@Unknown?5V1LayerParameter?5layer?5t@")
#pragma comment(linker, "/include:??$_Copy_impl@PB_JPA_J@std@@YAPA_JPB_J0PA_JU_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$_Ptr_cat@U?$pair@HH@std@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$pair@HH@0@0@Z")
#pragma comment(linker, "/include:?batch_size@WindowDataParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$HingeLossLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?eof@?$char_traits@D@std@@SAHXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@Message@protobuf@google@@8")
#pragma comment(linker, "/include:??$float_prior_imp@NU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@math@boost@@@detail@math@boost@@YANABNABU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@12@@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$DummyDataLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$ArgMaxLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?Backward_gpu@?$ReLULayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$MemoryDataLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?interlocked_read_acquire@detail@boost@@YAPAXPCRAX@Z")
#pragma comment(linker, "/include:??$_Iter_cat@V?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:__CT??_R0?AVtoo_few_args@io@boost@@@8??0too_few_args@io@boost@@QAE@ABV012@@Z20")
#pragma comment(linker, "/include:??_R3?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@8")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?lower_bound@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@2@ABH@Z")
#pragma comment(linker, "/include:?mutable_infogain_loss_param@LayerParameter@caffe@@QAEPAVInfogainLossParameter@2@XZ")
#pragma comment(linker, "/include:??0NetParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??$checked_delete@V?$ThresholdLayer@N@caffe@@@boost@@YAXPAV?$ThresholdLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?Merge@?$GenericTypeHandler@VNetState@caffe@@@internal@protobuf@google@@SAXABVNetState@caffe@@PAV56@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$SigmoidLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?type@?$HingeLossLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??$_Allocate@V?$vector@HV?$allocator@H@std@@@std@@@std@@YAPAV?$vector@HV?$allocator@H@std@@@0@IPAV10@@Z")
#pragma comment(linker, "/include:??_C@_0BB@MMGOMFFB@numeric?5overflow?$AA@")
#pragma comment(linker, "/include:?AddCreator@?$LayerRegistry@M@caffe@@SAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@2@@Z@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$ReductionLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?Swap@InternalMetadataWithArena@internal@protobuf@google@@QAEXPAV1234@@Z")
#pragma comment(linker, "/include:?CONVOLUTION@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??_R0?AU?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:??$Check_EQImpl@HM@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABHABMPBD@Z")
#pragma comment(linker, "/include:??1LogParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R0?AVConcatParameter@caffe@@@8")
#pragma comment(linker, "/include:?_Lrotate@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@ReshapeParameter@caffe@@8")
#pragma comment(linker, "/include:?is_bounded@_Num_int_base@std@@2_NB")
#pragma comment(linker, "/include:?kContextPadFieldNumber@WindowDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?data@?$Blob@M@caffe@@QBEABV?$shared_ptr@VSyncedMemory@caffe@@@boost@@XZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$Im2colLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?WindowDataParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@1@@Z")
#pragma comment(linker, "/include:?offset@?$Blob@H@caffe@@QBEHHHHH@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?base@?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??0?$arg@$07@boost@@QAE@XZ")
#pragma comment(linker, "/include:??1?$LRNLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$DataTransformer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?_Freeheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??1PoolingParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$checked_delete@V?$DataLayer@M@caffe@@@boost@@YAXPAV?$DataLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?has_axis@SliceParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:?default_instance_@SoftmaxParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??$swap@PAVHDF5DataParameter@caffe@@@std@@YAXAAPAVHDF5DataParameter@caffe@@0@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$TanHLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?GCD@?$ratio@$00$0DLJKMKAA@@boost@@0_JB")
#pragma comment(linker, "/include:??$Clear@VTypeHandler@?$RepeatedPtrField@VFillerParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXXZ")
#pragma comment(linker, "/include:??_C@_04BBDFLMDN@?5?9?$DO?5?$AA@")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$ReLULayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z")
#pragma comment(linker, "/include:??$swap@PAURep@?$RepeatedField@M@protobuf@google@@@std@@YAXAAPAURep@?$RepeatedField@M@protobuf@google@@0@Z")
#pragma comment(linker, "/include:?Clear@HDF5OutputParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?NetState_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?type@?$FilterLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?kDeprecatedFieldNumber@FieldOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_R4Datum@caffe@@6B@")
#pragma comment(linker, "/include:??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z")
#pragma comment(linker, "/include:?pooling_param@V1LayerParameter@caffe@@QBEABVPoolingParameter@2@XZ")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$DummyDataLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??0Generator@RNG@Caffe@caffe@@QAE@I@Z")
#pragma comment(linker, "/include:?MergeFrom@PowerParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?const_max@?$integer_traits_base@_W$0A@$0PPPP@@detail@boost@@2_WB")
#pragma comment(linker, "/include:??$Creator_InfogainLossLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$SigmoidLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_7?$MultinomialLogisticLossLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?_Pop_back_n@?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@QAEXI@Z")
#pragma comment(linker, "/include:?type@?$Im2colLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??_C@_0CF@PANECMCO@width_?5?$DN?$DN?5bottom?$FLbottom_id?$FN?9?$DOwid@")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$?GV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@V01@@std@@YAHAAV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@0@ABV10@@Z")
#pragma comment(linker, "/include:??_R0?AV?$EltwiseLayer@N@caffe@@@8")
#pragma comment(linker, "/include:?SharedCtor@ReLUParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$UniformFiller@M@caffe@@8")
#pragma comment(linker, "/include:?set_has_beta@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$Blob@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$MemoryDataLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?is_signed@?$numeric_limits@F@std@@2_NB")
#pragma comment(linker, "/include:??_7HDF5DataParameter@caffe@@6B@")
#pragma comment(linker, "/include:?value@?$is_pointer_impl@G@detail@boost@@2_NB")
#pragma comment(linker, "/include:?set_has_solver_type@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?select_on_container_copy_construction@?$allocator@M@std@@QBE?AV12@XZ")
#pragma comment(linker, "/include:?ReshapeParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$SigmoidLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_7thread_data_base@detail@boost@@6B@")
#pragma comment(linker, "/include:?InitAsDefaultInstance@TransformationParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?blobs@?$Layer@M@caffe@@QAEAAV?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@XZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?_Get_rest@?$tuple@ABU?$pair@HH@std@@@std@@QAEAAV?$tuple@$$$V@2@XZ")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@$$$V@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?MergeFrom@NetParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?kOptionsFieldNumber@EnumDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@VSyncedMemory@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$_Val_type@PAH@std@@YAPAHPAH@Z")
#pragma comment(linker, "/include:?GetArenaNoVirtual@?$RepeatedField@I@protobuf@google@@ABEPAVArena@23@XZ")
#pragma comment(linker, "/include:??$_Construct@V?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@@?$vector@NV?$allocator@N@std@@@std@@QAEXV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@1@0Uforward_iterator_tag@1@@Z")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@6Bdomain_error@std@@@")
#pragma comment(linker, "/include:?has_rand_skip@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??0?$ArgMaxLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?erase@?$_Tree@V?$_Tmap_traits@PBXUtss_data_node@detail@boost@@U?$less@PBX@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@@2@0@Z")
#pragma comment(linker, "/include:?set_has_spp_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?Clear@?$RepeatedPtrField@VNetStateRule@caffe@@@protobuf@google@@QAEXXZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$SigmoidLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$SigmoidLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_C@_0BG@EOMJEIFA@vector?$DMbool?$DO?5too?5long?$AA@")
#pragma comment(linker, "/include:??$_Construct@V?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@QAEXV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@1@0@Z")
#pragma comment(linker, "/include:?reduction_param@LayerParameter@caffe@@QBEABVReductionParameter@2@XZ")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$PoolingLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_C@_0CF@MPBOOKDA@The?5NetState?5contained?5a?5not_sta@")
#pragma comment(linker, "/include:?Clear@ExpParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??$ptr@E@Mat@cv@@QAEPAEH@Z")
#pragma comment(linker, "/include:??$OwnInternal@VV1LayerParameter@caffe@@@Arena@protobuf@google@@AAEXPAVV1LayerParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:??_C@_0DA@GHDJHFBO@Unknown?5parameter?5weight_filler?5@")
#pragma comment(linker, "/include:??R?$variate_generator@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@V?$normal_distribution@M@23@@random@boost@@QAEMXZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$PoolingLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$PoolingLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?has_argmax_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?height@BlobProto@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?kCcEnableArenasFieldNumber@FileOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:?CopyFrom@ConvolutionParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?New@BlobShape@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$PowerLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?kNameFieldNumber@ParamSpec@caffe@@2HB")
#pragma comment(linker, "/include:?min@?$numeric_limits@I@std@@SAIXZ")
#pragma comment(linker, "/include:??$_Move@AAPAVAccuracyParameter@caffe@@@std@@YA$$QAPAVAccuracyParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@Z")
#pragma comment(linker, "/include:?value@?$is_abstract_imp@C@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$checked_delete@V?$LRNLayer@M@caffe@@@boost@@YAXPAV?$LRNLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?SharedCtor@ThresholdParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVDummyDataParameter@caffe@@@internal@protobuf@google@@YAPBVDummyDataParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:??1NetState@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$ReadMessageNoVirtualNoRecursionDepth@VFillerParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVFillerParameter@caffe@@@Z")
#pragma comment(linker, "/include:?type@?$BNLLLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?InternalSwap@TanHParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?data_at@?$Blob@H@caffe@@QBEHHHHH@Z")
#pragma comment(linker, "/include:??_R4too_many_args@io@boost@@6B@")
#pragma comment(linker, "/include:?SnapshotSolverState@?$SGDSolver@N@caffe@@MAEXPAVSolverState@2@@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@HDF5OutputParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_D?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@QAEXXZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?New@ReductionParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@LRNParameter@caffe@@8")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$TanHLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?kDropoutParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?kCropSizeFieldNumber@WindowDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$Blob@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?mutable_blob_share_mode@V1LayerParameter@caffe@@QAEPAV?$RepeatedField@H@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_C@_06ODAFHOMO@Concat?$AA@")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@QAEPAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??$destroy@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@?$allocator_traits@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@1@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@1@@Z")
#pragma comment(linker, "/include:?unknown_fields@ReLUParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?GetCachedSize@LayerParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?ABS_D@?$ratio@$00$0JIJGIA@@boost@@0_JB")
#pragma comment(linker, "/include:??1?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?clear_crop_size@DataParameter@caffe@@QAEXXZ")
#pragma comment(linker, "/include:?zero@?$is_unsigned_values@I@detail@boost@@2IB")
#pragma comment(linker, "/include:??$?8NN@std@@YA_NABV?$allocator@N@0@0@Z")
#pragma comment(linker, "/include:?Clear@DataParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??_C@_0BI@BINBNPEL@SigmoidCrossEntropyLoss?$AA@")
#pragma comment(linker, "/include:?TYPE_UINT32@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Type@23@B")
#pragma comment(linker, "/include:?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??0?$WindowDataLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??0?$vector@NV?$allocator@N@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@")
#pragma comment(linker, "/include:?value@?$integral_c@_J$0CHBA@@mpl@boost@@2_JB")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$WindowDataLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?kWeightFillerFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$SoftmaxWithLossLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$SoftmaxWithLossLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??$Check_GEImpl@HH@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH0PBD@Z")
#pragma comment(linker, "/include:??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@Vthread@boost@@@detail@boost@@8")
#pragma comment(linker, "/include:??$addressof@H@std@@YAPAHAAH@Z")
#pragma comment(linker, "/include:??0ParamSpec@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0BN@KAENNAJA@new?5shape?5contains?5multiple?5?$AA@")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$MemoryDataLayer@M@caffe@@@detail@boost@@QAE@PAV?$MemoryDataLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@ReLUParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?CopyArray@?$RepeatedField@_J@protobuf@google@@AAEXPA_JPB_JH@Z")
#pragma comment(linker, "/include:??_C@_0BE@HNELNILH@Unknown?5blob?5input?5?$AA@")
#pragma comment(linker, "/include:??$parse_printf_directive@DU?$char_traits@D@std@@V?$allocator@D@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@V?$ctype@D@2@@detail@io@boost@@YA_NAAV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV34@PAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@012@ABV?$ctype@D@4@IE@Z")
#pragma comment(linker, "/include:??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@?$exponential_distribution@M@random@boost@@QBEMAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@@Z")
#pragma comment(linker, "/include:?descriptor@PReLUParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?CType_ARRAYSIZE@FieldOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:?layer_names@?$Net@M@caffe@@QBEABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ")
#pragma comment(linker, "/include:??$Check_LTImpl@HI@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABHABIPBD@Z")
#pragma comment(linker, "/include:?set_scale@PowerParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??_GSoftmaxParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?MergeFrom@BlobProto@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@AAE@ABV012@Uclone_tag@012@@Z")
#pragma comment(linker, "/include:?channels@BlobProto@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$swap@PAVSigmoidParameter@caffe@@@std@@YAXAAPAVSigmoidParameter@caffe@@0@Z")
#pragma comment(linker, "/include:??$forward@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@YA$$QAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@AAPAV10@@Z")
#pragma comment(linker, "/include:?JSType_MAX@FieldOptions@protobuf@google@@2W4FieldOptions_JSType@23@B")
#pragma comment(linker, "/include:?set_has_mirror@TransformationParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?add_input@NetParameter@caffe@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?Stop@Timer@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??_C@_0BJ@HGPHBJBD@Solver?5scaffolding?5done?4?$AA@")
#pragma comment(linker, "/include:?GCD@?$ratio@$0PECEA@$00@boost@@0_JB")
#pragma comment(linker, "/include:??$Creator_ReshapeLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??Bgreg_month@gregorian@boost@@QBEGXZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$ConvolutionLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?top_k@AccuracyParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$HingeLossLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??_R4?$BNLLLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?set_has_state@NetParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??1?$NesterovSolver@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?kDefaultTotalBytesWarningThreshold@CodedInputStream@io@protobuf@google@@0HB")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$AbsValLayer@N@caffe@@@detail@boost@@QAE@PAV?$AbsValLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_R0?AVNetParameter@caffe@@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$Im2colLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$?0ABU?$pair@HH@std@@$$$V@?$pair@$$CBU?$pair@HH@std@@M@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABU?$pair@HH@std@@@1@V?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??0?$BaseDataLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@AccuracyParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??0?$SilenceLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??_R4?$ImageDataLayer@N@caffe@@6B?$BaseDataLayer@N@1@@")
#pragma comment(linker, "/include:?param_size@V1LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??0?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@QAE@PAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@12@@Z")
#pragma comment(linker, "/include:?GetMetadata@EltwiseParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:??0ImageDataParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?default_instance@SliceParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:?window_data_param@V1LayerParameter@caffe@@QBEABVWindowDataParameter@2@XZ")
#pragma comment(linker, "/include:?TanHParameter_Engine_descriptor_@?A0x5e4fc710@caffe@@3PBVEnumDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?allocate@?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@QAEPAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?assign@?$char_traits@D@std@@SAXAADABD@Z")
#pragma comment(linker, "/include:?ByteSize@ParamSpec@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?_Rmost@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?type@?$EltwiseLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?set_delta@SolverParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?descriptor@LogParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$move@AAV?$tuple@$$QAH@std@@@std@@YA$$QAV?$tuple@$$QAH@0@AAV10@@Z")
#pragma comment(linker, "/include:??_R1A@73EA@ios_base@std@@8")
#pragma comment(linker, "/include:?_Reserve@?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?_Alloc_proxy@?$_Vb_val@V?$allocator@_N@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:?a_x@?$br_mul@$00$0GE@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:??_R2?$Im2colLayer@N@caffe@@8")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@PowerParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$BNLLLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$BNLLLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?mutable_tanh_param@LayerParameter@caffe@@QAEPAVTanHParameter@2@XZ")
#pragma comment(linker, "/include:?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z")
#pragma comment(linker, "/include:??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?kEnumTypeFieldNumber@FileDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?SharedCtor@DummyDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?ReductionParameter_ReductionOp_Name@caffe@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4ReductionParameter_ReductionOp@1@@Z")
#pragma comment(linker, "/include:??_G?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??0format_error@io@boost@@QAE@ABV012@@Z")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@ABV23@@Z")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Net@N@caffe@@@boost@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Net@N@caffe@@@boost@@$$QAV23@@Z")
#pragma comment(linker, "/include:?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B")
#pragma comment(linker, "/include:?set_loss@?$Layer@N@caffe@@QAEXHN@Z")
#pragma comment(linker, "/include:?InternalSwap@SolverState@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?compute_output_shape@?$DeconvolutionLayer@N@caffe@@MAEXXZ")
#pragma comment(linker, "/include:?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:??1sp_counted_base@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??0?$allocator@D@std@@QAE@XZ")
#pragma comment(linker, "/include:?GetArenaNoVirtual@?$RepeatedPtrField@VNetParameter@caffe@@@protobuf@google@@IBEPAVArena@23@XZ")
#pragma comment(linker, "/include:??_7?$ContrastiveLossLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??$MakeCheckOpString@NH@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABNABHPBD@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??0Caffe@caffe@@AAE@XZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$SliceLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??$reset@V?$Net@N@caffe@@@?$shared_ptr@V?$Net@N@caffe@@@boost@@QAEXPAV?$Net@N@caffe@@@Z")
#pragma comment(linker, "/include:??$?0ABNAAHX@?$pair@NH@std@@QAE@ABNAAH@Z")
#pragma comment(linker, "/include:?set_phase@LayerParameter@caffe@@QAEXW4Phase@2@@Z")
#pragma comment(linker, "/include:??$_Insert_hint@AAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@1@AAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VV0LayerParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVV0LayerParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?name@_Generic_error_category@std@@UBEPBDXZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@VLayerParameter@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??_R2?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?layers@?$Net@N@caffe@@QBEABV?$vector@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@XZ")
#pragma comment(linker, "/include:??_R0?AV?$GaussianFiller@M@caffe@@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$AbsValLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$_Insert_at@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@1@Z")
#pragma comment(linker, "/include:??_C@_0M@BNKHOGBK@Test?5loss?3?5?$AA@")
#pragma comment(linker, "/include:?diff@?$Blob@H@caffe@@QBEABV?$shared_ptr@VSyncedMemory@caffe@@@boost@@XZ")
#pragma comment(linker, "/include:?Forward@?$Net@M@caffe@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV34@PAM@Z")
#pragma comment(linker, "/include:??_7?$BasePrefetchingDataLayer@M@caffe@@6BInternalThread@1@@")
#pragma comment(linker, "/include:?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@PowerParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$DummyDataLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_C@_0BL@JAJNJKEE@param_?4test_interval?$CI?$CJ?5?$DO?50?$AA@")
#pragma comment(linker, "/include:?crop_size@DataParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$SigmoidLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@V0LayerParameter@caffe@@8")
#pragma comment(linker, "/include:??$checked_delete@V?$HingeLossLayer@M@caffe@@@boost@@YAXPAV?$HingeLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$_Ptr_cat@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@0@0@Z")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@MH@std@@V?$allocator@U?$pair@MH@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@MH@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@QAEPAXI@Z")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PAUbad_weekday@gregorian@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?static_descriptor_initializer_caffe_2eproto_@caffe@@3UStaticDescriptorInitializer_caffe_2eproto@1@A")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$AccuracyLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@VCursor@db@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?DUMMY_DATA@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:?GetMetadata@PowerParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?value@?$is_function_impl@Uvoid_fct_ptr_barrier_reseter@thread_detail@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?LayerSetUp@?$ArgMaxLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?enum_type@FileDescriptor@protobuf@google@@QBEPBVEnumDescriptor@23@H@Z")
#pragma comment(linker, "/include:?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?set_level@NetState@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?set_max_iter@SolverParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?kNumFieldNumber@BlobProto@caffe@@2HB")
#pragma comment(linker, "/include:?Backward_gpu@?$BNLLLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??H?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QBE?AV01@H@Z")
#pragma comment(linker, "/include:??_R2logic_error@std@@8")
#pragma comment(linker, "/include:??$_Insert_hint@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?cache_images@WindowDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PAF@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$?0V?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@@shared_count@detail@boost@@QAE@PAV?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@2@@Z")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:?ByteSize@NetStateRule@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B")
#pragma comment(linker, "/include:?global_pooling@PoolingParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??0?$allocator@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@2@@Z")
#pragma comment(linker, "/include:?value@?$operator_returns_Ret@V?$basic_istream@DU?$char_traits@D@std@@@std@@GUdont_care@has_right_shift_impl@detail@boost@@$0A@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:?mutable_spp_param@LayerParameter@caffe@@QAEPAVSPPParameter@2@XZ")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$generate_int_float_pair@M$07V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@detail@random@boost@@YA?AU?$pair@MH@std@@AAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@U?$bool_@$00@mpl@2@@Z")
#pragma comment(linker, "/include:??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:?has_pad@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Net@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:??$GetReferenceableValue@M@google@@YAABMABM@Z")
#pragma comment(linker, "/include:??_C@_0FH@MDAKDGJB@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z")
#pragma comment(linker, "/include:?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??0?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0DJ@DKLLNGFA@Cannot?5specify?5mean_file?5and?5mea@")
#pragma comment(linker, "/include:?gInstantiationGuardBaseConvolutionLayer@caffe@@3DA")
#pragma comment(linker, "/include:?set_has_power@PowerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??0?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R0?AV?$NeuronLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?has_fixed_range@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@2_NB")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$FilterLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_C@_0P@PPCCOBDK@bottom?5count?5?$CI?$AA@")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@E@std@@@2@XZ")
#pragma comment(linker, "/include:?MergeFrom@?$RepeatedPtrField@VLayerParameter@caffe@@@protobuf@google@@QAEXABV123@@Z")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@QAEPAV?$vector@MV?$allocator@M@std@@@2@I@Z")
#pragma comment(linker, "/include:?ByteSize@DropoutParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?value@?$trait_impl@V?$basic_istream@DU?$char_traits@D@std@@@std@@_JUdont_care@has_right_shift_impl@detail@boost@@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:?set_has_shift@PowerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?DimCheckMode_MAX@ParamSpec@caffe@@2W4ParamSpec_DimCheckMode@2@B")
#pragma comment(linker, "/include:?lock_flag_value@basic_timed_mutex@detail@boost@@2JB")
#pragma comment(linker, "/include:?LengthDelimitedSize@WireFormatLite@internal@protobuf@google@@SAHH@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$InnerProductLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$SoftmaxLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@1@AAPAU21@@Z")
#pragma comment(linker, "/include:??$Check_LEImpl@HH@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH0PBD@Z")
#pragma comment(linker, "/include:?InternalSwap@InfogainLossParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:??$CreateInternal@VV1LayerParameter@caffe@@@Arena@protobuf@google@@AAEPAVV1LayerParameter@caffe@@_N@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$ExpLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?_Buynode0@?$_Tree_buy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABH@2@V?$tuple@$$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABH@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@1@PAPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$ThresholdLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$ThresholdLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_C@_0CJ@OFDKKMPF@with?5integer?5values?5in?5?$HL0?0?51?0?5?4?4@")
#pragma comment(linker, "/include:??$swap@PAVMVNParameter@caffe@@@std@@YAXAAPAVMVNParameter@caffe@@0@Z")
#pragma comment(linker, "/include:?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??0SliceParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?force_instantiate@init@?$min_shift_initializer@N@detail@math@boost@@QBEXXZ")
#pragma comment(linker, "/include:??0?$XavierFiller@N@caffe@@QAE@ABVFillerParameter@1@@Z")
#pragma comment(linker, "/include:?value@?$result_@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?kPowerParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?set_kernel_size@PoolingParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$forward@PAVcondition_variable@boost@@@std@@YA$$QAPAVcondition_variable@boost@@AAPAV12@@Z")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@ExpParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$_Uninit_move@PAPAV?$FlattenLayer@M@caffe@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@@std@@YAPAPAV?$FlattenLayer@M@caffe@@PAPAV12@00AAU?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_R4?$BaseConvolutionLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?Clear@?$RepeatedPtrField@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@protobuf@google@@QAEXXZ")
#pragma comment(linker, "/include:??_C@_0DF@BDEEEECD@The?5added?5data?5must?5be?5a?5multipl@")
#pragma comment(linker, "/include:??1?$DropoutLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??1?$ImageDataLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?New@?$GenericTypeHandler@VBlobProto@caffe@@@internal@protobuf@google@@SAPAVBlobProto@caffe@@PAVArena@34@@Z")
#pragma comment(linker, "/include:?Clear@?$GenericTypeHandler@VV1LayerParameter@caffe@@@internal@protobuf@google@@SAXPAVV1LayerParameter@caffe@@@Z")
#pragma comment(linker, "/include:?kNoArenaPointer@GeneratedMessageReflection@internal@protobuf@google@@2HB")
#pragma comment(linker, "/include:?output_blob_indices@?$Net@M@caffe@@QBEABV?$vector@HV?$allocator@H@std@@@std@@XZ")
#pragma comment(linker, "/include:??_G?$ConstantFiller@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?initted@Timer@caffe@@QAE_NXZ")
#pragma comment(linker, "/include:?clear@?$vector@_NV?$allocator@_N@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:?GetMetadata@WindowDataParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?DataLayerSetUp@?$ImageDataLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R2BlobProtoVector@caffe@@8")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVSolverState@caffe@@@internal@protobuf@google@@YAPBVSolverState@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:??Y?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QAEAAV01@H@Z")
#pragma comment(linker, "/include:??_C@_0L@NOPCDCEC@net?5file?3?5?$AA@")
#pragma comment(linker, "/include:??$?6V?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@Uthrow_line_@2@H@boost@@YAABV?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@0@ABV120@ABV?$error_info@Uthrow_line_@boost@@H@0@@Z")
#pragma comment(linker, "/include:?_Rrotate@?$_Tree@V?$_Tmap_traits@PBXUtss_data_node@detail@boost@@U?$less@PBX@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?DataLayerSetUp@?$WindowDataLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?default_instance_@InnerProductParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?begin@?$vector@MV?$allocator@M@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_R3bad_exception@std@@8")
#pragma comment(linker, "/include:?is_integral@?$integer_traits_base@K$0A@$0PPPPPPPP@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$CreateMaybeMessage@VNetState@caffe@@@Arena@protobuf@google@@CAPAVNetState@caffe@@PAV012@ZZ")
#pragma comment(linker, "/include:?lrn_param@LayerParameter@caffe@@QBEABVLRNParameter@2@XZ")
#pragma comment(linker, "/include:?set_backend@DataParameter@caffe@@QAEXW4DataParameter_DB@2@@Z")
#pragma comment(linker, "/include:?default_instance@PoolingParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:?num_outputs@?$Net@N@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?kNumberFieldNumber@FieldDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?CreateInstanceNoArena@ArenaStringPtr@internal@protobuf@google@@AAEXPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?allocate@?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@QAEPAPAV?$FlattenLayer@M@caffe@@I@Z")
#pragma comment(linker, "/include:?tempering_t@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@2IB")
#pragma comment(linker, "/include:??_R0?AV?$XavierFiller@N@caffe@@@8")
#pragma comment(linker, "/include:?New@ThresholdParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??2@YAPAXIPAX@Z")
#pragma comment(linker, "/include:?GetArenaNoVirtual@RepeatedPtrFieldBase@internal@protobuf@google@@IBEPAVArena@34@XZ")
#pragma comment(linker, "/include:??1shared_count@detail@boost@@QAE@XZ")
#pragma comment(linker, "/include:?set_has_mean_file@DataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?New@SolverState@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??_R3ArgMaxParameter@caffe@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$SPPLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??E?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@SolverParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$SoftmaxWithLossLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtualNoRecursionDepth@VBlobShape@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVBlobShape@caffe@@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??0?$int_adapter@_J@date_time@boost@@QAE@_J@Z")
#pragma comment(linker, "/include:?has_margin@ContrastiveLossParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?has_scale@ImageDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$MVNLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@@std@@YAXPAPAV?$FlattenLayer@M@caffe@@0AAU?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$ReshapeLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$destroy@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@@std@@QAEXPAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@1@@Z")
#pragma comment(linker, "/include:?has_name@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@PAV?$Blob@M@caffe@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??0?$Blob@M@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?history@SolverState@caffe@@QBEABVBlobProto@2@H@Z")
#pragma comment(linker, "/include:?mutable_image_data_param@V1LayerParameter@caffe@@QAEPAVImageDataParameter@2@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@ThresholdParameter@caffe@@8")
#pragma comment(linker, "/include:??0?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??$forward@PAV?$Blob@M@caffe@@@std@@YA$$QAPAV?$Blob@M@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??$_Umove@PAPAV?$FlattenLayer@N@caffe@@@?$vector@PAV?$FlattenLayer@N@caffe@@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@IAEPAPAV?$FlattenLayer@N@caffe@@PAPAV23@00@Z")
#pragma comment(linker, "/include:?MergeFrom@ImageDataParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?value@?$trait_impl1@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@GUdont_care@has_right_shift_impl@detail@boost@@$0A@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_G?$ConstantFiller@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$forward@U?$pair@NH@std@@@std@@YA$$QAU?$pair@NH@0@AAU10@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@bad_month@gregorian@boost@@8")
#pragma comment(linker, "/include:??_C@_0BI@KECNKFLL@num_?5?$DN?$DN?5top?$FL0?$FN?9?$DOcount?$CI?$CJ?$AA@")
#pragma comment(linker, "/include:?eltwise_param@V1LayerParameter@caffe@@QBEABVEltwiseParameter@2@XZ")
#pragma comment(linker, "/include:??$?0V?$Blob@M@caffe@@@?$shared_ptr@V?$Blob@M@caffe@@@boost@@QAE@PAV?$Blob@M@caffe@@@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$ContrastiveLossLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?reset@?$shared_ptr@VRNG@Caffe@caffe@@@boost@@QAEXXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@PythonParameter@caffe@@8")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$MVNLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$MVNLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??0?$optional_base@Vlocale@std@@@optional_detail@boost@@IAE@XZ")
#pragma comment(linker, "/include:?Swap@AccuracyParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?output_l@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@2IB")
#pragma comment(linker, "/include:??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@$$QAV34@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@8")
#pragma comment(linker, "/include:?kBatchsizeFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B")
#pragma comment(linker, "/include:??_C@_0DB@ODLNBGGE@Must?5specify?5?8width?8?5once?0?5or?5on@")
#pragma comment(linker, "/include:??1?$_Tree_comp@$0A@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$swap@_J@std@@YAXAA_J0@Z")
#pragma comment(linker, "/include:?kNameFieldNumber@ServiceDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??$construct@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@$$$V@?$allocator_traits@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@1@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@1@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PA_K@detail@boost@@2_NB")
#pragma comment(linker, "/include:?DROPOUT@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?kDetFgThresholdFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?InitAsDefaultInstance@MemoryDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$Blob@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_8?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@7B@")
#pragma comment(linker, "/include:??_R3ios_base@std@@8")
#pragma comment(linker, "/include:?LayerSetUp@?$PoolingLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??1ImageDataParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$FlattenLayer@N@caffe@@8")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@QAEPAV?$shared_ptr@V?$Net@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?digits10@_Num_base@std@@2HB")
#pragma comment(linker, "/include:?requires_stringbuf@?$lexical_cast_stream_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$digits_imp@NU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@math@boost@@@detail@policies@math@boost@@YAHABU?$bool_@$00@mpl@3@@Z")
#pragma comment(linker, "/include:?kStepvalueFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$forward@AAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAAAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AAU10@@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVMVNParameter@caffe@@@internal@protobuf@google@@YAPBVMVNParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?_Freeheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$MemoryDataLayer@N@caffe@@@boost@@YAXPAV?$MemoryDataLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?type@?$MVNLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??_R4NetStateRule@caffe@@6B@")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@@2@@std@@YAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_R2?$Im2colLayer@M@caffe@@8")
#pragma comment(linker, "/include:?MergeFrom@Datum@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?kCoeffFieldNumber@ReductionParameter@caffe@@2HB")
#pragma comment(linker, "/include:?_Reallocate@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??_R0?AV?$WindowDataLayer@M@caffe@@@8")
#pragma comment(linker, "/include:??0?$MemoryDataLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_G?$WindowDataLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?has_context_pad@WindowDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?_Inside@?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@IBE_NPBQAV?$Blob@M@caffe@@@Z")
#pragma comment(linker, "/include:??_7?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@6Bbad_year@gregorian@2@@")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@InnerProductParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?swap@?$shared_ptr@VDB@db@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$SplitLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$ImageDataLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?clone@?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:??$?0AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAHX@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAH@Z")
#pragma comment(linker, "/include:?gInstantiationGuardBlob@caffe@@3DA")
#pragma comment(linker, "/include:?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z")
#pragma comment(linker, "/include:?DimCheckMode_ARRAYSIZE@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?WithinChannelBackward@?$LRNLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$Check_GTImpl@HH@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH0PBD@Z")
#pragma comment(linker, "/include:??_R4ConcatParameter@caffe@@6B@")
#pragma comment(linker, "/include:?pad@PoolingParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?has_axis@ReshapeParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_0BF@KFPDHOEA@Check?5failed?3?5data_?5?$AA@")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$ArgMaxLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??0bad_month@gregorian@boost@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_08GGGKGBEJ@num?5?$DO?$DN?51?$AA@")
#pragma comment(linker, "/include:??0?$SliceLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@Vthread@boost@@V12@@detail@boost@@YAXPAV?$shared_ptr@Vthread@boost@@@1@PAVthread@1@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$LRNLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?ABS_D@?$ratio@$0CHBA@$00@boost@@0_JB")
#pragma comment(linker, "/include:??$_Move@AAPAV?$DataTransformer@M@caffe@@@std@@YA$$QAPAV?$DataTransformer@M@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??1?$BilinearFiller@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R4?$SoftmaxLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@@std@@YAXPAV?$vector@MV?$allocator@M@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?TYPE_DOUBLE@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Type@23@B")
#pragma comment(linker, "/include:??_R3?$WindowDataLayer@M@caffe@@8")
#pragma comment(linker, "/include:?value@?$is_character@G@detail@boost@@2_NB")
#pragma comment(linker, "/include:?has_concat_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?_Inside@?$vector@NV?$allocator@N@std@@@std@@IBE_NPBN@Z")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@V12@@?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@$$QAV23@@Z")
#pragma comment(linker, "/include:??_C@_0DC@EOCEAFOA@Both?5net_param?5and?5net_file?5may?5@")
#pragma comment(linker, "/include:?ApplyUpdate@?$SGDSolver@M@caffe@@MAEXXZ")
#pragma comment(linker, "/include:?deallocate@?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?not_a_number@?$int_adapter@I@date_time@boost@@SA?BV123@XZ")
#pragma comment(linker, "/include:??_7MVNParameter@caffe@@6B@")
#pragma comment(linker, "/include:?kDummyDataParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?has_mean_file@WindowDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$Check_GTImpl@MH@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABMABHPBD@Z")
#pragma comment(linker, "/include:??$forward@AAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@0@AAPAU10@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$PowerLayer@M@caffe@@@detail@boost@@QAE@PAV?$PowerLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:?value@?$is_reference_impl@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?LegacyShape@?$Blob@M@caffe@@QBEHH@Z")
#pragma comment(linker, "/include:??0?$Blob@M@caffe@@QAE@ABV?$vector@HV?$allocator@H@std@@@std@@@Z")
#pragma comment(linker, "/include:?InternalThreadEntry@?$ImageDataLayer@M@caffe@@MAEXXZ")
#pragma comment(linker, "/include:??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@QAE@XZ")
#pragma comment(linker, "/include:??_7?$ReshapeLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?kConcatDimFieldNumber@ConcatParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_C@_0CG@BLAKBFDE@img_channels?5?$DN?$DN?5data_mean_?4chann@")
#pragma comment(linker, "/include:?force_gray@TransformationParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_0BI@PIEPDGKP@count_?5?$DN?$DN?5other?4count?$CI?$CJ?$AA@")
#pragma comment(linker, "/include:?_Grow_to@?$vector@HV?$allocator@H@std@@@std@@IBEII@Z")
#pragma comment(linker, "/include:?value@?$is_arithmetic_impl@V?$basic_istream@DU?$char_traits@D@std@@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?descriptor@NetParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?_Destroy@?$vector@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@IAEXPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@2@0@Z")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$ConcatLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$Filler@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?capacity@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??0too_few_args@io@boost@@QAE@II@Z")
#pragma comment(linker, "/include:?blobs_lr@V1LayerParameter@caffe@@QBEMH@Z")
#pragma comment(linker, "/include:?res_adjust@?$time_resolution_traits@Utime_resolution_traits_adapted64_impl@date_time@boost@@$04$0PECEA@$05H@date_time@boost@@SA_JXZ")
#pragma comment(linker, "/include:?Forward_cpu@?$ConvolutionLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$SplitLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0SolverState@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@8")
#pragma comment(linker, "/include:?has_beta@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?default_instance@HDF5DataParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??$?0VRNG@Caffe@caffe@@@?$shared_ptr@VRNG@Caffe@caffe@@@boost@@QAE@PAVRNG@Caffe@caffe@@@Z")
#pragma comment(linker, "/include:?kWeightDecayFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@1@$$QA_N@Z")
#pragma comment(linker, "/include:??_R2overflow_error@std@@8")
#pragma comment(linker, "/include:??$Own@VSigmoidParameter@caffe@@@Arena@protobuf@google@@QAEXPAVSigmoidParameter@caffe@@@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$MultinomialLogisticLossLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$AccuracyLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?kScaleFieldNumber@PowerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@std@@QAEPAV?$vector@_NV?$allocator@_N@std@@@2@I@Z")
#pragma comment(linker, "/include:?has_pooling_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$ReductionLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$destroy@V?$vector@HV?$allocator@H@std@@@std@@@?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@QAEXPAV?$vector@HV?$allocator@H@std@@@1@@Z")
#pragma comment(linker, "/include:??C?$shared_ptr@V?$Filler@N@caffe@@@boost@@QBEPAV?$Filler@N@caffe@@XZ")
#pragma comment(linker, "/include:?LayerSetUp@?$ExpLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$EuclideanLossLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?descriptor@PowerParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$?0V?$LogLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$LogLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$partial_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@NH@std@@@std@@@std@@@std@@U?$greater@U?$pair@NH@std@@@2@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@NH@std@@@std@@@std@@@0@00U?$greater@U?$pair@NH@std@@@0@@Z")
#pragma comment(linker, "/include:?swap@?$shared_ptr@V?$EltwiseLayer@N@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z")
#pragma comment(linker, "/include:?InitAsDefaultInstance@ImageDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?ACCURACY@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??1?$LossLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?set_share_mode@ParamSpec@caffe@@QAEXW4ParamSpec_DimCheckMode@2@@Z")
#pragma comment(linker, "/include:?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$Im2colLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8")
#pragma comment(linker, "/include:??_G?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@QAEPAXI@Z")
#pragma comment(linker, "/include:??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@1@@Z")
#pragma comment(linker, "/include:?has_channels@MemoryDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??0?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z")
#pragma comment(linker, "/include:??$caffe_rng_gaussian@M@caffe@@YAXHMMPAM@Z")
#pragma comment(linker, "/include:?kDoubleSize@WireFormatLite@internal@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_7?$ThresholdLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$WindowDataLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R1M@?0A@EA@exception@boost@@8")
#pragma comment(linker, "/include:?push_back@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@QAEXABV?$vector@MV?$allocator@M@std@@@2@@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$EuclideanLossLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R3?$thread_data@V?$bind_t@XV?$mf0@XVInternalThread@caffe@@@_mfi@boost@@V?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@3@@_bi@boost@@@detail@boost@@8")
#pragma comment(linker, "/include:??_7out_of_range@std@@6B@")
#pragma comment(linker, "/include:?MinBottomBlobs@?$EltwiseLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@YAXPAI0AAU?$_Wrap_alloc@V?$allocator@I@std@@@0@@Z")
#pragma comment(linker, "/include:??$GetConvolutionLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V12@@?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@$$QAV23@@Z")
#pragma comment(linker, "/include:?GetCachedSize@DataParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$ArgMaxLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$vDiv@M@@YAXHPBM0PAM@Z")
#pragma comment(linker, "/include:??1?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0CM@GPKPCHDC@Padding?5Layer?5takes?5a?5single?5blo@")
#pragma comment(linker, "/include:??$addressof@D@std@@YAPADAAD@Z")
#pragma comment(linker, "/include:??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:??_C@_0DO@DCMBEHIO@V0NetParameter?$DL?5use?5?4?1build?1tool@")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$InfogainLossLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??0?$Solver@M@caffe@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$ReshapeLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$LRNLayer@N@caffe@@8")
#pragma comment(linker, "/include:?mutable_unknown_fields@ArgMaxParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??$?0$$QAU?$pair@HH@std@@$$$V@?$pair@$$CBU?$pair@HH@std@@U12@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAU?$pair@HH@std@@@1@V?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$shared_ptr@V?$Net@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@1@@Z")
#pragma comment(linker, "/include:??1CPUTimer@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@1@AAPAU21@@Z")
#pragma comment(linker, "/include:??$?0ABU?$pair@HH@std@@$$$V@?$pair@$$CBU?$pair@HH@std@@H@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABU?$pair@HH@std@@@1@V?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?what@system_error@system@boost@@UBEPBDXZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@PAU1234@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@U1234@@std@@YAPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@PAU1234@00AAU?$_Wrap_alloc@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?unlock@basic_timed_mutex@detail@boost@@QAEXXZ")
#pragma comment(linker, "/include:?set_has_root_folder@ImageDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$ThresholdLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?has_kernel_h@ConvolutionParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?has_channels@Datum@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?STOCHASTIC@SPPParameter@caffe@@2W4SPPParameter_PoolMethod@2@B")
#pragma comment(linker, "/include:??_C@_0BH@NMONEIGF@num?5?$CF?5batch_size_?5?$DN?$DN?50?$AA@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@domain_error@std@@8")
#pragma comment(linker, "/include:?MergeFrom@MemoryDataParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??A?$vector@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@QAEAAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?set_crop_size@DataParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?kDropoutRatioFieldNumber@DropoutParameter@caffe@@2HB")
#pragma comment(linker, "/include:?base@?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?_Tidy@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@2@@std@@IAEXXZ")
#pragma comment(linker, "/include:?mutable_source@HDF5DataParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?context_pad@WindowDataParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$SPPLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@VSyncedMemory@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?mutable_unknown_fields@V0LayerParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??0?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@QAE@ABU012@@Z")
#pragma comment(linker, "/include:?diff_at@?$Blob@H@caffe@@QBEHHHHH@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$ReductionLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?get@?$shared_ptr@V?$Blob@N@caffe@@@boost@@QBEPAV?$Blob@N@caffe@@XZ")
#pragma comment(linker, "/include:?pyramid_height@SPPParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?on_error@?$simple_exception_policy@G$00$0M@Ubad_month@gregorian@boost@@@CV@boost@@SAXGGW4violation_enum@23@@Z")
#pragma comment(linker, "/include:??_C@_02LPGDFFPL@L1?$AA@")
#pragma comment(linker, "/include:?has_pad@PoolingParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_0L@KDIGCGPK@Iteration?5?$AA@")
#pragma comment(linker, "/include:??_R0?AV?$FilterLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?resize@?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@QAEXI@Z")
#pragma comment(linker, "/include:?value@?$is_abstract_imp@E@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$SilenceLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$PReLULayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?Backward_cpu@?$Im2colLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?set_phase@NetStateRule@caffe@@QAEXW4Phase@2@@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$LRNLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$Clear@VTypeHandler@?$RepeatedPtrField@VNetState@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXXZ")
#pragma comment(linker, "/include:?min@?$br_mul@$00$00@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:?SharedCtor@MVNParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R0?AU?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$DataLayer@M@caffe@@@detail@boost@@QAE@PAV?$DataLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?has_exp_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??1?$PoolingLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$OwnInternal@VLRNParameter@caffe@@@Arena@protobuf@google@@AAEXPAVLRNParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:??$arena_destruct_object@UContainer@InternalMetadataWithArena@internal@protobuf@google@@@internal@protobuf@google@@YAXPAX@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@SoftmaxParameter@caffe@@8")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@Vthread@boost@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$LRNLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$LRNLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z")
#pragma comment(linker, "/include:?EltwiseOp_ARRAYSIZE@EltwiseParameter@caffe@@2HB")
#pragma comment(linker, "/include:?has_memory_data_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$HingeLossLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?swap@shared_count@detail@boost@@QAEXAAV123@@Z")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@ABV?$allocator@D@1@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$ReLULayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?set_has_max_level@NetStateRule@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$Own@VNetParameter@caffe@@@Arena@protobuf@google@@QAEXPAVNetParameter@caffe@@@Z")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@I@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?_Unchecked@?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEPADXZ")
#pragma comment(linker, "/include:??$col2im_cpu@N@caffe@@YAXPBNHHHHHHHHHPAN@Z")
#pragma comment(linker, "/include:??$_Move@AAPAVDB@db@caffe@@@std@@YA$$QAPAVDB@db@caffe@@AAPAV123@@Z")
#pragma comment(linker, "/include:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z")
#pragma comment(linker, "/include:??1DropoutParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$Im2colLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$Im2colLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@SoftmaxParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:?kMvnParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?NONE@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??$?0V?$InnerProductLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$InnerProductLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?value@?$is_basic_lockable@PAV?$unique_lock@Vmutex@boost@@@boost@@@sync@boost@@2_NB")
#pragma comment(linker, "/include:?layer_param@?$Layer@M@caffe@@QBEABVLayerParameter@2@XZ")
#pragma comment(linker, "/include:??A?$vector@V?$shared_ptr@V?$Net@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@QAEAAV?$shared_ptr@V?$Net@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?test_nets@?$Solver@N@caffe@@QAEABV?$vector@V?$shared_ptr@V?$Net@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@XZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$FlattenLayer@N@caffe@@PAV12@PAV12@@std@@YAPAPAV?$FlattenLayer@N@caffe@@PAPAV12@00AAU?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:?Run@FunctionClosure0@internal@protobuf@google@@UAEXXZ")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@NetParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$SigmoidCrossEntropyLossLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:__CT??_R0?AVclone_base@exception_detail@boost@@@8??0clone_base@exception_detail@boost@@QAE@ABV012@@Z40324")
#pragma comment(linker, "/include:??_7ConcatParameter@caffe@@6B@")
#pragma comment(linker, "/include:??_R0?AVtoo_few_args@io@boost@@@8")
#pragma comment(linker, "/include:?ReadTagWithCutoff@CodedInputStream@io@protobuf@google@@QAE?AU?$pair@I_N@std@@I@Z")
#pragma comment(linker, "/include:??$call_put_last@DU?$char_traits@D@std@@$$CBU?$group1@U?$group2@U?$_Smanip@_J@std@@ABM@detail@io@boost@@@detail@io@boost@@@detail@io@boost@@YAXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@PBX@Z")
#pragma comment(linker, "/include:??0handle_manager@win32@detail@boost@@QAE@PAX@Z")
#pragma comment(linker, "/include:?deallocate@?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@QAEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@2@I@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAH@2@V?$tuple@$$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAH@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??_C@_0O@BFJCFAAK@unknown?5error?$AA@")
#pragma comment(linker, "/include:?ToProto@?$Net@N@caffe@@QBEXPAVNetParameter@2@_N@Z")
#pragma comment(linker, "/include:??_7NetState@caffe@@6B@")
#pragma comment(linker, "/include:??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??0time_duration@posix_time@boost@@QAE@W4special_values@date_time@2@@Z")
#pragma comment(linker, "/include:??$?0V?$Filler@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$Filler@N@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0CG@HEELPGDN@Momentum?5cannot?5be?5used?5with?5Ada@")
#pragma comment(linker, "/include:?type@?$DropoutLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@PAV?$FlattenLayer@M@caffe@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?assign@?$char_traits@D@std@@SAPADPADID@Z")
#pragma comment(linker, "/include:??$forward@AAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@YAAAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@AAV12@@Z")
#pragma comment(linker, "/include:?ConcatParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$ReshapeLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$Layer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$enable_current_exception@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@boost@@YA?AV?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@0@ABU?$error_info_injector@Vtoo_few_args@io@boost@@@20@@Z")
#pragma comment(linker, "/include:?has_phase@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?ReadImageToCVMat@caffe@@YA?AVMat@cv@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH@Z")
#pragma comment(linker, "/include:?count@?$Blob@N@caffe@@QBEHHH@Z")
#pragma comment(linker, "/include:?has_signaling_NaN@_Num_base@std@@2_NB")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@SolverState@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??0RNG@Caffe@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??_R2?$EltwiseLayer@N@caffe@@8")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_pd@PAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@VNo_Op@?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@23@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:__CT??_R0?AV?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@@8??0?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z44")
#pragma comment(linker, "/include:?has_threshold_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?Reshape@?$NeuronLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@PAV12@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@V12@@std@@YAPAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:__real@00800000")
#pragma comment(linker, "/include:?UpgradeV0LayerParameter@caffe@@YA_NABVV1LayerParameter@1@PAV21@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$ConcatLayer@M@caffe@@8")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$MemoryDataLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?SharedCtor@MemoryDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_7?$MSRAFiller@M@caffe@@6B@")
#pragma comment(linker, "/include:??$?0V?$tuple@ABU?$pair@HH@std@@@std@@V?$tuple@$$$V@1@$0A@$S@?$pair@$$CBU?$pair@HH@std@@M@std@@QAE@AAV?$tuple@ABU?$pair@HH@std@@@1@AAV?$tuple@$$$V@1@U?$_Arg_idx@$0A@@1@U?$_Arg_idx@$S@1@@Z")
#pragma comment(linker, "/include:?initializer@?$min_shift_initializer@N@detail@math@boost@@2Uinit@1234@B")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$shared_ptr@V?$Net@M@caffe@@@boost@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@@std@@YAPAV?$shared_ptr@V?$Net@M@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:??$ReadRepeatedPrimitive@I$0N@@WireFormatLite@internal@protobuf@google@@SA_NHIPAVCodedInputStream@io@23@PAV?$RepeatedField@I@23@@Z")
#pragma comment(linker, "/include:??_7?$InnerProductLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??0?$SplitLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??_C@_0CE@GNCEKHFP@input_height?5?$DN?$DN?5data_mean_?4heigh@")
#pragma comment(linker, "/include:?force_instantiate@?$min_shift_initializer@N@detail@math@boost@@SAXXZ")
#pragma comment(linker, "/include:??_7?$SoftmaxLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:__CTA6?AV?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:??_R0?AV?$PReLULayer@M@caffe@@@8")
#pragma comment(linker, "/include:??_GContrastiveLossParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?eq@?$char_traits@D@std@@SA_NABD0@Z")
#pragma comment(linker, "/include:??$destroy@V?$vector@MV?$allocator@M@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@QAEXPAV?$vector@MV?$allocator@M@std@@@1@@Z")
#pragma comment(linker, "/include:?SharedDtor@HDF5DataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$LRNLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_C@_0CG@BLFDFHGM@top?$FL0?$FN?9?$DOcount?$CI?$CJ?5?$DN?$DN?5bottom?$FL0?$FN?9?$DOco@")
#pragma comment(linker, "/include:??$_Unchecked@PAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@PAV12@@Z")
#pragma comment(linker, "/include:??$?0V?$DummyDataLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$DummyDataLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?Clear@SigmoidParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_E?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@WM@AEPAXI@Z")
#pragma comment(linker, "/include:?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B")
#pragma comment(linker, "/include:??$_Distance2@V?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@std@@H@std@@YAXV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@0@0AAHUrandom_access_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?deallocate@?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@QAEXPAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@2@I@Z")
#pragma comment(linker, "/include:?set_margin@ContrastiveLossParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??1?$EltwiseLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_G?$ArgMaxLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R0?AVNetStateRule@caffe@@@8")
#pragma comment(linker, "/include:?begin@?$vector@_NV?$allocator@_N@std@@@std@@QBE?AV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?EltwiseParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?kLayerFieldNumber@NetParameter@caffe@@2HB")
#pragma comment(linker, "/include:?has_exp_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$ReshapeLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$swap@PAV?$Filler@N@caffe@@@std@@YAXAAPAV?$Filler@N@caffe@@0@Z")
#pragma comment(linker, "/include:?_Reserve@?$vector@U?$pair@MH@std@@V?$allocator@U?$pair@MH@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??$forward@ABQAV?$Blob@N@caffe@@@std@@YAABQAV?$Blob@N@caffe@@ABQAV12@@Z")
#pragma comment(linker, "/include:?kernel_h@ConvolutionParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$EltwiseLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?_Freenode0@?$_Tree_buy@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??$destroy@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@QAEXPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@Z")
#pragma comment(linker, "/include:?type@?$DataLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??$_Umove@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@?$vector@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@IAEPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@1@PAV21@00@Z")
#pragma comment(linker, "/include:??_C@_0CH@DDFIKDNM@Restoring?5previous?5solver?5status@")
#pragma comment(linker, "/include:??$Mutable@VTypeHandler@?$RepeatedPtrField@VLayerParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEPAVLayerParameter@caffe@@H@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$AccuracyLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$InnerProductLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$FlattenLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$InfogainLossLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?MergeFrom@LRNParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??_Gbad_year@gregorian@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?capacity@?$vector@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_7PowerParameter@caffe@@6B@")
#pragma comment(linker, "/include:?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@QBE?AU?$less@U?$pair@HH@std@@@2@XZ")
#pragma comment(linker, "/include:?Clear@WindowDataParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??A?$vector@IV?$allocator@_N@std@@@std@@QAEAAII@Z")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@SolverParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??Y?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAEAAV01@H@Z")
#pragma comment(linker, "/include:?capacity@?$vector@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?InnerProductParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??_7?$HingeLossLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??A?$vector@PAV?$FlattenLayer@M@caffe@@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@QAEAAPAV?$FlattenLayer@M@caffe@@I@Z")
#pragma comment(linker, "/include:??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??1?$ConcatLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R0?AV?$AccuracyLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@VNetParameter@caffe@@@std@@@std@@SAIABV?$allocator@VNetParameter@caffe@@@2@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@VGenerator@RNG@Caffe@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$FlattenLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_G?$Layer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?POWER@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@QAEPAXI@Z")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PAG@detail@boost@@2_NB")
#pragma comment(linker, "/include:?_Grow_to@?$vector@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@IBEII@Z")
#pragma comment(linker, "/include:??_R3?$SPPLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_C@_0BJ@NAILHGLL@?5Layer?5produces?5at?5most?5?$AA@")
#pragma comment(linker, "/include:??$_Uninit_move@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@@2@@std@@YAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VBlobShape@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVBlobShape@caffe@@@Z")
#pragma comment(linker, "/include:??_R3overflow_error@std@@8")
#pragma comment(linker, "/include:??_7?$SplitLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??0?$DeconvolutionLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??$?0V?$SoftmaxLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$SoftmaxLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?num@?$ratio@$0GE@$00@boost@@2_JB")
#pragma comment(linker, "/include:?source@WindowDataParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?New@MemoryDataParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?CopyTrainedLayersFrom@?$Net@M@caffe@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?has_force_backward@NetParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$_Allocate@VNetParameter@caffe@@@std@@YAPAVNetParameter@caffe@@IPAV12@@Z")
#pragma comment(linker, "/include:??_7?$ExpLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?GetMetadata@ExpParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_C@_0M@KANHIMLE@Convolution?$AA@")
#pragma comment(linker, "/include:?TYPE_BOOL@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Type@23@B")
#pragma comment(linker, "/include:?layer_by_name@?$Net@M@caffe@@QBE?BV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Net@M@caffe@@@boost@@V12@@?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Net@M@caffe@@@boost@@$$QAV23@@Z")
#pragma comment(linker, "/include:?ReadVarint32@CodedInputStream@io@protobuf@google@@QAE_NPAI@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$SoftmaxWithLossLayer@N@caffe@@@boost@@YAXPAV?$SoftmaxWithLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?unknown_fields@InternalMetadataWithArena@internal@protobuf@google@@QBEABVUnknownFieldSet@34@XZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@VSyncedMemory@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??0DropoutParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?pow@@YAMMH@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$DummyDataLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$Net@N@caffe@@@detail@boost@@QAE@PAV?$Net@N@caffe@@@Z")
#pragma comment(linker, "/include:??0?$exponential_distribution@M@random@boost@@QAE@M@Z")
#pragma comment(linker, "/include:??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z")
#pragma comment(linker, "/include:??$swap@PAVDummyDataParameter@caffe@@@std@@YAXAAPAVDummyDataParameter@caffe@@0@Z")
#pragma comment(linker, "/include:?DECONVOLUTION@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??1?$ReshapeLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??0?$tuple@$$$V@std@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@2@@Z")
#pragma comment(linker, "/include:??$caffe_sub@M@caffe@@YAXHPBM0PAM@Z")
#pragma comment(linker, "/include:?push_back@?$vector@NV?$allocator@N@std@@@std@@QAEX$$QAN@Z")
#pragma comment(linker, "/include:?engine@TanHParameter@caffe@@QBE?AW4TanHParameter_Engine@2@XZ")
#pragma comment(linker, "/include:?_Buynode0@?$_Tree_buy@U?$pair@$$CBU?$pair@HH@std@@H@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?_Grow_to@?$vector@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@IBEII@Z")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@ConvolutionParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?notify_all_at_thread_exit@thread_data_base@detail@boost@@UAEXPAVcondition_variable@3@PAVmutex@3@@Z")
#pragma comment(linker, "/include:??0HingeLossParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?swap@?$shared_ptr@VCursor@db@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:??_R0?AV?$EuclideanLossLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??$checked_delete@V?$PReLULayer@M@caffe@@@boost@@YAXPAV?$PReLULayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?descriptor@HDF5OutputParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$ThresholdLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?Clear@?$RepeatedField@_N@protobuf@google@@QAEXXZ")
#pragma comment(linker, "/include:?Backward_gpu@?$ReLULayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$_Move@PAIPAI@std@@YAPAIPAI00@Z")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?size@?$vector@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?gInstantiationGuardReLULayer@caffe@@3DA")
#pragma comment(linker, "/include:?has_fixed_range@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@2_NB")
#pragma comment(linker, "/include:??_R0?AV?$SplitLayer@N@caffe@@@8")
#pragma comment(linker, "/include:?MAX@V0LayerParameter@caffe@@2W4V0LayerParameter_PoolMethod@2@B")
#pragma comment(linker, "/include:??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MH@std@@@std@@@std@@@std@@QBE?AV01@H@Z")
#pragma comment(linker, "/include:?set_channels@BlobProto@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?GetCachedSize@WindowDataParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:??$_Fill_n@PANIN@std@@YAPANPANIABN@Z")
#pragma comment(linker, "/include:_fabsf")
#pragma comment(linker, "/include:??_C@_0M@BMPJCPP@index?5?$DO?$DN?5?94?$AA@")
#pragma comment(linker, "/include:?ByteSize@MVNParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@YAXPAPAV?$Blob@M@caffe@@0AAU?$_Wrap_alloc@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??0?$allocator@E@std@@QAE@XZ")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@2@@Z")
#pragma comment(linker, "/include:??_R4?$FlattenLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?SetLossWeights@?$Layer@N@caffe@@IAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@Z")
#pragma comment(linker, "/include:??$?0$$CBU?$group1@U?$group2@U?$_Smanip@_J@std@@ABM@detail@io@boost@@@detail@io@boost@@@?$put_holder@DU?$char_traits@D@std@@@detail@io@boost@@QAE@ABU?$group1@U?$group2@U?$_Smanip@_J@std@@ABM@detail@io@boost@@@123@@Z")
#pragma comment(linker, "/include:?has_transform_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R2?$PReLULayer@N@caffe@@8")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VImageDataParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVImageDataParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:??$?0V?$ConcatLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$ConcatLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$MergeFromInnerLoop@VTypeHandler@?$RepeatedPtrField@VBlobProto@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@AAEXPAPAX0HH@Z")
#pragma comment(linker, "/include:??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBU?$pair@HH@std@@M@1@XZ")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAV?$FlattenLayer@M@caffe@@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@2@XZ")
#pragma comment(linker, "/include:?CopyFrom@NetStateRule@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??0?$RepeatedPtrField@VNetParameter@caffe@@@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VPythonParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVPythonParameter@caffe@@@Z")
#pragma comment(linker, "/include:??0?$variate_generator@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@V?$bernoulli_distribution@M@23@@random@boost@@QAE@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@V?$bernoulli_distribution@M@12@@Z")
#pragma comment(linker, "/include:??_C@_0FE@IAJGICDF@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?push_back@?$vector@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@QAEX$$QAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@2@@Z")
#pragma comment(linker, "/include:??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:??_C@_0CJ@MJLKELIA@0?5?$DN?$DN?5bottom?$FL0?$FN?9?$DOcount?$CI?$CJ?5?$CF?5explic@")
#pragma comment(linker, "/include:?requires_stringbuf@?$lexical_cast_stream_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@F@detail@boost@@2_NB")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@ConvolutionParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:?Swap@InnerProductParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??$?0ABU?$pair@HH@std@@$$$V@?$pair@$$CBU?$pair@HH@std@@U12@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABU?$pair@HH@std@@@1@V?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?has_det_bg_threshold@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$?6V?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@Uthrow_function_@2@PBD@boost@@YAABV?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@0@ABV120@ABV?$error_info@Uthrow_function_@boost@@PBD@0@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$HingeLossLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?has_mvn_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$Filler@M@caffe@@8")
#pragma comment(linker, "/include:??_R2?$MultinomialLogisticLossLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_G?$LogLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$?0V?$ExpLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$ExpLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??0?$ReLULayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@M@caffe@@@detail@boost@@QAE@PAV?$SoftmaxWithLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:__CTA2?AVbad_cast@std@@")
#pragma comment(linker, "/include:??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?const_min@?$integer_traits_base@K$0A@$0PPPPPPPP@@detail@boost@@2KB")
#pragma comment(linker, "/include:??1?$vector@IV?$allocator@_N@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ")
#pragma comment(linker, "/include:??_G?$DataLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??1?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$?0V?$ContrastiveLossLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$ContrastiveLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?reshape_param@LayerParameter@caffe@@QBEABVReshapeParameter@2@XZ")
#pragma comment(linker, "/include:?value@?$alignment_of_impl@Vlocale@std@@@detail@boost@@2IB")
#pragma comment(linker, "/include:?mutable_cpu_data@?$Blob@N@caffe@@QAEPANXZ")
#pragma comment(linker, "/include:?f@?$unit_normal_distribution@M@detail@random@boost@@SAMM@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$ReshapeLayer@M@caffe@@@detail@boost@@QAE@PAV?$ReshapeLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?sumsq_data@?$Blob@H@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?set_has_slice_dim@SliceParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Construct@PBD@?$vector@DV?$allocator@D@std@@@std@@QAEXPBD0Uforward_iterator_tag@1@@Z")
#pragma comment(linker, "/include:?ForwardPrefilled@?$Net@M@caffe@@QAEABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@PAM@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@SolverParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?Backward_cpu@?$SPPLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?digits10@?$numeric_limits@D@std@@2HB")
#pragma comment(linker, "/include:??_C@_0BA@LBJKNFBE@num_axes?$CI?$CJ?5?$DM?$DN?54?$AA@")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$ConcatLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$ConcatLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?gcd_n1_n2@?$ratio_divide@V?$ratio@$00$0JIJGIA@@boost@@V?$ratio@$00$0DLJKMKAA@@2@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z")
#pragma comment(linker, "/include:??1BlobProto@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?capacity@?$vector@U?$pair@MH@std@@V?$allocator@U?$pair@MH@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?kJstypeFieldNumber@FieldOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:?New@BlobProto@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??_R0?AVout_of_range@std@@@8")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAM0AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z")
#pragma comment(linker, "/include:??_R3?$NesterovSolver@M@caffe@@8")
#pragma comment(linker, "/include:?GetMetadata@ReductionParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$Creator_FilterLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?value@?$is_scalar_impl@$$CBX@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R2?$FlattenLayer@M@caffe@@8")
#pragma comment(linker, "/include:?max_size@?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?close@?$basic_fstream@DU?$char_traits@D@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:?CopyFrom@NetState@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$ArgMaxLayer@M@caffe@@8")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:??_R0?AVLayerParameter@caffe@@@8")
#pragma comment(linker, "/include:?gcd_n1_n2@?$ratio_divide@V?$ratio@$00$0DLJKMKAA@@boost@@V?$ratio@$00$0DOI@@2@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVNetState@caffe@@@internal@protobuf@google@@YAPBVNetState@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?max_size@?$vector@PAV?$FlattenLayer@M@caffe@@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_Goverflow_error@std@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R2?$ContrastiveLossLayer@N@caffe@@8")
#pragma comment(linker, "/include:?Add@?$RepeatedPtrField@VFillerParameter@caffe@@@protobuf@google@@QAEPAVFillerParameter@caffe@@XZ")
#pragma comment(linker, "/include:??_R2_Iostream_error_category@std@@8")
#pragma comment(linker, "/include:?momentum@SolverParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:??1SigmoidParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$MVNLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$Destroy@VTypeHandler@?$RepeatedPtrField@VBlobShape@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXXZ")
#pragma comment(linker, "/include:??$unused_var@W4dst_flags@date_time@boost@@@?$counted_time_system@U?$counted_time_rep@Vmillisec_posix_time_system_config@posix_time@boost@@@date_time@boost@@@date_time@boost@@SAXABW4dst_flags@12@@Z")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bthread_resource_error@2@@")
#pragma comment(linker, "/include:??_C@_0CA@BEIJMJLC@?8?5specified?5by?5a?5rule?5in?5layer?5?$AA@")
#pragma comment(linker, "/include:?shape@?$Blob@H@caffe@@QBEHH@Z")
#pragma comment(linker, "/include:?has_engine@ConvolutionParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?value@?$sign_wknd@_J$0PECEA@@aux@mpl@boost@@2_JB")
#pragma comment(linker, "/include:?value@?$integral_constant@I$0A@@std@@2IB")
#pragma comment(linker, "/include:??$?0V?$ConvolutionLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$ConvolutionLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?Clear@?$GenericTypeHandler@VLayerParameter@caffe@@@internal@protobuf@google@@SAXPAVLayerParameter@caffe@@@Z")
#pragma comment(linker, "/include:?New@V0LayerParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@PBU_Container_base0@1@@Z")
#pragma comment(linker, "/include:?GetCachedSize@NetStateRule@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z")
#pragma comment(linker, "/include:?set_has_engine@TanHParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_C@_0CP@PNLDLLEE@Incorrect?5input?5blob?5dimension?5s@")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$Filler@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@sp_counted_base@detail@boost@@8")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$MultinomialLogisticLossLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$MultinomialLogisticLossLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$AdaGradSolver@M@caffe@@8")
#pragma comment(linker, "/include:?AppendParam@?$Net@M@caffe@@IAEXABVNetParameter@2@HH@Z")
#pragma comment(linker, "/include:?SharedCtor@HDF5DataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$ImageDataLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$CreateInternal@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Arena@protobuf@google@@AAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z")
#pragma comment(linker, "/include:??$forward@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z")
#pragma comment(linker, "/include:?value@?$is_abstract_imp@D@detail@boost@@2_NB")
#pragma comment(linker, "/include:?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?MergeFrom@DummyDataParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?has_meanfile@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$TanHLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??_R4?$DataLayer@N@caffe@@6BInternalThread@1@@")
#pragma comment(linker, "/include:?value@?$is_function_impl@U?$thread_move_t@V?$basic_future@X@detail@boost@@@detail@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?CopyFrom@?$Blob@I@caffe@@QAEXABV12@_N1@Z")
#pragma comment(linker, "/include:?CONTRASTIVE_LOSS@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:?protobuf_ShutdownFile_caffe_2eproto@caffe@@YAXXZ")
#pragma comment(linker, "/include:??$Creator_MemoryDataLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IAEPAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PAM@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$LossLayer@N@caffe@@8")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@HH@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_C@_0BP@MBJLJBHC@top?4size?$CI?$CJ?5?$DN?$DN?5num_loss_weights?$AA@")
#pragma comment(linker, "/include:??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z")
#pragma comment(linker, "/include:?push_back@?$vector@U?$pair@MH@std@@V?$allocator@U?$pair@MH@std@@@2@@std@@QAEX$$QAU?$pair@MH@2@@Z")
#pragma comment(linker, "/include:??$swap@PAVSPPParameter@caffe@@@std@@YAXAAPAVSPPParameter@caffe@@0@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$SoftmaxWithLossLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$DropoutLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VSigmoidParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVSigmoidParameter@caffe@@@Z")
#pragma comment(linker, "/include:?Reshape@?$ArgMaxLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?type@?$ReLULayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??$MergeFromInnerLoop@VTypeHandler@?$RepeatedPtrField@VNetStateRule@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@AAEXPAPAX0HH@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@VSyncedMemory@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?value@?$is_arithmetic_impl@H@detail@boost@@2_NB")
#pragma comment(linker, "/include:?SolverType_MIN@SolverParameter@caffe@@2W4SolverParameter_SolverType@2@B")
#pragma comment(linker, "/include:?set_has_hdf5_data_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_C@_0BN@DHMJELE@indices?4size?$CI?$CJ?5?$DM?$DN?5num_axes?$CI?$CJ?$AA@")
#pragma comment(linker, "/include:?set_solver_type@SolverParameter@caffe@@QAEXW4SolverParameter_SolverType@2@@Z")
#pragma comment(linker, "/include:??$?0V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QAE@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$AbsValLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?new_height@V0LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??_C@_09JOPODNLA@label?5?$DO?50?$AA@")
#pragma comment(linker, "/include:??_R4?$SilenceLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??_R3?$LogLayer@N@caffe@@8")
#pragma comment(linker, "/include:?_Buy@?$vector@MV?$allocator@M@std@@@std@@IAE_NI@Z")
#pragma comment(linker, "/include:?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@QBEXXZ")
#pragma comment(linker, "/include:??A?$vector@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@QAEAAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?zero@?$is_unsigned_values@_J@detail@boost@@2_JB")
#pragma comment(linker, "/include:?ReLUParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@LogParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_C@_0BK@CCEAEGBP@?5bottom?5blob?$CIs?$CJ?5as?5input?4?$AA@")
#pragma comment(linker, "/include:?InitAsDefaultInstance@PReLUParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$caffe_cpu_axpby@M@caffe@@YAXHMPBMMPAM@Z")
#pragma comment(linker, "/include:??$?0V?$tuple@$$QAH@std@@V?$tuple@$$$V@1@$0A@$S@?$pair@$$CBHH@std@@QAE@AAV?$tuple@$$QAH@1@AAV?$tuple@$$$V@1@U?$_Arg_idx@$0A@@1@U?$_Arg_idx@$S@1@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$ConvolutionLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?mutable_threshold_param@V1LayerParameter@caffe@@QAEPAVThresholdParameter@2@XZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$MVNLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$MVNLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@QBEPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@XZ")
#pragma comment(linker, "/include:?kHingeLossParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$ConvolutionLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?Swap@MVNParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??_C@_0FI@JNNGGKBO@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??_C@_05KNFBNCOH@float?$AA@")
#pragma comment(linker, "/include:??$_Move@AAPAVLRNParameter@caffe@@@std@@YA$$QAPAVLRNParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??$?0V?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@@?$shared_ptr@$$CBVclone_base@exception_detail@boost@@@boost@@QAE@PAV?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@1@@Z")
#pragma comment(linker, "/include:?Clear@?$GenericTypeHandler@VNetParameter@caffe@@@internal@protobuf@google@@SAXPAVNetParameter@caffe@@@Z")
#pragma comment(linker, "/include:??$GetSigmoidLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?total_microseconds@?$time_duration@V0posix_time@boost@@V?$time_resolution_traits@Utime_resolution_traits_adapted64_impl@date_time@boost@@$04$0PECEA@$05H@date_time@2@@date_time@boost@@QBE_JXZ")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@QAEXPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@I@Z")
#pragma comment(linker, "/include:?xor_mask@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@2IB")
#pragma comment(linker, "/include:??_C@_0P@LEBLFIHK@test_net_param?$AA@")
#pragma comment(linker, "/include:??_R2?$GaussianFiller@M@caffe@@8")
#pragma comment(linker, "/include:?New@TanHParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:?ReLUParameter_Engine_IsValid@caffe@@YA_NH@Z")
#pragma comment(linker, "/include:??_G?$XavierFiller@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z")
#pragma comment(linker, "/include:??_R4?$HingeLossLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$ImageDataLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$ImageDataLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@LogParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$Add@VTypeHandler@?$RepeatedPtrField@VParamSpec@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEPAVParamSpec@caffe@@PAV45@@Z")
#pragma comment(linker, "/include:??$_Unchecked@PAV?$vector@HV?$allocator@H@std@@@std@@@std@@YAPAV?$vector@HV?$allocator@H@std@@@0@PAV10@@Z")
#pragma comment(linker, "/include:??$_Val_type@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@NH@std@@@std@@@std@@@std@@@std@@YAPAU?$pair@NH@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@NH@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??$Own@VNetStateRule@caffe@@@Arena@protobuf@google@@QAEXPAVNetStateRule@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0CI@NLMCHCIP@propagate_down?5param?5must?5be?5spe@")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$PReLULayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?CopyFrom@InfogainLossParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?_Freeheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?CopyFrom@ContrastiveLossParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$InnerProductLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??_C@_0BN@OGKEADLC@MultiStep?5Status?3?5Iteration?5?$AA@")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R0?AV?$AdaGradSolver@M@caffe@@@8")
#pragma comment(linker, "/include:?data_at@?$Blob@M@caffe@@QBEMABV?$vector@HV?$allocator@H@std@@@std@@@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$PowerLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?type@?$AccuracyLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??1?$FilterLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R0?AVBlobProto@caffe@@@8")
#pragma comment(linker, "/include:??$checked_delete@V?$MVNLayer@N@caffe@@@boost@@YAXPAV?$MVNLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@SolverState@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?_Destroy@?$vector@IV?$allocator@_N@std@@@std@@IAEXPAI0@Z")
#pragma comment(linker, "/include:??_G?$EltwiseLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?pooling_param@LayerParameter@caffe@@QBEABVPoolingParameter@2@XZ")
#pragma comment(linker, "/include:??$max@I@std@@YAABIABI0@Z")
#pragma comment(linker, "/include:?_Get_rest@?$tuple@$$QAH@std@@QAEAAV?$tuple@$$$V@2@XZ")
#pragma comment(linker, "/include:?Reshape@?$MVNLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$Own@VDropoutParameter@caffe@@@Arena@protobuf@google@@QAEXPAVDropoutParameter@caffe@@@Z")
#pragma comment(linker, "/include:??0?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@QAE@ABVoverflow_error@std@@@Z")
#pragma comment(linker, "/include:??0?$_Tree_buy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@1@@Z")
#pragma comment(linker, "/include:??$ReadRepeatedPrimitive@_N$07@WireFormatLite@internal@protobuf@google@@SA_NHIPAVCodedInputStream@io@23@PAV?$RepeatedField@_N@23@@Z")
#pragma comment(linker, "/include:?_VBITS@?$vector@_NV?$allocator@_N@std@@@std@@2HB")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@ABV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@ABV34@@Z")
#pragma comment(linker, "/include:??_C@_0EO@LNJFJMFC@Check?5failed?3?5param?4channels_siz@")
#pragma comment(linker, "/include:??_G?$EuclideanLossLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?_default_crop_mode_@WindowDataParameter@caffe@@0PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A")
#pragma comment(linker, "/include:??1?$HingeLossLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?g_registry_@?1??Registry@?$LayerRegistry@M@caffe@@SAAAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@XZ@4PAV45@A")
#pragma comment(linker, "/include:?GetCachedSize@MemoryDataParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@H@std@@@2@XZ")
#pragma comment(linker, "/include:??_R0?AVReductionParameter@caffe@@@8")
#pragma comment(linker, "/include:??$get_smallest_value@M@detail@math@boost@@YAMXZ")
#pragma comment(linker, "/include:?HDF5DataParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?swap@?$shared_ptr@V?$SplitLayer@N@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:??$_Umove@PAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@@?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@IAEPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@PAV23@00@Z")
#pragma comment(linker, "/include:?max_size@?$vector@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?Backward_cpu@?$TanHLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?collate@?$_Locbase@H@std@@2HB")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_7LayerParameter@caffe@@6B@")
#pragma comment(linker, "/include:??0?$BasePrefetchingDataLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??$?0V?$DummyDataLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$DummyDataLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$caffe_cpu_gemm@N@caffe@@YAXW4CBLAS_TRANSPOSE@@0HHHNPBN1NPAN@Z")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VInnerProductParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVInnerProductParameter@caffe@@@Z")
#pragma comment(linker, "/include:??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@XZ")
#pragma comment(linker, "/include:?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?push_back@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@2@@std@@QAEX$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@2@@Z")
#pragma comment(linker, "/include:?pointer_to@?$pointer_traits@PAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAPAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@AAU32@@Z")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@2@@std@@YAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?scale_diff@?$Blob@N@caffe@@QAEXN@Z")
#pragma comment(linker, "/include:??$digits@M@tools@math@boost@@YAHXZ")
#pragma comment(linker, "/include:??$_Uninit_fill_n@MIMM@std@@YAXPAMIPBMAAU?$_Wrap_alloc@V?$allocator@M@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$forward@AAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@0@AAPAU10@@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$FilterLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??1Datum@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$AbsValLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$CreateInternal@VParamSpec@caffe@@@Arena@protobuf@google@@AAEPAVParamSpec@caffe@@_N@Z")
#pragma comment(linker, "/include:?set_has_shuffle@ImageDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$uniform_real@M@boost@@QAE@MM@Z")
#pragma comment(linker, "/include:??_Gbad_exception_@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?set_has_flatten_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$SplitLayer@M@caffe@@@detail@boost@@QAE@PAV?$SplitLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$destroy@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@?$allocator_traits@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@SAXAAV?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@1@PAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@Z")
#pragma comment(linker, "/include:??$reset@V?$Net@M@caffe@@@?$shared_ptr@V?$Net@M@caffe@@@boost@@QAEXPAV?$Net@M@caffe@@@Z")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@2@XZ")
#pragma comment(linker, "/include:??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?CopyFrom@MemoryDataParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?ByteSize@LayerParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?_Assign_rv@?$vector@MV?$allocator@M@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z")
#pragma comment(linker, "/include:??$construct@PAV?$Blob@N@caffe@@ABQAV12@@?$_Wrap_alloc@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@QAEXPAPAV?$Blob@N@caffe@@ABQAV23@@Z")
#pragma comment(linker, "/include:??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?Forward_cpu@?$DeconvolutionLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??0?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R0?AU?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:?kDisplayFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:?gcd_n1_n2@?$is_evenly_divisible_by@V?$ratio@$00$0DOI@@boost@@V?$ratio@$00$0JIJGIA@@2@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:?AddAlreadyReserved@?$RepeatedField@I@protobuf@google@@QAEXABI@Z")
#pragma comment(linker, "/include:?CopyArray@?$RepeatedField@M@protobuf@google@@AAEXPAMPBMH@Z")
#pragma comment(linker, "/include:??$?0V?$MVNLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$MVNLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?InternalThreadEntry@?$BasePrefetchingDataLayer@N@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??_C@_0BF@FMCNNOMJ@end?5?$DM?5layers_?4size?$CI?$CJ?$AA@")
#pragma comment(linker, "/include:??$OwnInternal@VPReLUParameter@caffe@@@Arena@protobuf@google@@AAEXPAVPReLUParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:??$cast@VTypeHandler@?$RepeatedPtrField@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@CAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@Z")
#pragma comment(linker, "/include:?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@2@@Z")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@ParamSpec@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?_Compat@?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QBEXABV12@@Z")
#pragma comment(linker, "/include:??$construct@V?$vector@_NV?$allocator@_N@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@std@@QAEXPAV?$vector@_NV?$allocator@_N@std@@@1@$$QAV21@@Z")
#pragma comment(linker, "/include:?SetCachedSize@ThresholdParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?_Reallocate@?$vector@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:__CT??_R0?AV?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@@8??0?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z44")
#pragma comment(linker, "/include:?value@?$ice_and@$00$00$0A@$00$00$00$00@type_traits@boost@@2_NB")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@PythonParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?stride@PoolingParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?GetCachedSize@TransformationParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$ArgMaxLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_R3?$WindowDataLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$Creator_FlattenLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$InfogainLossLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$Own@VParamSpec@caffe@@@Arena@protobuf@google@@QAEXPAVParamSpec@caffe@@@Z")
#pragma comment(linker, "/include:??_R0?AV?$SGDSolver@M@caffe@@@8")
#pragma comment(linker, "/include:??_C@_07MKEAMJFF@padding?$AA@")
#pragma comment(linker, "/include:?set_has_lrn_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$addressof@U?$pair@$$CBHH@std@@@std@@YAPAU?$pair@$$CBHH@0@AAU10@@Z")
#pragma comment(linker, "/include:??_7thread_resource_error@boost@@6B@")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$Im2colLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$Creator_ThresholdLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??_R4?$SPPLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$LRNLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_C@_0BK@MHACMBEC@registry?4count?$CItype?$CJ?5?$DN?$DN?50?$AA@")
#pragma comment(linker, "/include:?GetPoolingParam@?$SPPLayer@N@caffe@@MAE?AVLayerParameter@2@HHHVSPPParameter@2@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$AccuracyLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_C@_0DA@PONGBJJC@Unknown?5parameter?5dropout_ratio?5@")
#pragma comment(linker, "/include:?ByteSize@SPPParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R3?$EltwiseLayer@M@caffe@@8")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$Layer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?value@?$is_unsigned_imp@I@detail@boost@@2_NB")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PAVexception@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_C@_0BN@PKJIEBBG@shape?4size?$CI?$CJ?5?$DM?$DN?5kMaxBlobAxes?$AA@")
#pragma comment(linker, "/include:?InitAsDefaultInstance@FlattenParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$SplitLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??0?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:??$_Pop_heap_0@PAU?$pair@MH@std@@U12@U?$greater@U?$pair@MH@std@@@2@@std@@YAXPAU?$pair@MH@0@0U?$greater@U?$pair@MH@std@@@0@0@Z")
#pragma comment(linker, "/include:?GetMetadata@NetStateRule@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?p@?$assert_arg_pred_not@U?$is_iterator_category@Uforward_traversal_tag@iterators@boost@@@detail@iterators@boost@@@mpl@boost@@2_NB")
#pragma comment(linker, "/include:?shape_size@DummyDataParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?run@?$thread_data@V?$bind_t@XV?$mf0@XVInternalThread@caffe@@@_mfi@boost@@V?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@3@@_bi@boost@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$PReLULayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$_Uninit_move@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@PAU12@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@2@U12@@std@@YAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@@std@@YAPAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:??0?$map@PBXUtss_data_node@detail@boost@@U?$less@PBX@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@5@@std@@QAE@XZ")
#pragma comment(linker, "/include:?kMeanFileFieldNumber@ImageDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVThresholdParameter@caffe@@@internal@protobuf@google@@YAPBVThresholdParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:??_R3TanHParameter@caffe@@8")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PAUoptional_tag@optional_detail@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:__CT??_R0?AU?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@8??0?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@QAE@ABU012@@Z40")
#pragma comment(linker, "/include:??1?$EuclideanLossLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@1@PAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??$enable_error_info@Ubad_day_of_month@gregorian@boost@@@boost@@YA?AU?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@0@ABUbad_day_of_month@gregorian@0@@Z")
#pragma comment(linker, "/include:?value@?$is_pointer_helper@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$?0V?$LogLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$LogLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?JoinPrefetchThread@?$BasePrefetchingDataLayer@M@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??_R3_Iostream_error_category@std@@8")
#pragma comment(linker, "/include:?default_instance@ImageDataParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??0?$AdaGradSolver@M@caffe@@QAE@ABVSolverParameter@1@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$ReshapeLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$?0V?$ConvolutionLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$ConvolutionLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?set_snapshot_after_train@SolverParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:?value@?$integral_constant@_N$0A@@std@@2_NB")
#pragma comment(linker, "/include:?value@?$br_mul@$00$00@ratio_detail@boost@@2_JB")
#pragma comment(linker, "/include:?set_pad_w@PoolingParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??_B?1???$get_static_exception_object@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@YA?AVexception_ptr@1@XZ@51")
#pragma comment(linker, "/include:??_R4PoolingParameter@caffe@@6B@")
#pragma comment(linker, "/include:__real@4000000000000000")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$SliceLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@VCursor@db@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?weight_filler@ConvolutionParameter@caffe@@QBEABVFillerParameter@2@XZ")
#pragma comment(linker, "/include:??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?requires_stringbuf@?$lexical_cast_stream_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R3?$DataTransformer@M@caffe@@8")
#pragma comment(linker, "/include:??$destroy@U?$pair@HH@std@@@?$allocator@U?$pair@HH@std@@@std@@QAEXPAU?$pair@HH@1@@Z")
#pragma comment(linker, "/include:??_R3?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?DestroyNoArena@ArenaStringPtr@internal@protobuf@google@@QAEXPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?min@?$constrained_value@V?$simple_exception_policy@G$0FHI@$0CHBA@Ubad_year@gregorian@boost@@@CV@boost@@@CV@boost@@SAGXZ")
#pragma comment(linker, "/include:?set_has_local_size@LRNParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:__real@3e20000000000000")
#pragma comment(linker, "/include:?traversal_i@?$pure_iterator_traversal@PBC@iterator_range_detail@boost@@2IB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?WriteBytesToArray@WireFormatLite@internal@protobuf@google@@SAPAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z")
#pragma comment(linker, "/include:?mutable_source@InfogainLossParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?UnsafeArenaSwap@?$RepeatedPtrField@VParamSpec@caffe@@@protobuf@google@@QAEXPAV123@@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VLRNParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVLRNParameter@caffe@@@Z")
#pragma comment(linker, "/include:?have_unknown_fields@InternalMetadataWithArena@internal@protobuf@google@@QBE_NXZ")
#pragma comment(linker, "/include:?softmax_param@LayerParameter@caffe@@QBEABVSoftmaxParameter@2@XZ")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@PoolingParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R0?AV?$BasePrefetchingDataLayer@N@caffe@@@8")
#pragma comment(linker, "/include:?FromProto@?$Blob@M@caffe@@QAEXABVBlobProto@2@_N@Z")
#pragma comment(linker, "/include:?set_mirror@TransformationParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@InfogainLossParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?add_input@NetParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?set_has_force_backward@NetParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?Transform@?$DataTransformer@N@caffe@@QAEXPAV?$Blob@N@2@0@Z")
#pragma comment(linker, "/include:?set_has_pad_h@ConvolutionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?construct@?$_Wrap_alloc@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@std@@QAEXPAV?$vector@_NV?$allocator@_N@std@@@2@@Z")
#pragma comment(linker, "/include:??$Creator_DataLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??0?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?default_instance_@ExpParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBU?$pair@HH@std@@U12@@1@XZ")
#pragma comment(linker, "/include:??$_Swap_adl@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z")
#pragma comment(linker, "/include:__CT??_R0?AV?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@@8??0?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z52")
#pragma comment(linker, "/include:?digits@?$numeric_limits@M@std@@2HB")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$PReLULayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??_7?$EuclideanLossLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??_C@_06KCABHADA@?5loss?$CJ?$AA@")
#pragma comment(linker, "/include:?mutable_unknown_fields@DummyDataParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?descriptor@MVNParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$apply@I@?$integer_log2_impl@$07@detail@random@boost@@SAHIH@Z")
#pragma comment(linker, "/include:?add_exclude@V1LayerParameter@caffe@@QAEPAVNetStateRule@2@XZ")
#pragma comment(linker, "/include:??_R2?$MVNLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$InnerProductLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V12@@?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@$$QAV23@@Z")
#pragma comment(linker, "/include:?zero@?$lcast_char_constants@D@detail@boost@@2DB")
#pragma comment(linker, "/include:?get@?$shared_ptr@Vthread@boost@@@boost@@QBEPAVthread@2@XZ")
#pragma comment(linker, "/include:??$MakeCheckOpString@NN@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABN0PBD@Z")
#pragma comment(linker, "/include:?InputDebugInfo@?$Net@N@caffe@@IAEXH@Z")
#pragma comment(linker, "/include:??$construct@PAV?$FlattenLayer@N@caffe@@PAV12@@?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@QAEXPAPAV?$FlattenLayer@N@caffe@@$$QAPAV23@@Z")
#pragma comment(linker, "/include:??$generate_tail@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@?$unit_normal_distribution@N@detail@random@boost@@QAENAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@23@@Z")
#pragma comment(linker, "/include:?get_rep@?$counted_time_rep@Vmillisec_posix_time_system_config@posix_time@boost@@@date_time@boost@@QBE?AV?$int_adapter@_J@23@XZ")
#pragma comment(linker, "/include:?_Destroy@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@2@@std@@IAEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@2@0@Z")
#pragma comment(linker, "/include:_expf")
#pragma comment(linker, "/include:??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@XZ")
#pragma comment(linker, "/include:?capacity@?$vector@NV?$allocator@N@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@2@XZ")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PAUbad_day_of_month@gregorian@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?add_top@LayerParameter@caffe@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?MergeFrom@ImageDataParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$DeconvolutionLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_R3?$SoftmaxWithLossLayer@M@caffe@@8")
#pragma comment(linker, "/include:?num_output@V0LayerParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?mvn_param@LayerParameter@caffe@@QBEABVMVNParameter@2@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$Layer@M@caffe@@8")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PAV?$base_from_member@V?$shared_ptr@V?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@@boost@@$0A@@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$ContrastiveLossLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??$addressof@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@YAPAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@0@AAU10@@Z")
#pragma comment(linker, "/include:??1?$RepeatedPtrField@VV1LayerParameter@caffe@@@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:?_Xlen@?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@IBEXXZ")
#pragma comment(linker, "/include:?clone@?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:?IsInitialized@LogParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?batch_size@ImageDataParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??_C@_08LJMMPFJO@bilinear?$AA@")
#pragma comment(linker, "/include:??$throw_exception@Ubad_day_of_month@gregorian@boost@@@boost@@YAXABUbad_day_of_month@gregorian@0@@Z")
#pragma comment(linker, "/include:?gInstantiationGuardNesterovSolver@caffe@@3DA")
#pragma comment(linker, "/include:?height@Datum@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$HingeLossLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??$_Insert_nohint@AAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@@Z")
#pragma comment(linker, "/include:?has_softmax_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R2?$ReLULayer@M@caffe@@8")
#pragma comment(linker, "/include:?kScaleFieldNumber@WindowDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$ReadPackedPrimitiveNoInline@I$0N@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAV?$RepeatedField@I@23@@Z")
#pragma comment(linker, "/include:?_Erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?New@WindowDataParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?value@?$is_ununsigned_helper@_J@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R0?AV?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$DataLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$DataLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?MergeFrom@NetStateRule@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??_G?$DummyDataLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??0?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@QAE@ABU01@@Z")
#pragma comment(linker, "/include:??$vLn@N@@YAXHPBNPAN@Z")
#pragma comment(linker, "/include:?max_size@?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R4?$Filler@N@caffe@@6B@")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$DataLayer@N@caffe@@@detail@boost@@QAE@PAV?$DataLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??$move@AAU?$pair@HH@std@@@std@@YA$$QAU?$pair@HH@0@AAU10@@Z")
#pragma comment(linker, "/include:??0InfogainLossParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?Reshape@?$SPPLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R3?$AccuracyLayer@M@caffe@@8")
#pragma comment(linker, "/include:?Capacity@?$RepeatedField@I@protobuf@google@@QBEHXZ")
#pragma comment(linker, "/include:??$put_last@DU?$char_traits@D@std@@U?$group2@U?$_Smanip@_J@std@@ABM@detail@io@boost@@@detail@io@boost@@YAXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@ABU?$group1@U?$group2@U?$_Smanip@_J@std@@ABM@detail@io@boost@@@012@@Z")
#pragma comment(linker, "/include:?value@?$is_arithmetic_impl@F@detail@boost@@2_NB")
#pragma comment(linker, "/include:?Forward_gpu@?$MVNLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IBEXPAM0@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@Vthread@boost@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?New@PythonParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$LRNLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??0?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$LRNLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Ubad_month@gregorian@boost@@@12@@Z")
#pragma comment(linker, "/include:??_R3PReLUParameter@caffe@@8")
#pragma comment(linker, "/include:??$caffe_div@M@caffe@@YAXHPBM0PAM@Z")
#pragma comment(linker, "/include:??_C@_0FL@JENEBLLH@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??$_Ptr_cat@NN@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAN0@Z")
#pragma comment(linker, "/include:?_Pop_back_n@?$vector@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@QAEXI@Z")
#pragma comment(linker, "/include:??_C@_0CL@HMOFEEDD@Unknown?5parameter?5biasterm?5for?5l@")
#pragma comment(linker, "/include:??$_Ptr_cat@MM@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAM0@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??1?$vector@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?mutable_unknown_fields@SigmoidParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?kFloatDataFieldNumber@Datum@caffe@@2HB")
#pragma comment(linker, "/include:??4Mat@cv@@QAEAAV01@ABV01@@Z")
#pragma comment(linker, "/include:?ShareData@?$Blob@H@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?input_dim_size@NetParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??_R2ArgMaxParameter@caffe@@8")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$FlattenLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$FlattenLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?value@?$is_function_impl@D@detail@boost@@2_NB")
#pragma comment(linker, "/include:_cblas_saxpby")
#pragma comment(linker, "/include:?end@?$vector@U?$pair@MH@std@@V?$allocator@U?$pair@MH@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MH@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??_C@_06OCLBCKEO@Input?5?$AA@")
#pragma comment(linker, "/include:?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?PReLUParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?has_solver_type@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$MergeFrom@VTypeHandler@?$RepeatedPtrField@VParamSpec@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXABV0123@@Z")
#pragma comment(linker, "/include:?param@V1LayerParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VContrastiveLossParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVContrastiveLossParameter@caffe@@@Z")
#pragma comment(linker, "/include:?type@?$HingeLossLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?type@?$EuclideanLossLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??_C@_07KEDLHKLL@x1?5?$DO?5?91?$AA@")
#pragma comment(linker, "/include:??_C@_0M@EJKELPNB@?5?$CIat?5index?5?$AA@")
#pragma comment(linker, "/include:??$_Insert_at@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@1@Z")
#pragma comment(linker, "/include:??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@")
#pragma comment(linker, "/include:??$_Allocate@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@YAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@0@IPAU10@@Z")
#pragma comment(linker, "/include:__real@00000000")
#pragma comment(linker, "/include:??_R0?AVNetState@caffe@@@8")
#pragma comment(linker, "/include:??0?$SGDSolver@N@caffe@@QAE@ABVSolverParameter@1@@Z")
#pragma comment(linker, "/include:?forward_cpu_bias@?$BaseConvolutionLayer@M@caffe@@IAEXPAMPBM@Z")
#pragma comment(linker, "/include:?output_t@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@2IB")
#pragma comment(linker, "/include:?_Grow_to@?$vector@V?$shared_ptr@V?$Net@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@IBEII@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$LogLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?GetTagWireType@WireFormatLite@internal@protobuf@google@@SA?AW4WireType@1234@I@Z")
#pragma comment(linker, "/include:?kConcatParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?_Tidy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:?_Construct_n@?$vector@NV?$allocator@N@std@@@std@@QAEXIPBN@Z")
#pragma comment(linker, "/include:??1bad_month@gregorian@boost@@UAE@XZ")
#pragma comment(linker, "/include:?set_has_scale@PowerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_C@_0CE@DELADEHM@Unknown?5parameter?5k?5for?5layer?5ty@")
#pragma comment(linker, "/include:?_Pop_back_n@?$vector@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@QAEXI@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$PoolingLayer@N@caffe@@@boost@@YAXPAV?$PoolingLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?mutable_height@DummyDataParameter@caffe@@QAEPAV?$RepeatedField@I@protobuf@google@@XZ")
#pragma comment(linker, "/include:?value@?$abs_wknd@_J$0CHBA@@aux@mpl@boost@@2_JB")
#pragma comment(linker, "/include:?Swap@NetStateRule@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:??_R4?$Net@N@caffe@@6B@")
#pragma comment(linker, "/include:?allocate@?$allocator@U?$pair@NH@std@@@std@@QAEPAU?$pair@NH@2@I@Z")
#pragma comment(linker, "/include:?ByteSize@WindowDataParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R3TransformationParameter@caffe@@8")
#pragma comment(linker, "/include:?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z")
#pragma comment(linker, "/include:??4?$pair@HH@std@@QAEAAU01@ABU01@@Z")
#pragma comment(linker, "/include:??_R0?AV?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:??$_Move@AAPAV?$vector@VUnknownField@protobuf@google@@V?$allocator@VUnknownField@protobuf@google@@@std@@@std@@@std@@YA$$QAPAV?$vector@VUnknownField@protobuf@google@@V?$allocator@VUnknownField@protobuf@google@@@std@@@0@AAPAV10@@Z")
#pragma comment(linker, "/include:?min_exponent@?$numeric_limits@N@std@@2HB")
#pragma comment(linker, "/include:??_B?1???$get_smallest_value@N@detail@math@boost@@YANABU?$bool_@$00@mpl@2@@Z@51")
#pragma comment(linker, "/include:?digits10@?$numeric_limits@N@std@@2HB")
#pragma comment(linker, "/include:?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?WriteProtoToTextFile@caffe@@YAXABVMessage@protobuf@google@@PBD@Z")
#pragma comment(linker, "/include:?gInstantiationGuardWindowDataLayer@caffe@@3DA")
#pragma comment(linker, "/include:?mutable_weight_filler@InnerProductParameter@caffe@@QAEPAVFillerParameter@2@XZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$ImageDataLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?Backward_gpu@?$AbsValLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$ExpLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?InitAsDefaultInstance@SoftmaxParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?kLazyFieldNumber@FieldOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_R2NetState@caffe@@8")
#pragma comment(linker, "/include:?value@?$arg@$03@mpl@boost@@2HB")
#pragma comment(linker, "/include:?swap@?$shared_ptr@V?$ConcatLayer@M@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:?CopyFrom@AccuracyParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?_Mysize@?$tuple@ABH@std@@2IB")
#pragma comment(linker, "/include:?a_x@?$br_mul@$00$0CHBA@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:??_GReLUParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VConvolutionParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVConvolutionParameter@caffe@@@Z")
#pragma comment(linker, "/include:??$_Move@AAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YA$$QAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@0@AAT120@@Z")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PAUbad_year@gregorian@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??_E?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@WBE@AEPAXI@Z")
#pragma comment(linker, "/include:__CT??_R0?AVbad_format_string@io@boost@@@8??0bad_format_string@io@boost@@QAE@ABV012@@Z20")
#pragma comment(linker, "/include:?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?value@?$operator_exists@V?$basic_istream@DU?$char_traits@D@std@@@std@@F@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:?kStrideFieldNumber@PoolingParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@ios_base@std@@8")
#pragma comment(linker, "/include:?New@InnerProductParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?kLabelFieldNumber@FieldDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_G?$ReductionLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_7AccuracyParameter@caffe@@6B@")
#pragma comment(linker, "/include:??$swap@PAVHDF5OutputParameter@caffe@@@std@@YAXAAPAVHDF5OutputParameter@caffe@@0@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$PReLULayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$throw_exception@Vtoo_few_args@io@boost@@@boost@@YAXABVtoo_few_args@io@0@@Z")
#pragma comment(linker, "/include:??$_Ptr_cat@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@0@Z")
#pragma comment(linker, "/include:??$addressof@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@AAV12@@Z")
#pragma comment(linker, "/include:??_R2InternalThread@caffe@@8")
#pragma comment(linker, "/include:?inner_product_param@LayerParameter@caffe@@QBEABVInnerProductParameter@2@XZ")
#pragma comment(linker, "/include:?kHeightFieldNumber@DummyDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?default_instance_@FlattenParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??_C@_0DDMB@ENNNFMKA@?6?$ALcaffe?4proto?$BC?$AFcaffe?$CC?$BM?6?7BlobShap@")
#pragma comment(linker, "/include:?_Isnil@?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAAADPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$ConvolutionLayer@M@caffe@@@boost@@YAXPAV?$ConvolutionLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0KC@FBLKHMJH@Check?5failed?3?5?$CI?$CBpool_param?4has_s@")
#pragma comment(linker, "/include:??_7?$ImageDataLayer@N@caffe@@6BInternalThread@1@@")
#pragma comment(linker, "/include:?value@?$ice_or@$0A@$0A@$00$0A@$0A@$0A@$0A@@type_traits@boost@@2_NB")
#pragma comment(linker, "/include:?clear_data@Datum@caffe@@QAEXXZ")
#pragma comment(linker, "/include:??_D?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@QAEXXZ")
#pragma comment(linker, "/include:??1?$vector@MV?$allocator@M@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?mutable_name@NetParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?mutable_layer@NetParameter@caffe@@QAEPAVLayerParameter@2@H@Z")
#pragma comment(linker, "/include:?set_average_loss@SolverParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?set_name@LayerParameter@caffe@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:??_C@_07PHKNIKJE@sigmoid?$AA@")
#pragma comment(linker, "/include:??$_Unchecked@PAU?$pair@MH@std@@@std@@YAPAU?$pair@MH@0@PAU10@@Z")
#pragma comment(linker, "/include:??$_Val_type@PAPAV?$FlattenLayer@M@caffe@@@std@@YAPAPAV?$FlattenLayer@M@caffe@@PAPAV12@@Z")
#pragma comment(linker, "/include:??$distance@PBD@std@@YAHPBD0@Z")
#pragma comment(linker, "/include:??$_Move@AAPAV?$PoolingLayer@N@caffe@@@std@@YA$$QAPAV?$PoolingLayer@N@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$LogLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?value@?$is_this_float_conversion_optimized@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@D@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VLayerParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVLayerParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@@std@@QAEPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@2@I@Z")
#pragma comment(linker, "/include:?DropoutParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??$throw_exception@Voverflow_error@std@@@boost@@YAXABVoverflow_error@std@@@Z")
#pragma comment(linker, "/include:?max@?$numeric_limits@N@std@@SANXZ")
#pragma comment(linker, "/include:??_C@_0BH@NGGJLKNN@Learning?5Rate?5Policy?3?5?$AA@")
#pragma comment(linker, "/include:?kAlphaFieldNumber@LRNParameter@caffe@@2HB")
#pragma comment(linker, "/include:?CopyFrom@?$Blob@M@caffe@@QAEXABV12@_N1@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@M@std@@QBEIXZ")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@1@PAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@$$QAV34@@Z")
#pragma comment(linker, "/include:??0?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@QAE@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??0domain_error@std@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??_R2?$TanHLayer@M@caffe@@8")
#pragma comment(linker, "/include:?Forward_gpu@?$ContrastiveLossLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$_Rechecked@PAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@PAU1234@@std@@YAAAPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@AAPAU1234@PAU1234@@Z")
#pragma comment(linker, "/include:??$OwnInternal@VFlattenParameter@caffe@@@Arena@protobuf@google@@AAEXPAVFlattenParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@1@AAPAU31@@Z")
#pragma comment(linker, "/include:?LossParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@VNetParameter@caffe@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$?0V?$EltwiseLayer@M@caffe@@@?$shared_ptr@V?$EltwiseLayer@M@caffe@@@boost@@QAE@PAV?$EltwiseLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?capacity@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?LayerSetUp@?$PoolingLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@QBEHABV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$swap@PAVDropoutParameter@caffe@@@std@@YAXAAPAVDropoutParameter@caffe@@0@Z")
#pragma comment(linker, "/include:??_R2?$LRNLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$ImageDataLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@IV?$allocator@_N@std@@@std@@@std@@QAE@ABV?$allocator@_N@1@@Z")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@1@AAPAU31@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$ConcatLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R3?$DataLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$construct@HABH@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAEXPAHABH@Z")
#pragma comment(linker, "/include:??R?$variate_generator@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@V?$bernoulli_distribution@N@23@@random@boost@@QAE_NXZ")
#pragma comment(linker, "/include:?MergeFrom@?$RepeatedPtrField@VBlobShape@caffe@@@protobuf@google@@QAEXABV123@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_C@_04PJOLNDGD@data?$AA@")
#pragma comment(linker, "/include:??_R0?AV?$BaseDataLayer@N@caffe@@@8")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@E@std@@@std@@QAEXPAEI@Z")
#pragma comment(linker, "/include:??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:?name@V0LayerParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?shift@LogParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?compute_output_shape@?$ConvolutionLayer@M@caffe@@MAEXXZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@ReLUParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@2@0@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Filler@N@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@V?$Filler@N@caffe@@@1@PAV?$Filler@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?_Max@?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??1RepeatedPtrFieldBase@internal@protobuf@google@@IAE@XZ")
#pragma comment(linker, "/include:?AutoTopBlobs@?$LossLayer@M@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@@Z")
#pragma comment(linker, "/include:?Fill@?$GaussianFiller@N@caffe@@UAEXPAV?$Blob@N@2@@Z")
#pragma comment(linker, "/include:?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VHDF5OutputParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVHDF5OutputParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:??_G?$ReshapeLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$Im2colLayer@M@caffe@@@detail@boost@@QAE@PAV?$Im2colLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$_Move@AAPAV?$ConcatLayer@M@caffe@@@std@@YA$$QAPAV?$ConcatLayer@M@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??_C@_0CA@MNLAIFPP@Check?5failed?3?5?$CBisinf?$CIlog_base?$CJ?5?$AA@")
#pragma comment(linker, "/include:??$_Allocate@U?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@std@@YAPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@0@IPAU10@@Z")
#pragma comment(linker, "/include:??$?0V?$FlattenLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$FlattenLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?kDropoutParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?diff_at@?$Blob@I@caffe@@QBEIHHHH@Z")
#pragma comment(linker, "/include:??_R3?$FlattenLayer@N@caffe@@8")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@PAV?$Blob@N@caffe@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?IsInitialized@LRNParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??_R3PoolingParameter@caffe@@8")
#pragma comment(linker, "/include:?GCD@?$ratio@$00$0PECEA@@boost@@0_JB")
#pragma comment(linker, "/include:?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:?Transform@?$DataTransformer@N@caffe@@QAEXABV?$vector@VDatum@caffe@@V?$allocator@VDatum@caffe@@@std@@@std@@PAV?$Blob@N@2@@Z")
#pragma comment(linker, "/include:??_R4?$DummyDataLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?has_accuracy_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R0?AVLRNParameter@caffe@@@8")
#pragma comment(linker, "/include:?set_has_net_param@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?has_fg_threshold@WindowDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?frac_sec_per_day@?$counted_time_rep@Vmillisec_posix_time_system_config@posix_time@boost@@@date_time@boost@@SA_JXZ")
#pragma comment(linker, "/include:?Engine_ARRAYSIZE@ConvolutionParameter@caffe@@2HB")
#pragma comment(linker, "/include:?_Inside@?$vector@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@IBE_NPBQAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@2@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$MVNLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?value@?$is_pointer_helper@_J@detail@boost@@2_NB")
#pragma comment(linker, "/include:?default_instance_@LayerParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??_GThresholdParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?has_top_k@AccuracyParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?GetMetadata@MVNParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:??0BlobProtoVector@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$InnerProductLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$?0V?$TanHLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$TanHLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?kMaxFieldNumber@FillerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?MergeFrom@ExpParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$feed_impl@DU?$char_traits@D@std@@V?$allocator@D@2@ABU?$put_holder@DU?$char_traits@D@std@@@detail@io@boost@@@detail@io@boost@@YAAAV?$basic_format@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AAV32@ABU?$put_holder@DU?$char_traits@D@std@@@012@@Z")
#pragma comment(linker, "/include:??_R17?0A@EA@?$_Iosb@H@std@@8")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@IBEXPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:??$?0V?$SoftmaxWithLossLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$SoftmaxWithLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??A?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@QAEAAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@I@Z")
#pragma comment(linker, "/include:?set_has_concat_dim@ConcatParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@")
#pragma comment(linker, "/include:?CopyFrom@ReshapeParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?Clear@LogParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?PoolMethod_MIN@SPPParameter@caffe@@2W4SPPParameter_PoolMethod@2@B")
#pragma comment(linker, "/include:?layer_need_backward@?$Net@M@caffe@@QBEABV?$vector@_NV?$allocator@_N@std@@@std@@XZ")
#pragma comment(linker, "/include:?param_propagate_down@?$Layer@M@caffe@@QAE_NH@Z")
#pragma comment(linker, "/include:?sqrt@@YAMM@Z")
#pragma comment(linker, "/include:?add_history@SolverState@caffe@@QAEPAVBlobProto@2@XZ")
#pragma comment(linker, "/include:??_C@_0O@FJEBPJED@Deconvolution?$AA@")
#pragma comment(linker, "/include:?SetCachedSize@LossParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?kDummyDataParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?vsAdd@@YAXHPBM0PAM@Z")
#pragma comment(linker, "/include:??_G?$ReshapeLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?python_param@LayerParameter@caffe@@QBEABVPythonParameter@2@XZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$ImageDataLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$ImageDataLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?set_has_train_net_param@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_C@_0CH@CEJGNOCD@height_?5?$DN?$DN?5bottom?$FLbottom_id?$FN?9?$DOhe@")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$Layer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_G?$vector@HV?$allocator@H@std@@@std@@QAEPAXI@Z")
#pragma comment(linker, "/include:?add_blobs@LayerParameter@caffe@@QAEPAVBlobProto@2@XZ")
#pragma comment(linker, "/include:?SoftmaxParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??1?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?Swap@HingeLossParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??$_Ptr_cat@PAV?$Blob@N@caffe@@PAV12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAV?$Blob@N@caffe@@0@Z")
#pragma comment(linker, "/include:??_C@_0BK@NOBJPAAD@registry?4count?$CItype?$CJ?5?$DN?$DN?51?$AA@")
#pragma comment(linker, "/include:??$iter_swap@PADPAD@std@@YAXPAD0@Z")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@ReductionParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?Transform@?$DataTransformer@M@caffe@@QAEXABV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@PAV?$Blob@M@2@@Z")
#pragma comment(linker, "/include:?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z")
#pragma comment(linker, "/include:?GetMetadata@MemoryDataParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$PoolingLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?set_name@V1LayerParameter@caffe@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$Net@M@caffe@@@boost@@QAE@$$QAV01@@Z")
#pragma comment(linker, "/include:?ByteSize@LogParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?set_has_value@FillerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@IBEXPAPAV?$Blob@N@caffe@@0@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$SPPLayer@N@caffe@@@detail@boost@@QAE@PAV?$SPPLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@Timer@caffe@@8")
#pragma comment(linker, "/include:??0?$_Tree_comp@$0A@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@U?$pair@HH@std@@@1@ABV?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@1@@Z")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@EBEXXZ")
#pragma comment(linker, "/include:??$swap@PAVTanHParameter@caffe@@@std@@YAXAAPAVTanHParameter@caffe@@0@Z")
#pragma comment(linker, "/include:?InitAsDefaultInstance@LogParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?set_det_context_pad@V0LayerParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@QBE?AU?$less@U?$pair@HH@std@@@2@XZ")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@YAXPAPAV?$Blob@N@caffe@@0AAU?$_Wrap_alloc@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@@Z")
#pragma comment(linker, "/include:?set_has_image_data_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?kNameFieldNumber@MethodDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?Clear@SolverState@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?value@?$is_class_impl@Uoptional_tag@optional_detail@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@XZ")
#pragma comment(linker, "/include:??_C@_0CI@NGDFCEBB@Unknown?5parameter?5group?5for?5laye@")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$LRNLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?InitAsDefaultInstance@PythonParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?_Reallocate@?$vector@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??1PowerParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?SharedCtor@TanHParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??R?$ElementCopier@_N$00@internal@protobuf@google@@QAEXPA_NPB_NH@Z")
#pragma comment(linker, "/include:??_C@_0CM@FKCDEGBD@SolverParameter?5must?5not?5contain@")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVHingeLossParameter@caffe@@@internal@protobuf@google@@YAPBVHingeLossParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?_Freeheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?has_norm_region@LRNParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$_Uninit_def_fill_n@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@IV?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@V12@@std@@YAXPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?ForwardFromTo@?$Net@M@caffe@@QAEMHH@Z")
#pragma comment(linker, "/include:?legacy_version@ContrastiveLossParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?MergeFrom@PoolingParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVArgMaxParameter@caffe@@@internal@protobuf@google@@YAPBVArgMaxParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:??_C@_0BM@OMNDACIJ@?$CJ?5differed?5from?5the?5phase?5?$CI?$AA@")
#pragma comment(linker, "/include:?max_exponent@?$numeric_limits@N@std@@2HB")
#pragma comment(linker, "/include:?time_count@?$counted_time_rep@Vmillisec_posix_time_system_config@posix_time@boost@@@date_time@boost@@QBE_JXZ")
#pragma comment(linker, "/include:?abs@@YA_J_J@Z")
#pragma comment(linker, "/include:?kStrideWFieldNumber@PoolingParameter@caffe@@2HB")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$ConvolutionLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?SetLossWeights@?$Layer@M@caffe@@IAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@Z")
#pragma comment(linker, "/include:?value@?$br_mul@$0A@$0A@@ratio_detail@boost@@2_JB")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@AAPAU21@@Z")
#pragma comment(linker, "/include:?set_has_loss_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$LRNLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?Clear@V1LayerParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?value@?$is_base_and_derived_impl@Vexception@std@@Ubad_weekday@gregorian@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?top_k@ArgMaxParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?Backward_gpu@?$SigmoidLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??0PoolingParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?value@?$enable_binary_hash@O$0BI@$0IA@@hash_detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$SoftmaxLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$Add@VTypeHandler@?$RepeatedPtrField@VBlobShape@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEPAVBlobShape@caffe@@PAV45@@Z")
#pragma comment(linker, "/include:??$?0V?$tuple@$$QAU?$pair@HH@std@@@std@@V?$tuple@$$$V@1@$0A@$S@?$pair@$$CBU?$pair@HH@std@@U12@@std@@QAE@AAV?$tuple@$$QAU?$pair@HH@std@@@1@AAV?$tuple@$$$V@1@U?$_Arg_idx@$0A@@1@U?$_Arg_idx@$S@1@@Z")
#pragma comment(linker, "/include:??$Check_NEImpl@PAV?$Blob@N@caffe@@PAV12@@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABQAV?$Blob@N@caffe@@0PBD@Z")
#pragma comment(linker, "/include:??0?$arg@$08@boost@@QAE@XZ")
#pragma comment(linker, "/include:??_E?$BasePrefetchingDataLayer@N@caffe@@WBJE@AEPAXI@Z")
#pragma comment(linker, "/include:?CopyFrom@BlobShape@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?SharedDtor@DropoutParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R1BE@?0A@EA@bad_exception@std@@8")
#pragma comment(linker, "/include:??_R0?AVSigmoidParameter@caffe@@@8")
#pragma comment(linker, "/include:??$make_pair@AANAAH@std@@YA?AU?$pair@NH@0@AANAAH@Z")
#pragma comment(linker, "/include:??$_Allocate@M@std@@YAPAMIPAM@Z")
#pragma comment(linker, "/include:??$?0V?$PoolingLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$PoolingLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?New@NetParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?kIterFieldNumber@SolverState@caffe@@2HB")
#pragma comment(linker, "/include:?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ")
#pragma comment(linker, "/include:?MoveArray@?$RepeatedField@_N@protobuf@google@@AAEXPA_N0H@Z")
#pragma comment(linker, "/include:??_C@_0BH@KMJLBCPA@start_axis?5?$DM?$DN?5end_axis?$AA@")
#pragma comment(linker, "/include:??_Gthread_exception@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@0@AAPAU10@@Z")
#pragma comment(linker, "/include:?as_number@?$time_resolution_traits@Utime_resolution_traits_adapted64_impl@date_time@boost@@$04$0PECEA@$05H@date_time@boost@@SA_JV?$int_adapter@_J@23@@Z")
#pragma comment(linker, "/include:?layer_names@?$Net@N@caffe@@QBEABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ")
#pragma comment(linker, "/include:??_G?$SigmoidLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?V1LayerParameter_DimCheckMode_descriptor_@?A0x5e4fc710@caffe@@3PBVEnumDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$MemoryDataLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$MemoryDataLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?value@?$_Maximum@$S@std@@2IB")
#pragma comment(linker, "/include:?DB_MIN@DataParameter@caffe@@2W4DataParameter_DB@2@B")
#pragma comment(linker, "/include:??$?LU?$group1@U?$group2@U?$_Smanip@_J@std@@ABN@detail@io@boost@@@detail@io@boost@@@?$basic_format@DU?$char_traits@D@std@@V?$allocator@D@2@@boost@@QAEAAV01@ABU?$group1@U?$group2@U?$_Smanip@_J@std@@ABN@detail@io@boost@@@detail@io@1@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$FlattenLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$FlattenLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??$construct@HH@?$allocator@H@std@@QAEXPAH$$QAH@Z")
#pragma comment(linker, "/include:??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??$?0V?$DataLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$DataLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?erase@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@2@@Z")
#pragma comment(linker, "/include:?construct@?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@ABV34@@Z")
#pragma comment(linker, "/include:??_R0?AUbad_exception_@exception_detail@boost@@@8")
#pragma comment(linker, "/include:?Clear@Datum@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??_R0?AV_Generic_error_category@std@@@8")
#pragma comment(linker, "/include:?value@?$is_volatile_rval_filter@_J@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$PowerLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$addressof@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@0@AAPAU10@@Z")
#pragma comment(linker, "/include:?output_c@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@2IB")
#pragma comment(linker, "/include:?get_system_time_as_file_time@winapi@date_time@boost@@YAXAAUFILETIME@123@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$SliceLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$base_from_member@V?$shared_ptr@V?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@@boost@@$0A@@boost@@8")
#pragma comment(linker, "/include:??$_Val_type@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@YAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@PAV10@@Z")
#pragma comment(linker, "/include:?InferBlobShape@?$DataTransformer@N@caffe@@QAE?AV?$vector@HV?$allocator@H@std@@@std@@ABV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@4@@Z")
#pragma comment(linker, "/include:??A?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@QBEABQAV?$Blob@N@caffe@@I@Z")
#pragma comment(linker, "/include:?capital_e@?$lcast_char_constants@D@detail@boost@@2DB")
#pragma comment(linker, "/include:??$checked_delete@V?$SigmoidCrossEntropyLossLayer@M@caffe@@@boost@@YAXPAV?$SigmoidCrossEntropyLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?set_pool@SPPParameter@caffe@@QAEXW4SPPParameter_PoolMethod@2@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$ReLULayer@N@caffe@@@boost@@YAXPAV?$ReLULayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?max_size@?$vector@IV?$allocator@_N@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?has_layer@?$Net@N@caffe@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:??$addressof@PAV?$Blob@M@caffe@@@std@@YAPAPAV?$Blob@M@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??0?$_Tree_comp@$0A@V?$_Tmap_traits@PBXUtss_data_node@detail@boost@@U?$less@PBX@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@5@$0A@@std@@@std@@QAE@ABU?$less@PBX@1@ABV?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@1@@Z")
#pragma comment(linker, "/include:??0PReLUParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?gInstantiationGuardDataLayer@caffe@@3DA")
#pragma comment(linker, "/include:?kTypeFieldNumber@FieldDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?New@ArgMaxParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$DeconvolutionLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?has_type@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?sumsq_diff@?$Blob@N@caffe@@QBENXZ")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VArgMaxParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVArgMaxParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?value@?$integral_c@_J$00@mpl@boost@@2_JB")
#pragma comment(linker, "/include:?New@NetStateRule@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??$swap@PAVWindowDataParameter@caffe@@@std@@YAXAAPAVWindowDataParameter@caffe@@0@Z")
#pragma comment(linker, "/include:??_E?$unique_lock@Vmutex@boost@@@boost@@QAEPAXI@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$EuclideanLossLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?protobuf_AssignDescriptors_once_@?A0x5e4fc710@caffe@@3HA")
#pragma comment(linker, "/include:??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@?$unit_normal_distribution@N@detail@random@boost@@QAENAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@23@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@InfogainLossParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:?Regularize@?$SGDSolver@N@caffe@@MAEXH@Z")
#pragma comment(linker, "/include:??1?$set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?value@?$is_function_impl@_J@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_C@_0BD@JJCGIGDI@Error?5in?5function?5?$AA@")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??0?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$ReductionLayer@M@caffe@@@detail@boost@@QAE@PAV?$ReductionLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?MergeFrom@?$RepeatedPtrField@VNetState@caffe@@@protobuf@google@@QAEXABV123@@Z")
#pragma comment(linker, "/include:??0thread_data_base@detail@boost@@QAE@XZ")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PAM@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVMemoryDataParameter@caffe@@@internal@protobuf@google@@YAPBVMemoryDataParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z")
#pragma comment(linker, "/include:?Clear@HDF5DataParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?address@?$aligned_storage@Vlocale@std@@@optional_detail@boost@@QAEPAXXZ")
#pragma comment(linker, "/include:??_C@_0GK@BHJHLCJM@Check?5failed?3?5?$CBpool_param?4has_ke@")
#pragma comment(linker, "/include:??$?0V?$EuclideanLossLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$EuclideanLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAEPAXI@Z")
#pragma comment(linker, "/include:??$throw_exception@Vthread_resource_error@boost@@@boost@@YAXABVthread_resource_error@0@@Z")
#pragma comment(linker, "/include:?Reshape@?$BaseDataLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@HH@std@@U12@@?$allocator@U?$pair@HH@std@@@std@@QAEXPAU?$pair@HH@1@$$QAU21@@Z")
#pragma comment(linker, "/include:??_C@_0DH@HINHOPPF@With?5Global_pooling?3?5true?$DL?5only?5@")
#pragma comment(linker, "/include:??0?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHH@std@@@1@@Z")
#pragma comment(linker, "/include:?set_param_propagate_down@?$Layer@N@caffe@@QAEXH_N@Z")
#pragma comment(linker, "/include:??_Gthread_data_base@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@SAAAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@PAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??0?$MVNLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$DummyDataLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?_Destroy@?$vector@PAV?$FlattenLayer@M@caffe@@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@IAEXPAPAV?$FlattenLayer@M@caffe@@0@Z")
#pragma comment(linker, "/include:?set_has_filler@PReLUParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R2?$ConstantFiller@N@caffe@@8")
#pragma comment(linker, "/include:?digits@_Num_base@std@@2HB")
#pragma comment(linker, "/include:??8?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:?num_output@ConvolutionParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??$_Ptr_cat@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@U1234@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@0@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$ConcatLayer@M@caffe@@@boost@@YAXPAV?$ConcatLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$_Allocate@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@IPAV12@@Z")
#pragma comment(linker, "/include:?unknown_fields@ConcatParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?ReadLittleEndian32FromArray@CodedInputStream@io@protobuf@google@@SAPBEPBEPAI@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBHH@std@@U?$pair@HH@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBHH@1@$$QAU?$pair@HH@1@@Z")
#pragma comment(linker, "/include:??$Get@VTypeHandler@?$RepeatedPtrField@VV1LayerParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IBEABVV1LayerParameter@caffe@@H@Z")
#pragma comment(linker, "/include:?New@PythonParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??$_Distance2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVSliceParameter@caffe@@@internal@protobuf@google@@YAPBVSliceParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:??$_Umove@PAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@?$vector@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@2@@std@@IAEPAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@1@PAU21@00@Z")
#pragma comment(linker, "/include:??$?0V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$$V@1@$0A@$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@QAE@AAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AAV?$tuple@$$$V@1@U?$_Arg_idx@$0A@@1@U?$_Arg_idx@$S@1@@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$ThresholdLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R2?$ReshapeLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVTanHParameter@caffe@@@internal@protobuf@google@@YAPBVTanHParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@N@std@@@std@@SAIABV?$allocator@N@2@@Z")
#pragma comment(linker, "/include:??$?0V?$ImageDataLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$ImageDataLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VReductionParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVReductionParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?input_shape@NetParameter@caffe@@QBEABVBlobShape@2@H@Z")
#pragma comment(linker, "/include:??_C@_0BN@IKPFCKGJ@Check?5failed?3?5prefetch_rng_?5?$AA@")
#pragma comment(linker, "/include:?InitAsDefaultInstance@HDF5OutputParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?Backward_gpu@?$ReshapeLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$DataTransformer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?gInstantiationGuardNet@caffe@@3DA")
#pragma comment(linker, "/include:??_R3?$Filler@M@caffe@@8")
#pragma comment(linker, "/include:??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QBEHABV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:?SolverType_MAX@SolverParameter@caffe@@2W4SolverParameter_SolverType@2@B")
#pragma comment(linker, "/include:??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??_C@_0M@MLPBIOKH@?8?5owned?5by?5?$AA@")
#pragma comment(linker, "/include:??_C@_09EJPDBHEG@?0?5step?5?$DN?5?$AA@")
#pragma comment(linker, "/include:??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??$_Uninit_copy@PBDPADU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAPADPBD0PADAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z")
#pragma comment(linker, "/include:?SetNoArena@ArenaStringPtr@internal@protobuf@google@@QAEXPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV56@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$ContrastiveLossLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??1TanHParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?ConvolutionParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?has_concat_dim@ConcatParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?unknown_fields@SoftmaxParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??1ParamSpec@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$pow@HH@@YANHH@Z")
#pragma comment(linker, "/include:??_C@_05EAFAMACM@Split?$AA@")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$AccuracyLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?set_end_axis@FlattenParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:??_R3thread_resource_error@boost@@8")
#pragma comment(linker, "/include:__CT??_R0?AV?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@@8??0?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z44")
#pragma comment(linker, "/include:??$_Uninit_move@MMM@std@@YAPAMPAM00AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?kEngineFieldNumber@SPPParameter@caffe@@2HB")
#pragma comment(linker, "/include:?crop_size@TransformationParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??0?$SliceLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??$forward@AAN@std@@YAAANAAN@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$DataTransformer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?Get@?$RepeatedPtrField@VBlobShape@caffe@@@protobuf@google@@QBEABVBlobShape@caffe@@H@Z")
#pragma comment(linker, "/include:??_E?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@WM@AEPAXI@Z")
#pragma comment(linker, "/include:?blob_names@?$Net@N@caffe@@QBEABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ")
#pragma comment(linker, "/include:?GetCachedSize@FlattenParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@8")
#pragma comment(linker, "/include:??_R3PythonParameter@caffe@@8")
#pragma comment(linker, "/include:?seekpos@?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@MAE?AV?$fpos@H@std@@V45@H@Z")
#pragma comment(linker, "/include:?kLocationFieldNumber@SourceCodeInfo@protobuf@google@@2HB")
#pragma comment(linker, "/include:?gcd_n1_n2@?$is_evenly_divisible_by@V?$ratio@$00$0DOI@@boost@@V12@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:??$Mutable@VTypeHandler@?$RepeatedPtrField@VParamSpec@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEPAVParamSpec@caffe@@H@Z")
#pragma comment(linker, "/include:?unknown_fields@InfogainLossParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@ContrastiveLossParameter@caffe@@8")
#pragma comment(linker, "/include:??_R4?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:?GetCachedSize@ExpParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$reset@VSyncedMemory@caffe@@@?$shared_ptr@VSyncedMemory@caffe@@@boost@@QAEXPAVSyncedMemory@caffe@@@Z")
#pragma comment(linker, "/include:?is_exact@_Num_float_base@std@@2_NB")
#pragma comment(linker, "/include:?_Freenode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_R3EltwiseParameter@caffe@@8")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?Delete@?$GenericTypeHandler@VFillerParameter@caffe@@@internal@protobuf@google@@SAXPAVFillerParameter@caffe@@PAVArena@34@@Z")
#pragma comment(linker, "/include:?UnsafeArenaSwap@?$RepeatedPtrField@VNetStateRule@caffe@@@protobuf@google@@QAEXPAV123@@Z")
#pragma comment(linker, "/include:??_7?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@6Bbad_month@gregorian@2@@")
#pragma comment(linker, "/include:??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8")
#pragma comment(linker, "/include:?diff@?$Blob@I@caffe@@QBEABV?$shared_ptr@VSyncedMemory@caffe@@@boost@@XZ")
#pragma comment(linker, "/include:??_R2Datum@caffe@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$ConvolutionLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$DataLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??$_Val_type@PAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@PAV12@@Z")
#pragma comment(linker, "/include:?New@PoolingParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:?coeff@EltwiseParameter@caffe@@QBEMH@Z")
#pragma comment(linker, "/include:??$name_of@M@detail@policies@math@boost@@YAPBDXZ")
#pragma comment(linker, "/include:??_7?$Net@M@caffe@@6B@")
#pragma comment(linker, "/include:?kernelsize@V0LayerParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??$?0V?$ConcatLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$ConcatLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?New@FillerParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:?_Erase@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?state_size@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@2IB")
#pragma comment(linker, "/include:??4?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAEAAV01@ABV01@@Z")
#pragma comment(linker, "/include:?default_instance@LossParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:?SolverParameter_SolverType_descriptor@caffe@@YAPBVEnumDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?value@?$is_error_code_enum@Verror_condition@system@boost@@@system@boost@@2_NB")
#pragma comment(linker, "/include:?GCD@?$ratio@$0CHBA@$00@boost@@0_JB")
#pragma comment(linker, "/include:?dereference@?$optional_base@Vlocale@std@@@optional_detail@boost@@AAEAAVlocale@std@@PAV45@U?$bool_@$0A@@mpl@3@@Z")
#pragma comment(linker, "/include:?value@?$is_function_impl@U?$thread_move_t@V?$unique_future@X@boost@@@detail@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?kBlobsFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?engine@?$variate_generator@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@V?$normal_distribution@M@23@@random@boost@@QAEAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@23@XZ")
#pragma comment(linker, "/include:?_Tidy@?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$Blob@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??1?$PositiveUnitballFiller@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?max_digits10@?$numeric_limits@O@std@@2HB")
#pragma comment(linker, "/include:?InternalSwap@InnerProductParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$DummyDataLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$construct@PAV?$Blob@M@caffe@@PAV12@@?$_Wrap_alloc@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@QAEXPAPAV?$Blob@M@caffe@@$$QAPAV23@@Z")
#pragma comment(linker, "/include:?local_size@LRNParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@I@Z")
#pragma comment(linker, "/include:??_R0?AVConvolutionParameter@caffe@@@8")
#pragma comment(linker, "/include:??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@std@@QAE?AV01@H@Z")
#pragma comment(linker, "/include:?type@?$ReductionLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?num_inputs@?$Net@N@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??_C@_04IJFDLKBA@bnll?$AA@")
#pragma comment(linker, "/include:?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@2@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$SPPLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@N@std@@@std@@QAEXPANI@Z")
#pragma comment(linker, "/include:?capacity@?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?MULTINOMIAL_LOGISTIC_LOSS@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??$Clear@VTypeHandler@?$RepeatedPtrField@VBlobProto@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXXZ")
#pragma comment(linker, "/include:??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$_Unchecked@PAPAV?$FlattenLayer@N@caffe@@@std@@YAPAPAV?$FlattenLayer@N@caffe@@PAPAV12@@Z")
#pragma comment(linker, "/include:??_R2?$ArgMaxLayer@M@caffe@@8")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$SoftmaxLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$SoftmaxLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?has_source@InfogainLossParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$name_of@N@detail@policies@math@boost@@YAPBDXZ")
#pragma comment(linker, "/include:?is_integral@?$integer_traits_base@D$0?IA@$0HP@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVPoolingParameter@caffe@@@internal@protobuf@google@@YAPBVPoolingParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?create_event@win32@detail@boost@@YAPAXPBDW4event_type@123@W4initial_event_state@123@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$Im2colLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??1FillerParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?set_new_height@ImageDataParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?_Destroy@?$vector@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@IAEXPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@2@0@Z")
#pragma comment(linker, "/include:?equal_range@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@V12@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:?weight_decay@V1LayerParameter@caffe@@QBEMH@Z")
#pragma comment(linker, "/include:??_G?$GaussianFiller@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?capacity@?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_C@_0P@BBPNEMN@?5data?5fillers?4?$AA@")
#pragma comment(linker, "/include:??_C@_0CC@OEENPBCI@input_width?5?$DN?$DN?5data_mean_?4width?$CI@")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@VDB@db@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_8?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@7B@")
#pragma comment(linker, "/include:??_C@_0BM@NLHOMKJC@count?5?$DN?$DN?5bottom?$FL0?$FN?9?$DOcount?$CI?$CJ?$AA@")
#pragma comment(linker, "/include:?kReluParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?Get@?$RepeatedPtrField@VParamSpec@caffe@@@protobuf@google@@QBEABVParamSpec@caffe@@H@Z")
#pragma comment(linker, "/include:??0ConvolutionParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??_R2PReLUParameter@caffe@@8")
#pragma comment(linker, "/include:??C?$shared_ptr@Vthread@boost@@@boost@@QBEPAVthread@1@XZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$HingeLossLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?GetMetadata@InnerProductParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?GetArenaNoVirtual@?$RepeatedPtrField@VNetState@caffe@@@protobuf@google@@IBEPAVArena@23@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@NetStateRule@caffe@@8")
#pragma comment(linker, "/include:??_R0?AVEltwiseParameter@caffe@@@8")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$ThresholdLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??$isinf@N@@YA_NN@Z")
#pragma comment(linker, "/include:??_C@_0BH@NGCMOLJH@input_height?5?$DO?$DN?5height?$AA@")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVLayerParameter@caffe@@@internal@protobuf@google@@YAPBVLayerParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@too_few_args@io@boost@@8")
#pragma comment(linker, "/include:??$Create@VParamSpec@caffe@@@Arena@protobuf@google@@SAPAVParamSpec@caffe@@PAV012@@Z")
#pragma comment(linker, "/include:?size@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?ByteSize@ContrastiveLossParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$ArgMaxLayer@N@caffe@@8")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$MVNLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@AAV23@@Z")
#pragma comment(linker, "/include:?CopyFrom@PythonParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?num_axes@?$Blob@I@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??_GBlobProto@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@@std@@QAEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@2@I@Z")
#pragma comment(linker, "/include:?Clear@ParamSpec@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?ShapeEquals@?$Blob@I@caffe@@QAE_NABVBlobProto@2@@Z")
#pragma comment(linker, "/include:?InitAsDefaultInstance@InfogainLossParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?CODE_SIZE@FileOptions@protobuf@google@@2W4FileOptions_OptimizeMode@23@B")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$InnerProductLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$_Distance2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$?0V?$InnerProductLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$InnerProductLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??A?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@2@@std@@QAEAAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@1@I@Z")
#pragma comment(linker, "/include:??$_Move@AAPAURep@?$RepeatedField@H@protobuf@google@@@std@@YA$$QAPAURep@?$RepeatedField@H@protobuf@google@@AAPAU1234@@Z")
#pragma comment(linker, "/include:??$Add@VTypeHandler@?$RepeatedPtrField@VFillerParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEPAVFillerParameter@caffe@@PAV45@@Z")
#pragma comment(linker, "/include:??_GLogParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_C@_0CJ@PIMMHAJE@Day?5of?5month?5value?5is?5out?5of?5ran@")
#pragma comment(linker, "/include:??$OwnInternal@VBlobProtoVector@caffe@@@Arena@protobuf@google@@AAEXPAVBlobProtoVector@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?MergeFrom@?$RepeatedPtrField@VBlobProto@caffe@@@protobuf@google@@QAEXABV123@@Z")
#pragma comment(linker, "/include:??_7?$WindowDataLayer@N@caffe@@6BInternalThread@1@@")
#pragma comment(linker, "/include:??_R2PoolingParameter@caffe@@8")
#pragma comment(linker, "/include:?Fill@?$UniformFiller@M@caffe@@UAEXPAV?$Blob@M@2@@Z")
#pragma comment(linker, "/include:??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABH@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABH@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?value@?$int_@$08@mpl@boost@@2HB")
#pragma comment(linker, "/include:?Backward_cpu@?$SoftmaxLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?_Xlen@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@2@@std@@IBEXXZ")
#pragma comment(linker, "/include:??$Own@VV0LayerParameter@caffe@@@Arena@protobuf@google@@QAEXPAVV0LayerParameter@caffe@@@Z")
#pragma comment(linker, "/include:?Fill@?$MSRAFiller@N@caffe@@UAEXPAV?$Blob@N@2@@Z")
#pragma comment(linker, "/include:?kSnapshotAfterTrainFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R2?$NeuronLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$Net@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$?0V?$ConvolutionLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$ConvolutionLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0BO@LMLNHEJL@This?5network?5produces?5output?5?$AA@")
#pragma comment(linker, "/include:??_C@_0EO@NDMMDJFN@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??1?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R2?$ConstantFiller@M@caffe@@8")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@@std@@@std@@YAXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?mutable_source@ImageDataParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??0?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?MergeFrom@ConcatParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??1ContrastiveLossParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?_Reallocate@?$vector@V?$shared_ptr@V?$Net@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??_G?$SigmoidCrossEntropyLossLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?set_has_relu_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?begin@?$_Tree@V?$_Tmap_traits@PBXUtss_data_node@detail@boost@@U?$less@PBX@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??$_Move@AAPAV?$Filler@N@caffe@@@std@@YA$$QAPAV?$Filler@N@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??_D?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@QAEXXZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$DataTransformer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$Blob@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?kMessageSetItemEndTag@WireFormatLite@internal@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_C@_0CH@PAEPLFNC@?$CJ?5must?5be?5divisible?5by?5the?5produ@")
#pragma comment(linker, "/include:?as_number@?$int_adapter@_J@date_time@boost@@QBE_JXZ")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@ABV23@@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$EltwiseLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_G?$ThresholdLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??$checked_delete@VLayerParameter@caffe@@@boost@@YAXPAVLayerParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_7?$DataLayer@N@caffe@@6BInternalThread@1@@")
#pragma comment(linker, "/include:??$group@U?$_Smanip@_J@std@@N@io@boost@@YA?AU?$group1@U?$group2@U?$_Smanip@_J@std@@ABN@detail@io@boost@@@detail@01@U?$_Smanip@_J@std@@ABN@Z")
#pragma comment(linker, "/include:??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:?twist@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@AAEXXZ")
#pragma comment(linker, "/include:?MergeFrom@BlobShape@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$?0ABH$$$V@?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABH@1@V?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ")
#pragma comment(linker, "/include:?SPPParameter_PoolMethod_descriptor_@?A0x5e4fc710@caffe@@3PBVEnumDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:?min@?$constrained_value@V?$simple_exception_policy@G$00$0M@Ubad_month@gregorian@boost@@@CV@boost@@@CV@boost@@SAGXZ")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VInfogainLossParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVInfogainLossParameter@caffe@@@Z")
#pragma comment(linker, "/include:?set_has_width@BlobProto@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$PReLULayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@QBE?AU?$less@U?$pair@HH@std@@@2@XZ")
#pragma comment(linker, "/include:??$CreateInternal@VNetState@caffe@@@Arena@protobuf@google@@AAEPAVNetState@caffe@@_N@Z")
#pragma comment(linker, "/include:??$Destroy@VTypeHandler@?$RepeatedPtrField@VParamSpec@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXXZ")
#pragma comment(linker, "/include:??0TanHParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??$make_pair@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVDatum@caffe@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAVDatum@caffe@@@Z")
#pragma comment(linker, "/include:?descriptor@NetStateRule@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:?kRandSkipFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@V?$allocator@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@std@@@2@XZ")
#pragma comment(linker, "/include:??$OwnInternal@VInfogainLossParameter@caffe@@@Arena@protobuf@google@@AAEXPAVInfogainLossParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?set_has_global_pooling@PoolingParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$cast@VTypeHandler@?$RepeatedPtrField@VNetState@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@CAPAVNetState@caffe@@PAX@Z")
#pragma comment(linker, "/include:??0?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@QAE@ABVtoo_few_args@io@2@@Z")
#pragma comment(linker, "/include:?Get@?$RepeatedPtrField@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@protobuf@google@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@Vthread@boost@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_C@_0FI@BJFKDBNE@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?kPadFieldNumber@PoolingParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$str2int@_JV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$ctype@D@2@@detail@io@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV34@0AA_JABV?$ctype@D@4@@Z")
#pragma comment(linker, "/include:?set_test_interval@SolverParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:??_R4?$AbsValLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??_C@_0EO@CDLPDNOD@Check?5failed?3?5pad_h_?5?$DN?$DN?50?5?$CG?$CG?5pad@")
#pragma comment(linker, "/include:?value@?$has_member_called_lock@PAV?$unique_lock@Vmutex@boost@@@boost@@$0A@@detail@sync@boost@@2_NB")
#pragma comment(linker, "/include:?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??0bad_exception_@exception_detail@boost@@QAE@ABU012@@Z")
#pragma comment(linker, "/include:?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@2@@Z")
#pragma comment(linker, "/include:??_GHDF5OutputParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?mutable_name@ParamSpec@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??1?$map@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0CO@JDPIABDI@Cannot?5use?5GPU?5in?5CPU?9only?5Caffe@")
#pragma comment(linker, "/include:??1?$SplitLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?channels@?$Blob@N@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??$_Insert_hint@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@1@@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$Layer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?CopyFrom@LossParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?begin@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?MergeFrom@SolverState@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VDummyDataParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVDummyDataParameter@caffe@@@Z")
#pragma comment(linker, "/include:?deallocate@?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@QAEXPAPAV?$FlattenLayer@N@caffe@@I@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$SigmoidLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?LayerSetUp@?$ThresholdLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@2@@Z")
#pragma comment(linker, "/include:?gcd_d1_d2@?$is_evenly_divisible_by@V?$ratio@$00$0DOI@@boost@@V?$ratio@$00$0DLJKMKAA@@2@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:?has_weight_filler@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$ArgMaxLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?InternalSwap@SolverParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@2@XZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$AbsValLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$ConvolutionLayer@M@caffe@@8")
#pragma comment(linker, "/include:?kBatchSizeFieldNumber@MemoryDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?mutable_tanh_param@V1LayerParameter@caffe@@QAEPAVTanHParameter@2@XZ")
#pragma comment(linker, "/include:?HDF5_DATA@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@AAE@ABV012@Uclone_tag@012@@Z")
#pragma comment(linker, "/include:?Seconds@Timer@caffe@@UAEMXZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$FlattenLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?asum_data@?$Blob@H@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??0?$TanHLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEXXZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@VCursor@db@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$PReLULayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$enable_current_exception@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@boost@@YA?AV?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@0@ABU?$error_info_injector@Vbad_format_string@io@boost@@@20@@Z")
#pragma comment(linker, "/include:?set_has_stride_h@ConvolutionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?SetCachedSize@ArgMaxParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:??0?$PowerLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?get_object@?$optional_base@Vlocale@std@@@optional_detail@boost@@ABEPBVlocale@std@@XZ")
#pragma comment(linker, "/include:??$Destroy@VTypeHandler@?$RepeatedPtrField@VBlobProto@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXXZ")
#pragma comment(linker, "/include:??_C@_0BO@EKMKICFA@Unknown?5normalization?5region?4?$AA@")
#pragma comment(linker, "/include:?add_ref_copy@sp_counted_base@detail@boost@@QAEXXZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$EltwiseLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??$pow@NM@@YANNM@Z")
#pragma comment(linker, "/include:??_C@_0CN@LEGHIFLL@?5Layer?5cannot?5backpropagate?5to?5l@")
#pragma comment(linker, "/include:?MergeFrom@InnerProductParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$_Uninit_copy@$$CBMM@std@@YAPAMPBM0PAMAAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?INNER_PRODUCT@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:?construct@?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Net@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@IBEXPAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@2@0@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$Net@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBU?$pair@HH@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBU?$pair@HH@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$Net@N@caffe@@@boost@@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$ImageDataLayer@N@caffe@@8")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$Net@N@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??$construct@V?$vector@HV?$allocator@H@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@std@@QAEXPAV?$vector@HV?$allocator@H@std@@@1@$$QAV21@@Z")
#pragma comment(linker, "/include:??1EltwiseParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??1?$vector@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_7?$WindowDataLayer@M@caffe@@6B?$BaseDataLayer@M@1@@")
#pragma comment(linker, "/include:?set_kernel_h@ConvolutionParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?kValueFieldNumber@EnumDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??$throw_exception@Vbad_alloc@std@@@boost@@YAXABVbad_alloc@std@@@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$DropoutLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?MemoryDataParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??$Own@VReshapeParameter@caffe@@@Arena@protobuf@google@@QAEXPAVReshapeParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0CH@FDOJPCCC@Sparsity?5not?5supported?5by?5this?5F@")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$PReLULayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?force_backward@NetParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$EltwiseLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_R2runtime_error@std@@8")
#pragma comment(linker, "/include:??$forward@ABU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@YAABU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@ABU1234@@Z")
#pragma comment(linker, "/include:??_G?$SilenceLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$addressof@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@0@AAPAU10@@Z")
#pragma comment(linker, "/include:?max_size@?$vector@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?intrusive_ptr_add_ref@detail@boost@@YAXPAUthread_data_base@12@@Z")
#pragma comment(linker, "/include:?kNumAxesFieldNumber@ReshapeParameter@caffe@@2HB")
#pragma comment(linker, "/include:??0?$LogLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@1@$$QAU21@@Z")
#pragma comment(linker, "/include:?gcd_d1_d2@?$ratio_divide@V?$ratio@$00$0DOI@@boost@@V?$ratio@$00$0JIJGIA@@2@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:?min@?$br_mul@$00$0PECEA@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?_Rrotate@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@Z")
#pragma comment(linker, "/include:??$destroy@U?$pair@NH@std@@@?$allocator@U?$pair@NH@std@@@std@@QAEXPAU?$pair@NH@1@@Z")
#pragma comment(linker, "/include:??$addressof@QAV?$Blob@M@caffe@@@std@@YAPBQAV?$Blob@M@caffe@@ABQAV12@@Z")
#pragma comment(linker, "/include:?gInstantiationGuardAdaGradSolver@caffe@@3DA")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$SilenceLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??0?$vector@EV?$allocator@E@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?kRootFolderFieldNumber@ImageDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?swap@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBU?$pair@HH@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@ABU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@1@PAU?$pair@$$CBU?$pair@HH@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??$_Copy_impl@PBIV?$back_insert_iterator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@std@@YA?AV?$back_insert_iterator@V?$vector@HV?$allocator@H@std@@@std@@@0@PBI0V10@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$SigmoidLayer@N@caffe@@@boost@@YAXPAV?$SigmoidLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$destroy@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@?$allocator@U?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@std@@QAEXPAU?$pair@QBXUtss_data_node@detail@boost@@@1@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$ReshapeLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$BNLLLayer@M@caffe@@@detail@boost@@QAE@PAV?$BNLLLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$swap@PAV?$Net@N@caffe@@@std@@YAXAAPAV?$Net@N@caffe@@0@Z")
#pragma comment(linker, "/include:??$?0V?$Im2colLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$Im2colLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?MoveArray@?$RepeatedField@_J@protobuf@google@@AAEXPA_J0H@Z")
#pragma comment(linker, "/include:??0?$DropoutLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?max@?$numeric_limits@_J@std@@SA_JXZ")
#pragma comment(linker, "/include:?_Rmost@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?layer@NetParameter@caffe@@QBEABVLayerParameter@2@H@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$InfogainLossLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??$addressof@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@AAV12@@Z")
#pragma comment(linker, "/include:?CopyFrom@SigmoidParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVReLUParameter@caffe@@@internal@protobuf@google@@YAPBVReLUParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?CopyFrom@TransformationParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?kMessageSetItemNumber@WireFormatLite@internal@protobuf@google@@2HB")
#pragma comment(linker, "/include:?Reshape@?$InfogainLossLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??1?$RepeatedField@_J@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_08JLFKCOKA@?5failed?4?$AA@")
#pragma comment(linker, "/include:??_R0?AVPowerParameter@caffe@@@8")
#pragma comment(linker, "/include:?value@?$int_@$0DF@@mpl@boost@@2HB")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@QAEXPAPAV?$Blob@N@caffe@@I@Z")
#pragma comment(linker, "/include:??0?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBHH@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHH@std@@@1@@Z")
#pragma comment(linker, "/include:?gInstantiationGuardLRNLayer@caffe@@3DA")
#pragma comment(linker, "/include:??_R0?AV?$SPPLayer@N@caffe@@@8")
#pragma comment(linker, "/include:?kSourceFieldNumber@WindowDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?resize@?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@QAEXIABU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@Z")
#pragma comment(linker, "/include:??_7ReLUParameter@caffe@@6B@")
#pragma comment(linker, "/include:?digits10@?$numeric_limits@J@std@@2HB")
#pragma comment(linker, "/include:??$_Allocate@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@YAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@0@IPAU10@@Z")
#pragma comment(linker, "/include:??$_Allocate@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@YAPAV?$vector@_NV?$allocator@_N@std@@@0@IPAV10@@Z")
#pragma comment(linker, "/include:?value@?$is_character@F@detail@boost@@2_NB")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@FillerParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?num_outputs@?$Net@M@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@XZ")
#pragma comment(linker, "/include:??1?$AdaGradSolver@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R2?$ExpLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$enable_current_exception@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@boost@@YA?AV?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@0@ABU?$error_info_injector@Vdomain_error@std@@@20@@Z")
#pragma comment(linker, "/include:??0HDF5DataParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??$_Unchecked@PAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@YAPAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@0@PAU10@@Z")
#pragma comment(linker, "/include:?state@NetParameter@caffe@@QBEABVNetState@2@XZ")
#pragma comment(linker, "/include:??$get@$0A@ABU?$pair@HH@std@@@std@@YAABU?$pair@HH@0@$$QAV?$tuple@ABU?$pair@HH@std@@@0@@Z")
#pragma comment(linker, "/include:?Reshape@?$PoolingLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$GaussianFiller@N@caffe@@8")
#pragma comment(linker, "/include:??_C@_0CF@PHEHOOKB@average_loss?5should?5be?5non?9negat@")
#pragma comment(linker, "/include:??$?0V?$SplitLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$SplitLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QBE?AV01@H@Z")
#pragma comment(linker, "/include:?equal_range@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@V12@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:?_Tidy@?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@IAEXXZ")
#pragma comment(linker, "/include:?get_event@basic_timed_mutex@detail@boost@@AAEPAXXZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$EltwiseLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_7?$ExpLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?kIdentifierValueFieldNumber@UninterpretedOption@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_R0?AUbad_alloc_@exception_detail@boost@@@8")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Net@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?deallocate@?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:??_R0?AV?$PReLULayer@N@caffe@@@8")
#pragma comment(linker, "/include:??_R4?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?has_operation@ReductionParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?gcd_d1_d2@?$ratio_divide@V?$ratio@$00$0DOI@@boost@@V?$ratio@$00$0DLJKMKAA@@2@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@1@@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$DataTransformer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$HingeLossLayer@N@caffe@@@boost@@YAXPAV?$HingeLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@Z")
#pragma comment(linker, "/include:??_R4?$BasePrefetchingDataLayer@N@caffe@@6BInternalThread@1@@")
#pragma comment(linker, "/include:??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBU?$pair@HH@std@@H@1@XZ")
#pragma comment(linker, "/include:??_G?$LRNLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$forward@AAPAD@std@@YAAAPADAAPAD@Z")
#pragma comment(linker, "/include:??_G?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@QAEPAXI@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@ExpParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?value@?$is_reference_impl@H@detail@boost@@2_NB")
#pragma comment(linker, "/include:??0?$variate_generator@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@V?$uniform_real@M@3@@random@boost@@QAE@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@V?$uniform_real@M@2@@Z")
#pragma comment(linker, "/include:??_C@_0L@ENKHPLIP@start?5?$DO?$DN?50?$AA@")
#pragma comment(linker, "/include:??$swap@PAVConcatParameter@caffe@@@std@@YAXAAPAVConcatParameter@caffe@@0@Z")
#pragma comment(linker, "/include:??$MergeFromInnerLoop@VTypeHandler@?$RepeatedPtrField@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@AAEXPAPAX0HH@Z")
#pragma comment(linker, "/include:?ParamSpec_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$DropoutLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@PAV12@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@V12@@std@@YAPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$?0V?$FlattenLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$FlattenLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?set_test_initialization@SolverParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:?set_has_mirror@ImageDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?Fill@?$BilinearFiller@M@caffe@@UAEXPAV?$Blob@M@2@@Z")
#pragma comment(linker, "/include:??_R2too_many_args@io@boost@@8")
#pragma comment(linker, "/include:??$_Rechecked@PAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@PAPAV12@@std@@YAAAPAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@AAPAPAV10@PAPAV10@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$EuclideanLossLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?norm_region@LRNParameter@caffe@@QBE?AW4LRNParameter_NormRegion@2@XZ")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V12@@?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@$$QAV23@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$Layer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?mutable_type@V0LayerParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?type@?$BNLLLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?mutable_det_crop_mode@V0LayerParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?LayerSetUp@?$Im2colLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_7?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@6Bbad_format_string@io@2@@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$SilenceLayer@M@caffe@@8")
#pragma comment(linker, "/include:?kScaleFieldNumber@DataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@VCursor@db@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??0?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?gInstantiationGuardNeuronLayer@caffe@@3DA")
#pragma comment(linker, "/include:?has_fixed_range@rand48@random@boost@@2_NB")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$Blob@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?has_argmax_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VTransformationParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVTransformationParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:??0Container@InternalMetadataWithArena@internal@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$SplitLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?size@RepeatedPtrFieldBase@internal@protobuf@google@@IBEHXZ")
#pragma comment(linker, "/include:?kLeadingDetachedCommentsFieldNumber@SourceCodeInfo_Location@protobuf@google@@2HB")
#pragma comment(linker, "/include:?Backward_cpu@?$EltwiseLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?compute_output_shape@?$ConvolutionLayer@N@caffe@@MAEXXZ")
#pragma comment(linker, "/include:?top_vecs@?$Net@M@caffe@@QBEABV?$vector@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@XZ")
#pragma comment(linker, "/include:?convolution_param@LayerParameter@caffe@@QBEABVConvolutionParameter@2@XZ")
#pragma comment(linker, "/include:__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12")
#pragma comment(linker, "/include:?loss_weight@V1LayerParameter@caffe@@QBEMH@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$Layer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?count@?$Blob@M@caffe@@QBEHH@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$SPPLayer@M@caffe@@8")
#pragma comment(linker, "/include:?sp_enable_shared_from_this@detail@boost@@YAXZZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$SoftmaxLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@I@std@@@std@@QAEPAII@Z")
#pragma comment(linker, "/include:??1Mat@cv@@QAE@XZ")
#pragma comment(linker, "/include:?Swap@TanHParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??$_Umove@PAPAV?$Blob@N@caffe@@@?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@IAEPAPAV?$Blob@N@caffe@@PAPAV23@00@Z")
#pragma comment(linker, "/include:??_C@_0CK@MJFFLHJC@?5?5foreground?5?$CIobject?$CJ?5overlap?5th@")
#pragma comment(linker, "/include:?get_ptr@?$optional_base@Vlocale@std@@@optional_detail@boost@@QAEPAVlocale@std@@XZ")
#pragma comment(linker, "/include:?mutable_loss_weight@LayerParameter@caffe@@QAEPAV?$RepeatedField@M@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_Gruntime_error@std@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_C@_0M@HKHPOAHJ@L2?5norm?5?$DN?5?$CI?$AA@")
#pragma comment(linker, "/include:??$forward_as_tuple@ABH@std@@YA?AV?$tuple@ABH@0@ABH@Z")
#pragma comment(linker, "/include:??0?$RepeatedField@H@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:?Backward_gpu@?$ConvolutionLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$AdaGradSolver@N@caffe@@8")
#pragma comment(linker, "/include:??0?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??0?$PositiveUnitballFiller@M@caffe@@QAE@ABVFillerParameter@1@@Z")
#pragma comment(linker, "/include:??_7?$NeuronLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?SharedCtor@ParamSpec@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?pool@V0LayerParameter@caffe@@QBE?AW4V0LayerParameter_PoolMethod@2@XZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@V1LayerParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_7DataParameter@caffe@@6B@")
#pragma comment(linker, "/include:??$caffe_copy@I@caffe@@YAXHPBIPAI@Z")
#pragma comment(linker, "/include:?GetCachedSize@BlobShape@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?_Tidy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@IAEXXZ")
#pragma comment(linker, "/include:?InitAsDefaultInstance@SolverState@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_G?$ThresholdLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$raise_domain_error@M@detail@policies@math@boost@@YAMPBD0ABMABU?$domain_error@$0A@@123@@Z")
#pragma comment(linker, "/include:??0?$map@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$GetPoolingLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?kPoolingParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?default_instance@SolverParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:?swap@?$shared_ptr@V?$Filler@M@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:?allocate@?$allocator@PAV?$Blob@M@caffe@@@std@@QAEPAPAV?$Blob@M@caffe@@I@Z")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$Blob@N@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?value@?$is_function_impl@U?$thread_move_t@V?$shared_ptr@Uimpl_base@?$nullary_function@$$A6AXXZ@detail@boost@@@std@@@detail@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??1?$shared_ptr@VSyncedMemory@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?cluster_seedgen@caffe@@YA_JXZ")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??_R0?AV?$SliceLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@EBEXXZ")
#pragma comment(linker, "/include:?has_kernel_size@ConvolutionParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?allocate@?$allocator@U?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:??$Create@VNetStateRule@caffe@@@Arena@protobuf@google@@SAPAVNetStateRule@caffe@@PAV012@@Z")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z")
#pragma comment(linker, "/include:??$addressof@$$CBU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@YAPBU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@ABU1234@@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VV0LayerParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVV0LayerParameter@caffe@@@Z")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAV?$FlattenLayer@N@caffe@@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@@std@@QAE@ABV?$allocator@PAV?$FlattenLayer@N@caffe@@@1@@Z")
#pragma comment(linker, "/include:?MAX@SPPParameter@caffe@@2W4SPPParameter_PoolMethod@2@B")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@@std@@YAPAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:?UnsafeArenaSwap@?$RepeatedPtrField@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@protobuf@google@@QAEXPAV123@@Z")
#pragma comment(linker, "/include:?set_height@BlobProto@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:??_R0?AV?$MSRAFiller@M@caffe@@@8")
#pragma comment(linker, "/include:?set_has_num_output@InnerProductParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??$swap@PAURep@?$RepeatedField@_N@protobuf@google@@@std@@YAXAAPAURep@?$RepeatedField@_N@protobuf@google@@0@Z")
#pragma comment(linker, "/include:?ByteSize@PowerParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBU?$pair@HH@std@@U12@@1@@Z")
#pragma comment(linker, "/include:?traps@_Num_base@std@@2_NB")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@ReductionParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$HingeLossLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$HingeLossLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?MergeFrom@?$RepeatedField@_J@protobuf@google@@QAEXABV123@@Z")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@IBEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@0@Z")
#pragma comment(linker, "/include:?has_pad_w@ConvolutionParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??0?$variate_generator@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@V?$normal_distribution@M@23@@random@boost@@QAE@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@V?$normal_distribution@M@12@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$Net@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_C@_04NDNNCKI@TanH?$AA@")
#pragma comment(linker, "/include:?_Destroy@?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@IAEXPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$FilterLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??A?$vector@V?$shared_ptr@V?$Net@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@QAEAAV?$shared_ptr@V?$Net@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:__CT??_R0?AV?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@@8??0?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z44")
#pragma comment(linker, "/include:_ceilf")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$SliceLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$SliceLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_C@_0FP@KJDODDNB@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??_C@_0EN@LPAFJGCN@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?InternalSwap@PowerParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:??1?$Blob@N@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?vdAbs@@YAXHPBNPAN@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$SigmoidLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$?0V?$SilenceLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$SilenceLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?set_value@FillerParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@clone_base@exception_detail@boost@@8")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$EltwiseLayer@M@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?GetCachedSize@V0LayerParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$NeuronLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?GetCachedSize@ConcatParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?Backward_gpu@?$BaseDataLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??0PowerParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z")
#pragma comment(linker, "/include:?has_backend@DataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??0?$LossLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?begin@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??1?$MemoryDataLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?add_layers@NetParameter@caffe@@QAEPAVV1LayerParameter@2@XZ")
#pragma comment(linker, "/include:?value@?$is_scalar_impl@X@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R2?$HingeLossLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_R3?$BaseDataLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$caffe_set@M@caffe@@YAXHMPAM@Z")
#pragma comment(linker, "/include:?set_has_pad_w@ConvolutionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?InitAsDefaultInstance@BlobShape@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?has_phase@NetState@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R0?AVInternalThread@caffe@@@8")
#pragma comment(linker, "/include:??_D?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@QAEXXZ")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?deallocate@?$allocator@PAV?$Blob@M@caffe@@@std@@QAEXPAPAV?$Blob@M@caffe@@I@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$ReductionLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_R2?$SigmoidLayer@N@caffe@@8")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$InnerProductLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?clear@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAPAV?$Blob@M@caffe@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@YAPAPAV?$Blob@M@caffe@@PAPAV12@00AAU?$_Wrap_alloc@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@@Z")
#pragma comment(linker, "/include:?gpu_data@?$Blob@M@caffe@@QBEPBMXZ")
#pragma comment(linker, "/include:?kDeprecatedFieldNumber@MethodOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_7?$BasePrefetchingDataLayer@N@caffe@@6B?$BaseDataLayer@N@1@@")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@QAE@ABV?$allocator@PAV?$Blob@M@caffe@@@1@@Z")
#pragma comment(linker, "/include:??0?$_Tree_buy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@1@@Z")
#pragma comment(linker, "/include:?Mutable@?$RepeatedPtrField@VLayerParameter@caffe@@@protobuf@google@@QAEPAVLayerParameter@caffe@@H@Z")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$InnerProductLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$Creator_SliceLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??$_Umove@PAV?$vector@MV?$allocator@M@std@@@std@@@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@IAEPAV?$vector@MV?$allocator@M@std@@@1@PAV21@00@Z")
#pragma comment(linker, "/include:?_Freenode0@?$_Tree_buy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?has_new_channels@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?type@?$WindowDataLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??_C@_0CI@EFCOPKAF@Unknown?5parameter?5alpha?5for?5laye@")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@DropoutParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Net@N@caffe@@@boost@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Net@N@caffe@@@boost@@$$QAV34@@Z")
#pragma comment(linker, "/include:?MergeFrom@FlattenParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$Im2colLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$Im2colLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$DataLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$ConcatLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?FromProto@?$Blob@H@caffe@@QAEXABVBlobProto@2@_N@Z")
#pragma comment(linker, "/include:??_G?$Blob@M@caffe@@QAEPAXI@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$SigmoidCrossEntropyLossLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$_Make_heap@PAU?$pair@NH@std@@HU12@U?$greater@U?$pair@NH@std@@@2@@std@@YAXPAU?$pair@NH@0@0U?$greater@U?$pair@NH@std@@@0@PAH0@Z")
#pragma comment(linker, "/include:??_C@_06IBDJIBGI@Filter?$AA@")
#pragma comment(linker, "/include:??_R2bad_alloc_@exception_detail@boost@@8")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$PReLULayer@N@caffe@@@detail@boost@@QAE@PAV?$PReLULayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?allocate@?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@QAEPAPAV?$FlattenLayer@N@caffe@@I@Z")
#pragma comment(linker, "/include:?set_has_fg_fraction@WindowDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?has_batch_size@MemoryDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$SilenceLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:__xmm@ffffffff000000000000000000000000")
#pragma comment(linker, "/include:??$enable_current_exception@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@boost@@YA?AV?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@0@ABU?$error_info_injector@Ubad_year@gregorian@boost@@@20@@Z")
#pragma comment(linker, "/include:?kDetBgThresholdFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R17A@3EA@?$_Iosb@H@std@@8")
#pragma comment(linker, "/include:??0?$RepeatedPtrField@VFillerParameter@caffe@@@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:??_7CPUTimer@caffe@@6B@")
#pragma comment(linker, "/include:?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ")
#pragma comment(linker, "/include:?set_new_num@V0LayerParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$ConstantFiller@N@caffe@@8")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$DropoutLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$_Unchecked@PAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@PAV12@@Z")
#pragma comment(linker, "/include:?CopyFrom@ExpParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?Clear@?$GenericTypeHandler@VParamSpec@caffe@@@internal@protobuf@google@@SAXPAVParamSpec@caffe@@@Z")
#pragma comment(linker, "/include:??_R3?$ReductionLayer@N@caffe@@8")
#pragma comment(linker, "/include:??0BlobProtoVector@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?GetArenaNoVirtual@?$RepeatedPtrField@VBlobShape@caffe@@@protobuf@google@@IBEPAVArena@23@XZ")
#pragma comment(linker, "/include:??$Own@VMessage@protobuf@google@@@Arena@protobuf@google@@QAEXPAVMessage@12@@Z")
#pragma comment(linker, "/include:?MergeFrom@ParamSpec@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?deallocate@?$allocator@E@std@@QAEXPAEI@Z")
#pragma comment(linker, "/include:??$ptr@E@Mat@cv@@QBEPBEH@Z")
#pragma comment(linker, "/include:?Reshape@?$Blob@I@caffe@@QAEXHHHH@Z")
#pragma comment(linker, "/include:??$_Insert_hint@AAU?$pair@$$CBU?$pair@HH@std@@H@std@@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@1@AAU?$pair@$$CBU?$pair@HH@std@@H@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@MemoryDataParameter@caffe@@8")
#pragma comment(linker, "/include:??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?CopyFrom@ReshapeParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$copy@PBIV?$back_insert_iterator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@std@@YA?AV?$back_insert_iterator@V?$vector@HV?$allocator@H@std@@@std@@@0@PBI0V10@@Z")
#pragma comment(linker, "/include:?set_has_num@BlobProto@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@std@@QAEPAV?$vector@HV?$allocator@H@std@@@2@I@Z")
#pragma comment(linker, "/include:??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@1@XZ")
#pragma comment(linker, "/include:?RestoreSolverState@?$SGDSolver@M@caffe@@MAEXABVSolverState@2@@Z")
#pragma comment(linker, "/include:?input_blob_indices@?$Net@N@caffe@@QBEABV?$vector@HV?$allocator@H@std@@@std@@XZ")
#pragma comment(linker, "/include:?param_owners@?$Net@N@caffe@@QBEABV?$vector@HV?$allocator@H@std@@@std@@XZ")
#pragma comment(linker, "/include:?vsSub@@YAXHPBM0PAM@Z")
#pragma comment(linker, "/include:?value@?$sign_wknd@_J$0DOI@@aux@mpl@boost@@2_JB")
#pragma comment(linker, "/include:?mutable_pooling_param@V1LayerParameter@caffe@@QAEPAVPoolingParameter@2@XZ")
#pragma comment(linker, "/include:?has_layer@PythonParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??0ParamSpec@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$LossLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?set_pool@PoolingParameter@caffe@@QAEXW4PoolingParameter_PoolMethod@2@@Z")
#pragma comment(linker, "/include:?is_not_a_number@?$int_adapter@I@date_time@boost@@SA_NI@Z")
#pragma comment(linker, "/include:?Add@?$RepeatedPtrField@VParamSpec@caffe@@@protobuf@google@@QAEPAVParamSpec@caffe@@XZ")
#pragma comment(linker, "/include:?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?DB_ARRAYSIZE@DataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?has_width@MemoryDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?kMirrorFieldNumber@ImageDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?_Reserve@?$vector@HV?$allocator@H@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??_R3?$ReshapeLayer@M@caffe@@8")
#pragma comment(linker, "/include:?Transform@?$DataTransformer@M@caffe@@QAEXPAV?$Blob@M@2@0@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@Vthread@boost@@@detail@boost@@QAE@PAVthread@2@@Z")
#pragma comment(linker, "/include:?g_registry_@?1??Registry@?$LayerRegistry@N@caffe@@SAAAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@XZ@4PAV45@A")
#pragma comment(linker, "/include:?IsInitialized@MemoryDataParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@2@@Z")
#pragma comment(linker, "/include:?set_has_phase@NetStateRule@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_GConcatParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_C@_0CO@IJKGALKF@Duplicate?5blobs?5produced?5by?5mult@")
#pragma comment(linker, "/include:??_C@_0CF@CEDEJBFF@The?5NetState?5did?5not?5contain?5sta@")
#pragma comment(linker, "/include:??_R0?AV?$ReLULayer@M@caffe@@@8")
#pragma comment(linker, "/include:??$MakeCheckOpString@MM@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABM0PBD@Z")
#pragma comment(linker, "/include:?_Tidy@?$vector@PAV?$FlattenLayer@M@caffe@@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$SilenceLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?MergeFrom@?$RepeatedPtrField@VNetStateRule@caffe@@@protobuf@google@@QAEXABV123@@Z")
#pragma comment(linker, "/include:??_E?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@$4PPPPPPPM@CI@AEPAXI@Z")
#pragma comment(linker, "/include:??$_Allocate@D@std@@YAPADIPAD@Z")
#pragma comment(linker, "/include:?gcd_n1_n2@?$ratio_divide@V?$ratio@$00$0DOI@@boost@@V?$ratio@$00$0DLJKMKAA@@2@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:??$_Umove@PAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@?$vector@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@IAEPAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@1@PAPAV21@00@Z")
#pragma comment(linker, "/include:__CT??_R0?AV?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@@8??0?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z52")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$SPPLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?pointer_to@?$pointer_traits@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@SAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@AAU32@@Z")
#pragma comment(linker, "/include:?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@AAPAU21@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$ReLULayer@M@caffe@@8")
#pragma comment(linker, "/include:??$_Uninit_copy@$$CBHH@std@@YAPAHPBH0PAHAAU?$_Wrap_alloc@V?$allocator@H@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$AccuracyLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_G?$PowerLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?kAxisFieldNumber@AccuracyParameter@caffe@@2HB")
#pragma comment(linker, "/include:?GetReferenceableValue@google@@YAHH@Z")
#pragma comment(linker, "/include:?min@?$int_adapter@I@date_time@boost@@SA?AV123@XZ")
#pragma comment(linker, "/include:??$OwnInternal@VMemoryDataParameter@caffe@@@Arena@protobuf@google@@AAEXPAVMemoryDataParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?kBiasFillerFieldNumber@ConvolutionParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_C@_0O@HBLKOJGM@bottom_h_?5?$DO?50?$AA@")
#pragma comment(linker, "/include:?scale_diff@?$Blob@M@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??_C@_0CL@CJBFJOFF@cannot?5set?5both?5force_color?5and?5@")
#pragma comment(linker, "/include:??1?$shared_ptr@VDB@db@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?value@?$choose_initial_n@$0A@@static_log2_impl@detail@boost@@2HB")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@6Bruntime_error@std@@@")
#pragma comment(linker, "/include:?Clear@AccuracyParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??$_Unchecked@V?$back_insert_iterator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@std@@YA?AV?$back_insert_iterator@V?$vector@HV?$allocator@H@std@@@std@@@0@V10@@Z")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@1@AAPAU21@@Z")
#pragma comment(linker, "/include:??$GetSoftmaxLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?swap@?$shared_ptr@VGenerator@RNG@Caffe@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:?Backward@?$Net@M@caffe@@QAEXXZ")
#pragma comment(linker, "/include:?mutable_unknown_fields@InnerProductParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?backend@DataParameter@caffe@@QBE?AW4DataParameter_DB@2@XZ")
#pragma comment(linker, "/include:?gInstantiationGuardSigmoidLayer@caffe@@3DA")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$ConvolutionLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?swap@?$shared_ptr@VSyncedMemory@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:??_C@_0DB@CGCPMDCG@Check?5failed?3?5proto?4SerializeToO@")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBU?$pair@HH@std@@M@std@@ABUpiecewise_construct_t@2@V?$tuple@ABU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBU?$pair@HH@std@@M@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$BNLLLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z1220")
#pragma comment(linker, "/include:??_R3BlobShape@caffe@@8")
#pragma comment(linker, "/include:?state@?$fpos@H@std@@QBEHXZ")
#pragma comment(linker, "/include:??_C@_09BOHCBHAI@HingeLoss?$AA@")
#pragma comment(linker, "/include:?max_size@?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?unknown_fields@BlobProtoVector@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@NH@std@@@std@@@std@@@std@@QAE@PAU?$pair@NH@1@PBU_Container_base0@1@@Z")
#pragma comment(linker, "/include:?set_has_scale@DataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@H@Z")
#pragma comment(linker, "/include:??_R2LayerParameter@caffe@@8")
#pragma comment(linker, "/include:??$arena_destruct_object@VParamSpec@caffe@@@internal@protobuf@google@@YAXPAX@Z")
#pragma comment(linker, "/include:?count@?$Blob@H@caffe@@QBEHHH@Z")
#pragma comment(linker, "/include:?value@?$is_character@H@detail@boost@@2_NB")
#pragma comment(linker, "/include:?MaxBottomBlobs@?$InfogainLossLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$DeconvolutionLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?mutable_reduction_param@LayerParameter@caffe@@QAEPAVReductionParameter@2@XZ")
#pragma comment(linker, "/include:?mutable_hdf5_data_param@V1LayerParameter@caffe@@QAEPAVHDF5DataParameter@2@XZ")
#pragma comment(linker, "/include:?kJavaMultipleFilesFieldNumber@FileOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:?default_instance_@ContrastiveLossParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??$construct@V?$vector@HV?$allocator@H@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@1@PAV?$vector@HV?$allocator@H@std@@@1@$$QAV31@@Z")
#pragma comment(linker, "/include:?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?set_has_power_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@_Iostream_error_category@std@@8")
#pragma comment(linker, "/include:??_8?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@7B@")
#pragma comment(linker, "/include:?requires_stringbuf@?$lexical_cast_stream_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_J@detail@boost@@2_NB")
#pragma comment(linker, "/include:?has_snapshot_diff@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?CopyFrom@NetStateRule@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??A?$map@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAEAAH$$QAH@Z")
#pragma comment(linker, "/include:?fpclassify@@YAHN@Z")
#pragma comment(linker, "/include:?kOneofIndexFieldNumber@FieldDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_R4?$SGDSolver@N@caffe@@6B@")
#pragma comment(linker, "/include:?is_integral@?$integer_traits_base@_W$0A@$0PPPP@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VV1LayerParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVV1LayerParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@VNetParameter@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$forward@AAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@0@AAPAU10@@Z")
#pragma comment(linker, "/include:?set_num_output@InnerProductParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?kServiceFieldNumber@FileDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?set_has_max_iter@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?Backward_cpu@?$BNLLLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:__CT??_R0?AU?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@8??0?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@QAE@ABU012@@Z40")
#pragma comment(linker, "/include:?ReadProtoFromTextFileOrDie@caffe@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$Layer@N@caffe@@@boost@@YAXPAV?$Layer@N@caffe@@@Z")
#pragma comment(linker, "/include:?New@DataParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?erase@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@2@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@ConcatParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$_Uninit_def_fill_n@HIH@std@@YAXPAHIAAU?$_Wrap_alloc@V?$allocator@H@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?kStrideWFieldNumber@ConvolutionParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$_Move@AAPAVCaffe@caffe@@@std@@YA$$QAPAVCaffe@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@SPPParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?add_param@LayerParameter@caffe@@QAEPAVParamSpec@2@XZ")
#pragma comment(linker, "/include:??_R0?AV?$AdaGradSolver@N@caffe@@@8")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@SAIABV?$allocator@PAV?$Blob@M@caffe@@@2@@Z")
#pragma comment(linker, "/include:?InitAsDefaultInstance@WindowDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_C@_0CE@GNDEGFIM@top_shape_index?5?$DN?$DN?5top_shape?4siz@")
#pragma comment(linker, "/include:??_R2?$basic_fstream@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:??$?0U?$pair@HH@std@@@?$_Tuple_val@$$QAU?$pair@HH@std@@@std@@QAE@$$QAU?$pair@HH@1@@Z")
#pragma comment(linker, "/include:?kTypeFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??1?$SigmoidLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?mutable_cpu_diff@?$Blob@M@caffe@@QAEPAMXZ")
#pragma comment(linker, "/include:?type@?$SoftmaxWithLossLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??0?$EuclideanLossLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$ContrastiveLossLayer@M@caffe@@8")
#pragma comment(linker, "/include:??$Check_LEImpl@NN@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABN0PBD@Z")
#pragma comment(linker, "/include:?adjustment_ratio@?$subsecond_duration@Vtime_duration@posix_time@boost@@$0PECEA@@date_time@boost@@0_JB")
#pragma comment(linker, "/include:??$construct@U?$pair@NH@std@@U12@@?$allocator@U?$pair@NH@std@@@std@@QAEXPAU?$pair@NH@1@$$QAU21@@Z")
#pragma comment(linker, "/include:??_C@_0BB@HKODKJIM@by?5scale?5factor?5?$AA@")
#pragma comment(linker, "/include:?InternalSwap@DataParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?DEFAULT@SPPParameter@caffe@@2W4SPPParameter_Engine@2@B")
#pragma comment(linker, "/include:??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBU?$pair@HH@std@@U12@@1@XZ")
#pragma comment(linker, "/include:??_R0?AVbad_exception@std@@@8")
#pragma comment(linker, "/include:??_C@_0BI@MOLGOLNP@?5top?5blob?$CIs?$CJ?5as?5output?4?$AA@")
#pragma comment(linker, "/include:??$caffe_mul@M@caffe@@YAXHPBM0PAM@Z")
#pragma comment(linker, "/include:?set_has_source@DataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?kJavaPackageFieldNumber@FileOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:?digits@?$numeric_limits@E@std@@2HB")
#pragma comment(linker, "/include:??0?$ContrastiveLossLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??_G?$LRNLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@IBEXPAPAV?$Blob@M@caffe@@0@Z")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z")
#pragma comment(linker, "/include:?has_tanh_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?AddCreator@?$LayerRegistry@N@caffe@@SAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@2@@Z@Z")
#pragma comment(linker, "/include:??_GFlattenParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?kMessageSetTypeIdNumber@WireFormatLite@internal@protobuf@google@@2HB")
#pragma comment(linker, "/include:?mutable_cpu_diff@?$Blob@N@caffe@@QAEPANXZ")
#pragma comment(linker, "/include:?type@LayerParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?default_instance@NetState@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??0system_error@system@boost@@QAE@ABV012@@Z")
#pragma comment(linker, "/include:??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@0@AAU10@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$SplitLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?New@SigmoidParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$destroy@V?$vector@_NV?$allocator@_N@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@std@@QAEXPAV?$vector@_NV?$allocator@_N@std@@@1@@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$ConcatLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$forward@ABV?$vector@MV?$allocator@M@std@@@std@@@std@@YAABV?$vector@MV?$allocator@M@std@@@0@ABV10@@Z")
#pragma comment(linker, "/include:?Clear@?$RepeatedField@H@protobuf@google@@QAEXXZ")
#pragma comment(linker, "/include:?backward_cpu_gemm@?$BaseConvolutionLayer@N@caffe@@IAEXPBN0PAN@Z")
#pragma comment(linker, "/include:??_R0?AVLossParameter@caffe@@@8")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VInnerProductParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVInnerProductParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?SharedCtor@HDF5OutputParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R2?$EuclideanLossLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_C@_0BA@KBPMDNLM@SoftmaxWithLoss?$AA@")
#pragma comment(linker, "/include:?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAHIPBH@Z")
#pragma comment(linker, "/include:??_R0?AVWindowDataParameter@caffe@@@8")
#pragma comment(linker, "/include:??$ReadMessageNoVirtualNoRecursionDepth@VNetStateRule@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVNetStateRule@caffe@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?New@TanHParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$?G_J@?$int_adapter@_J@date_time@boost@@QBE?AV012@ABV012@@Z")
#pragma comment(linker, "/include:??_R0?AV?$AccuracyLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??_R3bad_alloc@std@@8")
#pragma comment(linker, "/include:?SetCachedSize@SigmoidParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?exclude@V1LayerParameter@caffe@@QBEABVNetStateRule@2@H@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$InfogainLossLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@N@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$PoolingLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?New@TransformationParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$swap@PAVBlobShape@caffe@@@std@@YAXAAPAVBlobShape@caffe@@0@Z")
#pragma comment(linker, "/include:?HingeLossParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?SetCachedSize@DataParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:??_R2?$PositiveUnitballFiller@N@caffe@@8")
#pragma comment(linker, "/include:?has_snapshot@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$_Allocate@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@0@IPAU10@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$PReLULayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$LRNLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_Gbad_month@gregorian@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?den@?$ratio@$00$0JIJGIA@@boost@@2_JB")
#pragma comment(linker, "/include:??$destroy@U?$pair@MH@std@@@?$allocator@U?$pair@MH@std@@@std@@QAEXPAU?$pair@MH@1@@Z")
#pragma comment(linker, "/include:?cast_ptr@?$optional_base@Vlocale@std@@@optional_detail@boost@@AAEPAVlocale@std@@PAV45@U?$bool_@$0A@@mpl@3@@Z")
#pragma comment(linker, "/include:??_R4?$NesterovSolver@M@caffe@@6B@")
#pragma comment(linker, "/include:??0LossParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?InternalSwap@V0LayerParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$TanHLayer@M@caffe@@@boost@@YAXPAV?$TanHLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?kGroupFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_Gdomain_error@std@@UAEPAXI@Z")
#pragma comment(linker, "/include:?unknown_fields@FlattenParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?ByteSize@SolverState@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$construct@MAAM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAAV?$allocator@M@1@PAMAAM@Z")
#pragma comment(linker, "/include:??$_Unchecked@PAI@std@@YAPAIPAI@Z")
#pragma comment(linker, "/include:??_R3FlattenParameter@caffe@@8")
#pragma comment(linker, "/include:??R?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@QAEIXZ")
#pragma comment(linker, "/include:??$caffe_cpu_asum@M@caffe@@YAMHPBM@Z")
#pragma comment(linker, "/include:?concat_param@LayerParameter@caffe@@QBEABVConcatParameter@2@XZ")
#pragma comment(linker, "/include:?value@?$is_volatile_rval_filter@F@detail@boost@@2_NB")
#pragma comment(linker, "/include:??0?$allocator@PAV?$Blob@N@caffe@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?pad@V0LayerParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??_7?$Filler@N@caffe@@6B@")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@QAEPAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:??0ThresholdParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$DummyDataLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??_R0?AVerror_category@std@@@8")
#pragma comment(linker, "/include:??0?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@1@@Z")
#pragma comment(linker, "/include:?UpgradeNetAsNeeded@caffe@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVNetParameter@1@@Z")
#pragma comment(linker, "/include:?set_has_average_loss@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??1ThresholdParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$DeconvolutionLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??_G?$vector@_NV?$allocator@_N@std@@@std@@QAEPAXI@Z")
#pragma comment(linker, "/include:?SPPParameter_PoolMethod_IsValid@caffe@@YA_NH@Z")
#pragma comment(linker, "/include:?include_size@LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$ConcatLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?kInitialSize@?$RepeatedField@_K@protobuf@google@@0HB")
#pragma comment(linker, "/include:?InitAsDefaultInstance@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?gpu_data@?$Blob@H@caffe@@QBEPBHXZ")
#pragma comment(linker, "/include:?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??$?8V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@V01@@std@@YA_NABV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@0@0@Z")
#pragma comment(linker, "/include:??_R4InfogainLossParameter@caffe@@6B@")
#pragma comment(linker, "/include:?SetCachedSize@SolverParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z")
#pragma comment(linker, "/include:?subtract_times@?$counted_time_system@U?$counted_time_rep@Vmillisec_posix_time_system_config@posix_time@boost@@@date_time@boost@@@date_time@boost@@SA?AVtime_duration@posix_time@3@ABU?$counted_time_rep@Vmillisec_posix_time_system_config@posix_time@boost@@@23@0@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@HingeLossParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R4?$BasePrefetchingDataLayer@N@caffe@@6B?$BaseDataLayer@N@1@@")
#pragma comment(linker, "/include:?set_has_force_color@TransformationParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?has_accuracy_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?CUDNN@SPPParameter@caffe@@2W4SPPParameter_Engine@2@B")
#pragma comment(linker, "/include:??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8")
#pragma comment(linker, "/include:??_7?$ThresholdLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??_C@_0DM@FDDBNODM@All?5inputs?5must?5have?5the?5same?5sh@")
#pragma comment(linker, "/include:?Swap@BlobShape@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$PowerLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?_Reserve@?$vector@PAV?$FlattenLayer@N@caffe@@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?max@?$int_adapter@I@date_time@boost@@SA?AV123@XZ")
#pragma comment(linker, "/include:??0?$vector@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@V?$allocator@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$make_thread_info@V?$bind_t@XV?$mf0@XVInternalThread@caffe@@@_mfi@boost@@V?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@3@@_bi@boost@@@thread@boost@@CA?AV?$intrusive_ptr@Uthread_data_base@detail@boost@@@1@$$QAV?$bind_t@XV?$mf0@XVInternalThread@caffe@@@_mfi@boost@@V?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@3@@_bi@1@@Z")
#pragma comment(linker, "/include:??0?$allocator@D@std@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?_Xlen@?$vector@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@IBEXXZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$SoftmaxLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?_Grow_to@?$vector@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@IBEII@Z")
#pragma comment(linker, "/include:??$destroy@U?$pair@NH@std@@@?$allocator_traits@V?$allocator@U?$pair@NH@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@NH@std@@@1@PAU?$pair@NH@1@@Z")
#pragma comment(linker, "/include:??_R2?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??0?$vector@NV?$allocator@N@std@@@std@@QAE@IABN@Z")
#pragma comment(linker, "/include:??0?$vector@HV?$allocator@H@std@@@std@@QAE@I@Z")
#pragma comment(linker, "/include:?kTypeFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_E?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@WBE@AEPAXI@Z")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$Layer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$enable_current_exception@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@boost@@YA?AV?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@0@ABU?$error_info_injector@Vtoo_many_args@io@boost@@@20@@Z")
#pragma comment(linker, "/include:??$_Insert_hint@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@@Z")
#pragma comment(linker, "/include:?kDeprecatedFieldNumber@FileOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z")
#pragma comment(linker, "/include:?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$SplitLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?assign@?$constrained_value@V?$simple_exception_policy@G$0FHI@$0CHBA@Ubad_year@gregorian@boost@@@CV@boost@@@CV@boost@@AAEXG@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$Blob@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_R4EltwiseParameter@caffe@@6B@")
#pragma comment(linker, "/include:??_C@_0BL@NIBAFALO@?$CJ?5is?5above?5the?5max_level?5?$CI?$AA@")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$ThresholdLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??1?$XavierFiller@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?ByteSize@AccuracyParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_C@_0CC@GADFEMNP@MinBottomBlobs?$CI?$CJ?5?$DM?$DN?5bottom?4size?$CI@")
#pragma comment(linker, "/include:?has_solver_mode@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?kOptionsFieldNumber@DescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??$checked_delete@V?$ReductionLayer@N@caffe@@@boost@@YAXPAV?$ReductionLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?unknown_fields@ContrastiveLossParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_7Closure@protobuf@google@@6B@")
#pragma comment(linker, "/include:?data@BlobProto@caffe@@QBEMH@Z")
#pragma comment(linker, "/include:??0?$year_month_day_base@Vgreg_year@gregorian@boost@@Vgreg_month@23@Vgreg_day@23@@date_time@boost@@QAE@Vgreg_year@gregorian@2@Vgreg_month@42@Vgreg_day@42@@Z")
#pragma comment(linker, "/include:??$OwnInternal@VDummyDataParameter@caffe@@@Arena@protobuf@google@@AAEXPAVDummyDataParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:??_7?$ConstantFiller@N@caffe@@6B@")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@VSyncedMemory@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$MergeFrom@VTypeHandler@?$RepeatedPtrField@VNetState@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXABV0123@@Z")
#pragma comment(linker, "/include:??0?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@1@@Z")
#pragma comment(linker, "/include:?Check_EQImpl@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HHPBD@Z")
#pragma comment(linker, "/include:?ReductionOp_MAX@ReductionParameter@caffe@@2W4ReductionParameter_ReductionOp@2@B")
#pragma comment(linker, "/include:??_R2?$LossLayer@N@caffe@@8")
#pragma comment(linker, "/include:?CopyFrom@SolverParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R1BJE@?0A@EA@InternalThread@caffe@@8")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$LRNLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?push_back@?$vector@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@QAEX$$QAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??$?0V?$PReLULayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$PReLULayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@VNetParameter@caffe@@@std@@@std@@QAEXPAVNetParameter@caffe@@I@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@ReshapeParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??$Clear@VTypeHandler@?$RepeatedPtrField@VParamSpec@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXXZ")
#pragma comment(linker, "/include:?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@U?$pair@NH@std@@V?$allocator@U?$pair@NH@std@@@2@@std@@IBEXPAU?$pair@NH@2@0@Z")
#pragma comment(linker, "/include:??_7?$FlattenLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?data@?$Blob@N@caffe@@QBEABV?$shared_ptr@VSyncedMemory@caffe@@@boost@@XZ")
#pragma comment(linker, "/include:?_Reserve@?$vector@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?value@?$is_mutex_type@PAV?$unique_lock@Vmutex@boost@@@boost@@@boost@@2_NB")
#pragma comment(linker, "/include:?_Parent@?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAAAPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$DummyDataLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_C@_08HOIGKLHM@?0?5param?5?$AA@")
#pragma comment(linker, "/include:?kDeviceIdFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$construct@PAV?$Blob@N@caffe@@PAV12@@?$allocator_traits@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@SAXAAV?$allocator@PAV?$Blob@N@caffe@@@1@PAPAV?$Blob@N@caffe@@$$QAPAV34@@Z")
#pragma comment(linker, "/include:?_Inside@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@2@@std@@IBE_NPBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@2@@Z")
#pragma comment(linker, "/include:??0?$DropoutLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?default_instance_@SPPParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??_R2?$AbsValLayer@M@caffe@@8")
#pragma comment(linker, "/include:??1?$vector@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?TYPE_FIXED32@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Type@23@B")
#pragma comment(linker, "/include:??_R0?AV?$ConvolutionLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?mutable_sigmoid_param@V1LayerParameter@caffe@@QAEPAVSigmoidParameter@2@XZ")
#pragma comment(linker, "/include:?TanHParameter_Engine_descriptor@caffe@@YAPBVEnumDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R4PythonParameter@caffe@@6B@")
#pragma comment(linker, "/include:?SharedCtor@SigmoidParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$ExpLayer@M@caffe@@@detail@boost@@QAE@PAV?$ExpLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??1thread@boost@@QAE@XZ")
#pragma comment(linker, "/include:??_R4?$UniformFiller@N@caffe@@6B@")
#pragma comment(linker, "/include:??_R3InfogainLossParameter@caffe@@8")
#pragma comment(linker, "/include:?engine@SigmoidParameter@caffe@@QBE?AW4SigmoidParameter_Engine@2@XZ")
#pragma comment(linker, "/include:?Forward_cpu@?$AccuracyLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?kMessageSetMessageNumber@WireFormatLite@internal@protobuf@google@@2HB")
#pragma comment(linker, "/include:?default_instance@WindowDataParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??_C@_0BD@EFCPCMAC@Optimization?5Done?4?$AA@")
#pragma comment(linker, "/include:??0?$optional_base@Vlocale@std@@@optional_detail@boost@@IAE@ABV012@@Z")
#pragma comment(linker, "/include:??_R0?AV?$DataTransformer@N@caffe@@@8")
#pragma comment(linker, "/include:?allocate@?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEPAV?$vector@_NV?$allocator@_N@std@@@2@I@Z")
#pragma comment(linker, "/include:??$_Val_type@PAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@PAV12@@Z")
#pragma comment(linker, "/include:?input_dim@NetParameter@caffe@@QBEHH@Z")
#pragma comment(linker, "/include:?clone@?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:??_C@_06HCAMKDBE@p?5?$DO?$DN?50?$AA@")
#pragma comment(linker, "/include:?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??_C@_0O@IJLAODBM@end_axis?5?$DO?$DN?50?$AA@")
#pragma comment(linker, "/include:??_R2EltwiseParameter@caffe@@8")
#pragma comment(linker, "/include:?Fill@?$UniformFiller@N@caffe@@UAEXPAV?$Blob@N@2@@Z")
#pragma comment(linker, "/include:?kMessageTypeFieldNumber@FileDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??$MergeFromInnerLoop@VTypeHandler@?$RepeatedPtrField@VParamSpec@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@AAEXPAPAX0HH@Z")
#pragma comment(linker, "/include:?SharedCtor@ArgMaxParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$TanHLayer@N@caffe@@8")
#pragma comment(linker, "/include:?max@?$br_mul@$00$00@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:??$addressof@N@std@@YAPANAAN@Z")
#pragma comment(linker, "/include:?kSliceParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R2CPUTimer@caffe@@8")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$PReLULayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??0?$SigmoidLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??_R4?$MemoryDataLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?is_infinity@?$date@V0gregorian@boost@@Vgregorian_calendar@12@Vdate_duration@12@@date_time@boost@@QBE_NXZ")
#pragma comment(linker, "/include:??$_Move@AAPAVSPPParameter@caffe@@@std@@YA$$QAPAVSPPParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??_R0?AV?$ConstantFiller@N@caffe@@@8")
#pragma comment(linker, "/include:?NetStateRule_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??$_Val_type@PAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@YAPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@PAU1234@@Z")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$ReshapeLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$LogLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$DummyDataLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$PowerLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@LossParameter@caffe@@8")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VDataParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVDataParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:??_Gerror_category@std@@UAEPAXI@Z")
#pragma comment(linker, "/include:?New@HingeLossParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?conv_im2col_cpu@?$BaseConvolutionLayer@N@caffe@@AAEXPBNPAN@Z")
#pragma comment(linker, "/include:??1?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$PReLULayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?GetCachedSize@NetState@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V12@@?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@$$QAV23@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$ArgMaxLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?erase@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@2@0@Z")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@1@AAPAU21@@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVSPPParameter@caffe@@@internal@protobuf@google@@YAPBVSPPParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?value@?$trait_impl@V?$basic_istream@DU?$char_traits@D@std@@@std@@GUdont_care@has_right_shift_impl@detail@boost@@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_C@_0DI@PNGOBEEP@Check?5failed?3?5ReadProtoFromTextF@")
#pragma comment(linker, "/include:??_R2?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$FilterLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?data_param@V1LayerParameter@caffe@@QBEABVDataParameter@2@XZ")
#pragma comment(linker, "/include:?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEXABH@Z")
#pragma comment(linker, "/include:??_C@_0DI@EPCNNCIN@Check?5failed?3?5bottom?$FLi?$FN?9?$DOshape?$CI?$CJ@")
#pragma comment(linker, "/include:?radix@_Num_int_base@std@@2HB")
#pragma comment(linker, "/include:?IsInitialized@ExpParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z")
#pragma comment(linker, "/include:?IsInitialized@ArgMaxParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?unknown_fields@V0LayerParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$?0V?$ArgMaxLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$ArgMaxLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_R4?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@6Bbad_alloc@std@@@")
#pragma comment(linker, "/include:??_C@_06BFJKLPMA@AbsVal?$AA@")
#pragma comment(linker, "/include:??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@PBU_Container_base0@1@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$ReductionLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?New@ThresholdParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:?InternalThreadEntry@?$DataLayer@N@caffe@@MAEXXZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@2@@std@@YAPAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??$forward@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@YA$$QAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@AAV12@@Z")
#pragma comment(linker, "/include:?NetParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$Layer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$_Ptr_cat@V?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@PAN@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@0@AAPAN@Z")
#pragma comment(linker, "/include:??_R2SolverParameter@caffe@@8")
#pragma comment(linker, "/include:?Clear@FlattenParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??$_Move@AA_N@std@@YA$$QA_NAA_N@Z")
#pragma comment(linker, "/include:??_R0?AV?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:??$checked_delete@V?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@@boost@@YAXPAV?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@0@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$DataLayer@N@caffe@@@boost@@YAXPAV?$DataLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?add_param@V1LayerParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B")
#pragma comment(linker, "/include:?mutable_loss_param@V1LayerParameter@caffe@@QAEPAVLossParameter@2@XZ")
#pragma comment(linker, "/include:?TYPE_UINT64@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Type@23@B")
#pragma comment(linker, "/include:??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QAE@PAHPBU_Container_base0@1@@Z")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??_E?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@$4PPPPPPPM@CI@AEPAXI@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@LRNParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$ReLULayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_C@_0CF@CMOECLA@bottom?$FL0?$FN?9?$DOnum?$CI?$CJ?5?$DN?$DN?5bottom?$FL1?$FN?9?$DOn@")
#pragma comment(linker, "/include:??_C@_0BB@PMGBDJHO@V0LayerParameter?$AA@")
#pragma comment(linker, "/include:?_Grow_to@?$vector@IV?$allocator@_N@std@@@std@@IBEII@Z")
#pragma comment(linker, "/include:?mutable_gpu_data@SyncedMemory@caffe@@QAEPAXXZ")
#pragma comment(linker, "/include:??$Get@VTypeHandler@?$RepeatedPtrField@VBlobShape@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IBEABVBlobShape@caffe@@H@Z")
#pragma comment(linker, "/include:?GetMetadata@BlobProto@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?ContrastiveLossParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?GetCachedSize@PReLUParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?MergeFrom@?$RepeatedField@M@protobuf@google@@QAEXABV123@@Z")
#pragma comment(linker, "/include:?EUCLIDEAN_LOSS@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??_R4_InputArray@cv@@6B@")
#pragma comment(linker, "/include:??_GNetParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?_Destroy@?$vector@U?$pair@MH@std@@V?$allocator@U?$pair@MH@std@@@2@@std@@IAEXPAU?$pair@MH@2@0@Z")
#pragma comment(linker, "/include:?ABS_N@?$ratio@$00$0DLJKMKAA@@boost@@0_JB")
#pragma comment(linker, "/include:?New@LayerParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:?has_scale@TransformationParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?construct@?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$SoftmaxLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$HingeLossLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??$forward@ABN@std@@YAABNABN@Z")
#pragma comment(linker, "/include:?decay_mult@ParamSpec@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?ComputeUpdateValue@?$SGDSolver@M@caffe@@MAEXHM@Z")
#pragma comment(linker, "/include:??_R3?$BilinearFiller@N@caffe@@8")
#pragma comment(linker, "/include:?ACROSS_CHANNELS@LRNParameter@caffe@@2W4LRNParameter_NormRegion@2@B")
#pragma comment(linker, "/include:??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z")
#pragma comment(linker, "/include:?construct@?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??$construct@HAAH@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAEXPAHAAH@Z")
#pragma comment(linker, "/include:?Reshape@?$ReshapeLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$PowerLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z")
#pragma comment(linker, "/include:?SharedDtor@InfogainLossParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_C@_07OCDKBNAP@?5failed?$AA@")
#pragma comment(linker, "/include:??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@H@Z")
#pragma comment(linker, "/include:?value@?$is_arithmetic_impl@_J@detail@boost@@2_NB")
#pragma comment(linker, "/include:?layer_need_backward@?$Net@N@caffe@@QBEABV?$vector@_NV?$allocator@_N@std@@@std@@XZ")
#pragma comment(linker, "/include:?has_mirror@WindowDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?deallocate@?$allocator@I@std@@QAEXPAII@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$ExpLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R2?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??$_Allocate@H@std@@YAPAHIPAH@Z")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@N@std@@@std@@QAEPANI@Z")
#pragma comment(linker, "/include:?CopyFrom@ConcatParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?is_integral@?$integer_traits_base@I$0A@$0PPPPPPPP@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??$cast@VTypeHandler@?$RepeatedPtrField@VNetStateRule@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@CAPAVNetStateRule@caffe@@PAX@Z")
#pragma comment(linker, "/include:??_C@_0M@IGBIKNJG@top_k_?5?$DO?$DN?51?$AA@")
#pragma comment(linker, "/include:??$sp_pointer_construct@VCaffe@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@VCaffe@caffe@@@1@PAVCaffe@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@6Bdomain_error@std@@@")
#pragma comment(linker, "/include:?New@NetParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:?set_has_num_axes@ReshapeParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?WaitForInternalThreadToExit@InternalThread@caffe@@QAE_NXZ")
#pragma comment(linker, "/include:??_E?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@WM@AEPAXI@Z")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@1@AAPAU21@@Z")
#pragma comment(linker, "/include:??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABH@2@V?$tuple@$$$V@2@@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABH@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?kScaleFieldNumber@ImageDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?MoveArray@?$RepeatedField@I@protobuf@google@@AAEXPAI0H@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$ConcatLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?mutable_log_param@LayerParameter@caffe@@QAEPAVLogParameter@2@XZ")
#pragma comment(linker, "/include:??_R0?AU?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:?kFillerFieldNumber@PReLUParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$?MMH@std@@YA_NABU?$pair@MH@0@0@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$MVNLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_G?$AdaGradSolver@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?MinTopBlobs@?$DummyDataLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?_Lrotate@?$_Tree@V?$_Tmap_traits@PBXUtss_data_node@detail@boost@@U?$less@PBX@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@5@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?_Psave@?$_Facetptr@V?$codecvt@DDH@std@@@std@@2PBVfacet@locale@2@B")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?clear_has_mean_file@WindowDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_C@_0DA@JIFKKLLD@The?5data?5and?5label?5should?5have?5t@")
#pragma comment(linker, "/include:?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B")
#pragma comment(linker, "/include:??$Own@VNetState@caffe@@@Arena@protobuf@google@@QAEXPAVNetState@caffe@@@Z")
#pragma comment(linker, "/include:??$forward@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@YA$$QAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@AAPAV10@@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$PoolingLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$?0V?$DataTransformer@M@caffe@@@?$shared_ptr@V?$DataTransformer@M@caffe@@@boost@@QAE@PAV?$DataTransformer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$SPPLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$_Insert_hint@AAU?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@1@AAU?$pair@$$CBU?$pair@HH@std@@U12@@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@1@@Z")
#pragma comment(linker, "/include:?channels@?$Blob@I@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@AAPAU21@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$Filler@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??0?$vector@_NV?$allocator@_N@std@@@std@@QAE@$$QAV01@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@WindowDataParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@FlattenParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$ConvolutionLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?allocate@?$allocator@PAV?$Blob@N@caffe@@@std@@QAEPAPAV?$Blob@N@caffe@@I@Z")
#pragma comment(linker, "/include:?allocate@?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QBEXABV12@@Z")
#pragma comment(linker, "/include:?tempering_b@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@2IB")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$Net@M@caffe@@@boost@@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??0?$ConvolutionLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??$feed@DU?$char_traits@D@std@@V?$allocator@D@2@ABQBD@detail@io@boost@@YAAAV?$basic_format@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AAV32@ABQBD@Z")
#pragma comment(linker, "/include:??0?$InfogainLossLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?mutable_contrastive_loss_param@V1LayerParameter@caffe@@QAEPAVContrastiveLossParameter@2@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$AccuracyLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@2@@Z")
#pragma comment(linker, "/include:?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??_R2ThresholdParameter@caffe@@8")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$LRNLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_C@_0DB@FOBPKGCG@Input?5size?5incompatible?5with?5con@")
#pragma comment(linker, "/include:??_C@_0FI@DFNDCPFK@Check?5failed?3?5?$CInew_height?5?$DN?$DN?50?5?$CG@")
#pragma comment(linker, "/include:?Swap@MemoryDataParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:?shape@DummyDataParameter@caffe@@QBEABVBlobShape@2@H@Z")
#pragma comment(linker, "/include:?GetCachedSize@HingeLossParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@8")
#pragma comment(linker, "/include:?GetCachedSize@ParamSpec@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?flag@?$fp_traits_non_native@OUextended_double_precision@detail@math@boost@@@detail@math@boost@@2IB")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$LogLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?SoftmaxParameter_Engine_descriptor@caffe@@YAPBVEnumDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:__real@42480000")
#pragma comment(linker, "/include:?capacity@?$vector@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?type@?$SplitLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?set_has_eltwise_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?new_height@ImageDataParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?clone@?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$SPPLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?set_has_legacy_version@ContrastiveLossParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?max_size@?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?kSourceFieldNumber@ImageDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?Reshape@?$SoftmaxWithLossLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?lower_bound@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@2@ABU?$pair@HH@2@@Z")
#pragma comment(linker, "/include:??C?$shared_ptr@VCursor@db@caffe@@@boost@@QBEPAVCursor@db@caffe@@XZ")
#pragma comment(linker, "/include:?Backward_gpu@?$PowerLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VHingeLossParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVHingeLossParameter@caffe@@@Z")
#pragma comment(linker, "/include:?set_has_base@ExpParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?GetMetadata@LossParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VMemoryDataParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVMemoryDataParameter@caffe@@@Z")
#pragma comment(linker, "/include:?has_pad_h@ConvolutionParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?is_integral@?$integer_traits_base@E$0A@$0PP@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?a_x@?$br_mul@$00$00@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:?kOptionsFieldNumber@MethodDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VConcatParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVConcatParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$MVNLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$SilenceLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?ReadProtoFromTextFileOrDie@caffe@@YAXPBDPAVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R0?AVtoo_many_args@io@boost@@@8")
#pragma comment(linker, "/include:?descriptor@ImageDataParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R4?$PReLULayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??$construct@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@U12@@?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@QAEXPAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@1@$$QAU21@@Z")
#pragma comment(linker, "/include:?offset@?$Blob@M@caffe@@QBEHABV?$vector@HV?$allocator@H@std@@@std@@@Z")
#pragma comment(linker, "/include:??_C@_0CE@OACGLALE@There?5is?5no?5cv_img?5to?5in?5the?5vec@")
#pragma comment(linker, "/include:?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?value@?$is_member_function_pointer_impl@X@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_C@_0FE@EEOFCGIC@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?select_on_container_copy_construction@?$allocator_traits@V?$allocator@M@std@@@std@@SA?AV?$allocator@M@2@ABV32@@Z")
#pragma comment(linker, "/include:??_C@_0EN@HJLIIKHA@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??$construct@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@ABU1234@@?$allocator_traits@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@SAXAAV?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@1@PAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@ABU3456@@Z")
#pragma comment(linker, "/include:?base_lr@SolverParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:??_C@_0CE@BJHODFCE@layer_connection?4bottom_size?$CI?$CJ?5?$DN@")
#pragma comment(linker, "/include:??_C@_0CP@ILEMCBPE@label?5count?5?$CInumber?5of?5labels?$CJ?5m@")
#pragma comment(linker, "/include:__CT??_R0?AV?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@@8??0?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z76")
#pragma comment(linker, "/include:?gInstantiationGuardDummyDataLayer@caffe@@3DA")
#pragma comment(linker, "/include:?Clear@ReLUParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?allocate@?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@QAEPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@2@I@Z")
#pragma comment(linker, "/include:?a_y@?$br_mul@$00$0GE@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@2@0@Z")
#pragma comment(linker, "/include:?type@?$ArgMaxLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$DataTransformer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$SilenceLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?Forward_gpu@?$PowerLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@WindowDataParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??_R2_InputArray@cv@@8")
#pragma comment(linker, "/include:??_C@_0FG@MLJCKLLB@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??0?$stream_format_state@DU?$char_traits@D@std@@@detail@io@boost@@QAE@ABU0123@@Z")
#pragma comment(linker, "/include:??$?0V?$ConcatLayer@M@caffe@@@?$shared_ptr@V?$ConcatLayer@M@caffe@@@boost@@QAE@PAV?$ConcatLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$ConcatLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??_R2?$SilenceLayer@M@caffe@@8")
#pragma comment(linker, "/include:?LayerSetUp@?$ThresholdLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$?0V?$Blob@N@caffe@@@?$shared_ptr@V?$Blob@N@caffe@@@boost@@QAE@PAV?$Blob@N@caffe@@@Z")
#pragma comment(linker, "/include:??$forward@ABU?$pair@HH@std@@@std@@YAABU?$pair@HH@0@ABU10@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$EltwiseLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?SharedDtor@SolverState@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?InferBlobShape@?$DataTransformer@N@caffe@@QAE?AV?$vector@HV?$allocator@H@std@@@std@@ABVDatum@2@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$ArgMaxLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?descriptor@HDF5DataParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?resize@?$vector@_NV?$allocator@_N@std@@@std@@QAEXI_N@Z")
#pragma comment(linker, "/include:?_Freeheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:?exp@@YAMM@Z")
#pragma comment(linker, "/include:?set_has_accuracy_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Rechecked@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAU12@@std@@YAAAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@0@AAPAU10@PAU10@@Z")
#pragma comment(linker, "/include:??$?0V?$EltwiseLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$EltwiseLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$EuclideanLossLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@VCursor@db@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@MH@std@@@std@@@std@@QAEXPAU?$pair@MH@2@I@Z")
#pragma comment(linker, "/include:?ToProto@?$Net@M@caffe@@QBEXPAVNetParameter@2@_N@Z")
#pragma comment(linker, "/include:?kPoolFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?_Buynode0@?$_Tree_buy@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$DummyDataLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?_Tidy@?$vector@V?$shared_ptr@V?$Net@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:?Label_MIN@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Label@23@B")
#pragma comment(linker, "/include:?InitAsDefaultInstance@NetParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?descriptor@ArgMaxParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$checked_delete@V?$BNLLLayer@N@caffe@@@boost@@YAXPAV?$BNLLLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?gInstantiationGuardConvolutionLayer@caffe@@3DA")
#pragma comment(linker, "/include:??0?$RepeatedPtrField@VBlobProto@caffe@@@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:?mutable_mean_file@TransformationParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??$_Iter_cat@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_G?$SigmoidLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R2?$HingeLossLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_R0?AV?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:??_7exception@boost@@6B@")
#pragma comment(linker, "/include:?ABS_N@?$ratio@$00$0DOI@@boost@@0_JB")
#pragma comment(linker, "/include:??_C@_0BN@NJKHMAIJ@SGDSolver?3?5restoring?5history?$AA@")
#pragma comment(linker, "/include:??$CreateMaybeMessage@VLayerParameter@caffe@@@Arena@protobuf@google@@CAPAVLayerParameter@caffe@@PAV012@ZZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@@8")
#pragma comment(linker, "/include:?Forward_cpu@?$TanHLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$_Buynode_if_nil@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@1@PAU21@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@@Z")
#pragma comment(linker, "/include:??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??_C@_0CN@LOHAMCOO@Unknown?5parameter?5kernelsize?5for@")
#pragma comment(linker, "/include:?GetMetadata@NetState@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R3SliceParameter@caffe@@8")
#pragma comment(linker, "/include:?ByteSize@NetState@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?diff_at@?$Blob@M@caffe@@QBEMABV?$vector@HV?$allocator@H@std@@@std@@@Z")
#pragma comment(linker, "/include:?construct@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Net@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?scale@ImageDataParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?value@?$integral_constant@I$03@std@@2IB")
#pragma comment(linker, "/include:?has_batch_size@ImageDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?gInstantiationGuardSolver@caffe@@3DA")
#pragma comment(linker, "/include:??$destroy@V?$vector@HV?$allocator@H@std@@@std@@@?$_Wrap_alloc@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@std@@QAEXPAV?$vector@HV?$allocator@H@std@@@1@@Z")
#pragma comment(linker, "/include:?ref@?$ptr_helper@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@detail@random@boost@@SAAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@34@PAV534@@Z")
#pragma comment(linker, "/include:?phase@LayerParameter@caffe@@QBE?AW4Phase@2@XZ")
#pragma comment(linker, "/include:??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@?$unit_normal_distribution@M@detail@random@boost@@QAEMAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@23@@Z")
#pragma comment(linker, "/include:??_R3?$ExpLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_R3?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$ThresholdLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_C@_08EEGEOCFC@gaussian?$AA@")
#pragma comment(linker, "/include:?test_interval@SolverParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?MergeFrom@SolverParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$FlattenLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@HH@std@@@1@@Z")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$ArgMaxLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?set_has_window_data_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R4?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:?width@DummyDataParameter@caffe@@QBEIH@Z")
#pragma comment(linker, "/include:?hdf5_data_param@V1LayerParameter@caffe@@QBEABVHDF5DataParameter@2@XZ")
#pragma comment(linker, "/include:??_R2bad_alloc@std@@8")
#pragma comment(linker, "/include:?MergeFrom@EltwiseParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?_Min@?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??_7DummyDataParameter@caffe@@6B@")
#pragma comment(linker, "/include:?_Inside@?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@IBE_NPBQAV?$Blob@N@caffe@@@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$PowerLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?clear@?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:??R?$subtract@I$0A@@detail@rand@boost@@QAEIII@Z")
#pragma comment(linker, "/include:??_7?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@6Bbad_alloc@std@@@")
#pragma comment(linker, "/include:?sig_bits_fast@?$low_bits_mask_t@$0CA@@boost@@2IB")
#pragma comment(linker, "/include:?MergeFrom@ContrastiveLossParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??0?$group1@U?$group2@U?$_Smanip@_J@std@@ABN@detail@io@boost@@@detail@io@boost@@QAE@U?$group2@U?$_Smanip@_J@std@@ABN@123@@Z")
#pragma comment(linker, "/include:?slice_point@SliceParameter@caffe@@QBEABV?$RepeatedField@I@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R4?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@6Bbad_month@gregorian@2@@")
#pragma comment(linker, "/include:?MergeFrom@ReductionParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??0shared_count@detail@boost@@QAE@XZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$DummyDataLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_C@_0BF@MOFHAAHG@Check?5failed?3?5diff_?5?$AA@")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEXXZ")
#pragma comment(linker, "/include:??_GEltwiseParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?GetCachedSize@PowerParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$construct@U?$pair@MH@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@MH@std@@@std@@@std@@QAEXPAU?$pair@MH@1@$$QAU21@@Z")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@U?$pair@MH@std@@V?$allocator@U?$pair@MH@std@@@2@@std@@IBEXPAU?$pair@MH@2@0@Z")
#pragma comment(linker, "/include:?value@?$arg@$01@mpl@boost@@2HB")
#pragma comment(linker, "/include:?ExpectTagFromArray@CodedInputStream@io@protobuf@google@@SAPBEPBEI@Z")
#pragma comment(linker, "/include:??$?0V?$DataLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$DataLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAPAV?$FlattenLayer@M@caffe@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@@std@@YAPAPAV?$FlattenLayer@M@caffe@@PAPAV12@00AAU?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_C@_0CD@IDNMFMKP@Incorrect?5length?5of?5history?5blob@")
#pragma comment(linker, "/include:??$generate_tail@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@?$unit_normal_distribution@M@detail@random@boost@@QAEMAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@23@@Z")
#pragma comment(linker, "/include:?data@Datum@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?mutable_snapshot_prefix@SolverParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?swap@?$shared_ptr@V?$Blob@N@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:??0handle_manager@win32@detail@boost@@QAE@XZ")
#pragma comment(linker, "/include:?value@?$integral_constant@_N$0A@@internal@protobuf@google@@2_NB")
#pragma comment(linker, "/include:??$_Val_type@PAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@YAPAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@0@PAU10@@Z")
#pragma comment(linker, "/include:?set_has_axis@ReshapeParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@std@@QAEXPAV?$vector@_NV?$allocator@_N@std@@@2@I@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$ReshapeLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?_Grow_to@?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@IBEII@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$PowerLayer@M@caffe@@@boost@@YAXPAV?$PowerLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?value@?$is_function_impl@Urandom_access_traversal_tag@iterators@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?Reshape@?$DummyDataLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$?0V?$SliceLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$SliceLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_R0?AVDatum@caffe@@@8")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$Net@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$_Unchecked@PAV?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Net@N@caffe@@@boost@@PAV12@@Z")
#pragma comment(linker, "/include:??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??$?0V?$SplitLayer@M@caffe@@@?$shared_ptr@V?$SplitLayer@M@caffe@@@boost@@QAE@PAV?$SplitLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$LRNLayer@M@caffe@@8")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@@std@@@std@@YAXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?kStartFieldNumber@DescriptorProto_ExtensionRange@protobuf@google@@2HB")
#pragma comment(linker, "/include:?construct@?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@QAEXPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@2@@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@BlobProtoVector@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$MemoryDataLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??0?$time_duration@V0posix_time@boost@@V?$time_resolution_traits@Utime_resolution_traits_adapted64_impl@date_time@boost@@$04$0PECEA@$05H@date_time@2@@date_time@boost@@QAE@ABV012@@Z")
#pragma comment(linker, "/include:?kOneofDeclFieldNumber@DescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??$cast@VTypeHandler@?$RepeatedPtrField@VFillerParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@CAPAVFillerParameter@caffe@@PAX@Z")
#pragma comment(linker, "/include:?const_max@?$integer_traits_base@E$0A@$0PP@@detail@boost@@2EB")
#pragma comment(linker, "/include:?_Ufill@?$vector@IV?$allocator@_N@std@@@std@@IAEPAIPAIIPBI@Z")
#pragma comment(linker, "/include:??_C@_08GOCIFDDJ@fd?5?$CB?$DN?5?91?$AA@")
#pragma comment(linker, "/include:??_R0?AV?$SplitLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?threshold_param@V1LayerParameter@caffe@@QBEABVThresholdParameter@2@XZ")
#pragma comment(linker, "/include:?construct@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?Clear@ReductionParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEXXZ")
#pragma comment(linker, "/include:?min@FillerParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?min_exponent10@?$numeric_limits@N@std@@2HB")
#pragma comment(linker, "/include:?push_back@?$vector@PAV?$FlattenLayer@N@caffe@@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@QAEX$$QAPAV?$FlattenLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?set_has_net@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R3?$ReshapeLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$_Rechecked@PAU?$pair@MH@std@@PAU12@@std@@YAAAPAU?$pair@MH@0@AAPAU10@PAU10@@Z")
#pragma comment(linker, "/include:?add_data@BlobProto@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$PoolingLayer@N@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@1@PAV?$PoolingLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$Im2colLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?const_max@?$integer_traits_base@I$0A@$0PPPPPPPP@@detail@boost@@2IB")
#pragma comment(linker, "/include:?set_label@Datum@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?push_back@?$vector@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@QAEX$$QAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@2@@Z")
#pragma comment(linker, "/include:??$min_value@N@tools@math@boost@@YANXZ")
#pragma comment(linker, "/include:??_R3?$DeconvolutionLayer@M@caffe@@8")
#pragma comment(linker, "/include:?create_time@?$microsec_clock@Vptime@posix_time@boost@@@date_time@boost@@CA?AVptime@posix_time@3@P6APAUtm@@PB_JPAU6@@Z@Z")
#pragma comment(linker, "/include:?LABEL_REQUIRED@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Label@23@B")
#pragma comment(linker, "/include:??_C@_0BD@CKPKJNNE@pad_w_?5?$DM?5kernel_w_?$AA@")
#pragma comment(linker, "/include:?SetCachedSize@ConvolutionParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z")
#pragma comment(linker, "/include:??1?$AbsValLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R4error_category@std@@6B@")
#pragma comment(linker, "/include:??0TransformationParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?clear@?$_Tree@V?$_Tmap_traits@PBXUtss_data_node@detail@boost@@U?$less@PBX@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@5@$0A@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:??A?$map@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@@std@@QAEAAHABU?$pair@HH@1@@Z")
#pragma comment(linker, "/include:?output_b@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@2IB")
#pragma comment(linker, "/include:??_R2?$MemoryDataLayer@M@caffe@@8")
#pragma comment(linker, "/include:?kTagTypeMask@WireFormatLite@internal@protobuf@google@@2IB")
#pragma comment(linker, "/include:??_R2?$SoftmaxLayer@M@caffe@@8")
#pragma comment(linker, "/include:??1?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@IBEXPAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@SigmoidParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$?0HAAHX@?$pair@HH@std@@QAE@$$QAHAAH@Z")
#pragma comment(linker, "/include:?mutable_argmax_param@V1LayerParameter@caffe@@QAEPAVArgMaxParameter@2@XZ")
#pragma comment(linker, "/include:?WriteTagToArray@WireFormatLite@internal@protobuf@google@@SAPAEHW4WireType@1234@PAE@Z")
#pragma comment(linker, "/include:?Clear@InfogainLossParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?params_weight_decay@?$Net@M@caffe@@QBEABV?$vector@MV?$allocator@M@std@@@std@@XZ")
#pragma comment(linker, "/include:??$ReadPrimitive@_J$02@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PA_J@Z")
#pragma comment(linker, "/include:?allocate@?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@QAEPAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?get@?$shared_ptr@VCaffe@caffe@@@boost@@QBEPAVCaffe@caffe@@XZ")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??$Creator_SplitLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??_R3?$SliceLayer@N@caffe@@8")
#pragma comment(linker, "/include:?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ")
#pragma comment(linker, "/include:??_7?$MVNLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?set_has_det_fg_threshold@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??1?$vector@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R0?AVSoftmaxParameter@caffe@@@8")
#pragma comment(linker, "/include:?SOFTMAX@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$InfogainLossLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$_Unchecked@PAPAV?$Blob@N@caffe@@@std@@YAPAPAV?$Blob@N@caffe@@PAPAV12@@Z")
#pragma comment(linker, "/include:?LRN@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R4?$ContrastiveLossLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@QAEXPAPAV?$FlattenLayer@N@caffe@@I@Z")
#pragma comment(linker, "/include:?has_signaling_NaN@_Num_float_base@std@@2_NB")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$DataTransformer@N@caffe@@@detail@boost@@QAE@PAV?$DataTransformer@N@caffe@@@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$ConcatLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$LRNLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$_Allocate@V?$vector@MV?$allocator@M@std@@@std@@@std@@YAPAV?$vector@MV?$allocator@M@std@@@0@IPAV10@@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$SoftmaxLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@1@@Z")
#pragma comment(linker, "/include:?clear@?$vector@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:??_C@_0BJ@EJEONFNG@There?5is?5no?5datum?5to?5add?$AA@")
#pragma comment(linker, "/include:??$addressof@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@YAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@0@AAU10@@Z")
#pragma comment(linker, "/include:??1?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@UAE@XZ")
#pragma comment(linker, "/include:?mutable_slice_param@V1LayerParameter@caffe@@QAEPAVSliceParameter@2@XZ")
#pragma comment(linker, "/include:?kSolverModeFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:??1?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??$_Uninitialized_fill_n@PANINU?$_Wrap_alloc@V?$allocator@N@std@@@std@@@std@@YAXPANIPBNAAU?$_Wrap_alloc@V?$allocator@N@std@@@0@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$ArgMaxLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@$$QAU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$SigmoidLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?kDataFillerFieldNumber@DummyDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?MergeFrom@WindowDataParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?POOLING@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:?Label_ARRAYSIZE@FieldDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??$?0V?$SoftmaxLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$SoftmaxLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:?num_inputs@?$Net@M@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??0?$ConcatLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?argmax_param@LayerParameter@caffe@@QBEABVArgMaxParameter@2@XZ")
#pragma comment(linker, "/include:?set_engine@SPPParameter@caffe@@QAEXW4SPPParameter_Engine@2@@Z")
#pragma comment(linker, "/include:?bottom_vecs@?$Net@M@caffe@@QBEABV?$vector@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@XZ")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@V?$vector@HV?$allocator@H@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?InternalThreadEntry@?$WindowDataLayer@M@caffe@@MAEXXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$ReLULayer@N@caffe@@8")
#pragma comment(linker, "/include:?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$BNLLLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?New@FillerParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?Capacity@?$RepeatedField@H@protobuf@google@@QBEHXZ")
#pragma comment(linker, "/include:?max_digits10@_Num_base@std@@2HB")
#pragma comment(linker, "/include:?_Xlen@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@IBEXXZ")
#pragma comment(linker, "/include:?set_has_exp_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?input_size@NetParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??_C@_0FJ@HPBNKMLA@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$SplitLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$SplitLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?kPadWFieldNumber@PoolingParameter@caffe@@2HB")
#pragma comment(linker, "/include:?min@?$int_adapter@_J@date_time@boost@@SA?AV123@XZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$TanHLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?MinBottomBlobs@?$SilenceLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?_Inside@?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@IBE_NPBV?$shared_ptr@V?$Blob@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??_R2?$DataLayer@N@caffe@@8")
#pragma comment(linker, "/include:?source@DataParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??$_Distance2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@XZ")
#pragma comment(linker, "/include:??$ReadPackedFixedSizePrimitive@M$01@WireFormatLite@internal@protobuf@google@@CA_NPAVCodedInputStream@io@23@PAV?$RepeatedField@M@23@@Z")
#pragma comment(linker, "/include:?LegacyShape@?$Blob@I@caffe@@QBEHH@Z")
#pragma comment(linker, "/include:??_R0?AVMemoryDataParameter@caffe@@@8")
#pragma comment(linker, "/include:??_C@_0BI@FFLNGNPF@MultinomialLogisticLoss?$AA@")
#pragma comment(linker, "/include:?is_signed@?$numeric_limits@H@std@@2_NB")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$MVNLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$SigmoidLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@VLayerParameter@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?engine@SoftmaxParameter@caffe@@QBE?AW4SoftmaxParameter_Engine@2@XZ")
#pragma comment(linker, "/include:__TI9?AV?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$PReLULayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:??1out_of_range@std@@UAE@XZ")
#pragma comment(linker, "/include:??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z")
#pragma comment(linker, "/include:??$?0V?$BNLLLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$BNLLLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??0?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@std@@QAE@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:?MergeFrom@ReductionParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??0ReshapeParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$WindowDataLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$EuclideanLossLayer@N@caffe@@8")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$PoolingLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_R2?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??$ReadPrimitive@_N$07@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PA_N@Z")
#pragma comment(linker, "/include:??0?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??1?$shared_ptr@$$CBVclone_base@exception_detail@boost@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?set_has_engine@SPPParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R2?$XavierFiller@N@caffe@@8")
#pragma comment(linker, "/include:?height@MemoryDataParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?deallocate@?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?is_special@?$int_adapter@_J@date_time@boost@@QBE_NXZ")
#pragma comment(linker, "/include:??$?0V?$PoolingLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$PoolingLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$DummyDataLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?CaffeFreeHost@caffe@@YAXPAX@Z")
#pragma comment(linker, "/include:?value@?$trait_impl@V?$basic_istream@DU?$char_traits@D@std@@@std@@FUdont_care@has_right_shift_impl@detail@boost@@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:?none@?$_Locbase@H@std@@2HB")
#pragma comment(linker, "/include:?SetCachedSize@InfogainLossParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?InternalSwap@?$RepeatedField@_N@protobuf@google@@AAEXPAV123@@Z")
#pragma comment(linker, "/include:??$forward@_N@std@@YA$$QA_NAA_N@Z")
#pragma comment(linker, "/include:?value@?$enable_binary_hash@N$0HB@$0EAAA@@hash_detail@boost@@2_NB")
#pragma comment(linker, "/include:??1?$vector@_NV?$allocator@_N@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?Forward_gpu@?$SoftmaxLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?CopyFrom@SolverState@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?set_cpu_data@SyncedMemory@caffe@@QAEXPAX@Z")
#pragma comment(linker, "/include:?default_instance_@ReshapeParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?LABEL_REPEATED@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Label@23@B")
#pragma comment(linker, "/include:?MergeFrom@ReshapeParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@ABV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@ABV34@@Z")
#pragma comment(linker, "/include:??_R0?AV?$Filler@N@caffe@@@8")
#pragma comment(linker, "/include:??1?$shared_ptr@VGenerator@RNG@Caffe@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??$construct@PAV?$Blob@N@caffe@@AAPAV12@@?$allocator@PAV?$Blob@N@caffe@@@std@@QAEXPAPAV?$Blob@N@caffe@@AAPAV23@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$basic_fstream@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:??$caffe_scal@N@caffe@@YAXHNPAN@Z")
#pragma comment(linker, "/include:??$addressof@PAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@0@AAPAU10@@Z")
#pragma comment(linker, "/include:?train_state@SolverParameter@caffe@@QBEABVNetState@2@XZ")
#pragma comment(linker, "/include:?value@?$is_arithmetic_impl@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$_Ptr_cat@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@0@Z")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@QAEXPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@2@I@Z")
#pragma comment(linker, "/include:?SharedCtor@PReLUParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?has_alpha@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?Swap@SliceParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??_R0?AV?$MVNLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?CopyArray@?$RepeatedField@I@protobuf@google@@AAEXPAIPBIH@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$FlattenLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@HH@std@@@std@@@std@@@std@@YAXPAU?$pair@HH@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@HH@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?value@?$is_arithmetic_impl@$$CBI@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$MergeFromInnerLoop@VTypeHandler@?$RepeatedPtrField@VBlobShape@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@AAEXPAPAX0HH@Z")
#pragma comment(linker, "/include:?ShareData@?$Blob@M@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??_GMVNParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??1?$WindowDataLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??1ConcatParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?Swap@SolverState@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBE?AU?$less@H@2@XZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$InnerProductLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R4?$SliceLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$InnerProductLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??$ReadRepeatedPrimitive@H$04@WireFormatLite@internal@protobuf@google@@SA_NHIPAVCodedInputStream@io@23@PAV?$RepeatedField@H@23@@Z")
#pragma comment(linker, "/include:??$_Uninit_move@HHH@std@@YAPAHPAH00AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?descriptor@BlobProto@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$destroy@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@QBXUtss_data_node@detail@boost@@@1@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$AbsValLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??0?$vector@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$SplitLayer@N@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@V?$SplitLayer@N@caffe@@@1@PAV?$SplitLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??$_Iter_cat@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$MultinomialLogisticLossLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$MultinomialLogisticLossLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?_Destroy@?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@IAEXPAPAV?$Blob@M@caffe@@0@Z")
#pragma comment(linker, "/include:??$_Uninitialized_default_fill_n@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@IU?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@2@@std@@YAXPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?set_has_sigmoid_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$ImageDataLayer@M@caffe@@@detail@boost@@QAE@PAV?$ImageDataLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_7too_many_args@io@boost@@6B@")
#pragma comment(linker, "/include:??$_Uninitialized_copy@PBDPADU?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAPADPBD0PADAAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z")
#pragma comment(linker, "/include:?clear@?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$Net@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_R2?$FilterLayer@M@caffe@@8")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VSPPParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVSPPParameter@caffe@@@Z")
#pragma comment(linker, "/include:??0?$BilinearFiller@N@caffe@@QAE@ABVFillerParameter@1@@Z")
#pragma comment(linker, "/include:?has_bias_term@InnerProductParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?is_signed@?$numeric_limits@D@std@@2_NB")
#pragma comment(linker, "/include:?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@V1LayerParameter@caffe@@8")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$FilterLayer@M@caffe@@@detail@boost@@QAE@PAV?$FilterLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_R2?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??$destroy@VNetParameter@caffe@@@?$allocator_traits@V?$allocator@VNetParameter@caffe@@@std@@@std@@SAXAAV?$allocator@VNetParameter@caffe@@@1@PAVNetParameter@caffe@@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@VCaffe@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??1?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?Clear@?$RepeatedPtrField@VNetParameter@caffe@@@protobuf@google@@QAEXXZ")
#pragma comment(linker, "/include:?Reshape@?$Net@M@caffe@@QAEXXZ")
#pragma comment(linker, "/include:??_R2?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??_C@_0CH@NKHCCPNI@Check?5failed?3?5cv_img?4depth?$CI?$CJ?5?$DN?$DN?5@")
#pragma comment(linker, "/include:??$checked_delete@V?$TanHLayer@N@caffe@@@boost@@YAXPAV?$TanHLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?_Inside@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@IBE_NPBV?$vector@MV?$allocator@M@std@@@2@@Z")
#pragma comment(linker, "/include:?set_has_pool@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R4thread_resource_error@boost@@6B@")
#pragma comment(linker, "/include:?coeff_size@EltwiseParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??4?$pair@NH@std@@QAEAAU01@$$QAU01@@Z")
#pragma comment(linker, "/include:?WriteTag@CodedOutputStream@io@protobuf@google@@QAEXI@Z")
#pragma comment(linker, "/include:??$Own@VLRNParameter@caffe@@@Arena@protobuf@google@@QAEXPAVLRNParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_R4format_error@io@boost@@6B@")
#pragma comment(linker, "/include:?GetArenaNoVirtual@?$RepeatedPtrField@VBlobProto@caffe@@@protobuf@google@@IBEPAVArena@23@XZ")
#pragma comment(linker, "/include:?kAxisFieldNumber@ReductionParameter@caffe@@2HB")
#pragma comment(linker, "/include:?CopyTrainedLayersFrom@?$Net@N@caffe@@QAEXABVNetParameter@2@@Z")
#pragma comment(linker, "/include:?kBatchSizeFieldNumber@HDF5DataParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$?0ABH@?$_Tuple_val@ABH@std@@QAE@ABH@Z")
#pragma comment(linker, "/include:?_Tidy@?$vector@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@IAEXXZ")
#pragma comment(linker, "/include:?mask_bits@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@2IB")
#pragma comment(linker, "/include:?mutable_unknown_fields@BlobShape@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?unknown_fields@SolverParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$Own@VMVNParameter@caffe@@@Arena@protobuf@google@@QAEXPAVMVNParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_7?$EltwiseLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?across_channels@MVNParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?set_has_engine@ReLUParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@QAE@ABUbad_alloc_@12@@Z")
#pragma comment(linker, "/include:??$?0V?$FlattenLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$FlattenLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@AAPAU31@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$AccuracyLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:??0?$shared_ptr@VSyncedMemory@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??_R4?$ReductionLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??_R2?$Filler@N@caffe@@8")
#pragma comment(linker, "/include:?has_det_context_pad@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$checked_delete@V?$BNLLLayer@M@caffe@@@boost@@YAXPAV?$BNLLLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?e@?$exception_ptr_static_exception_object@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@2Vexception_ptr@3@B")
#pragma comment(linker, "/include:?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?max_level@NetStateRule@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@QBE?AU?$less@H@2@XZ")
#pragma comment(linker, "/include:?kNegativeIntValueFieldNumber@UninterpretedOption@protobuf@google@@2HB")
#pragma comment(linker, "/include:??$checked_delete@V?$Net@M@caffe@@@boost@@YAXPAV?$Net@M@caffe@@@Z")
#pragma comment(linker, "/include:?value@?$sign_wknd@_J$00@aux@mpl@boost@@2_JB")
#pragma comment(linker, "/include:??C?$shared_ptr@V?$DataTransformer@M@caffe@@@boost@@QBEPAV?$DataTransformer@M@caffe@@XZ")
#pragma comment(linker, "/include:?LayerSetUp@?$SliceLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PA_J@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$ContrastiveLossLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_C@_0BL@DFAAPMEO@Memory?5required?5for?5data?3?5?$AA@")
#pragma comment(linker, "/include:?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?type@?$PReLULayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??$addressof@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@0@AAPAU10@@Z")
#pragma comment(linker, "/include:?set_has_stable_prod_grad@EltwiseParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R2?$AccuracyLayer@M@caffe@@8")
#pragma comment(linker, "/include:?DummyDataParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$HingeLossLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?Truncate@?$RepeatedField@M@protobuf@google@@QAEXH@Z")
#pragma comment(linker, "/include:?value@?$integral_c@_J$0DLJKMKAA@@mpl@boost@@2_JB")
#pragma comment(linker, "/include:?deallocate@?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@QAEXPAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@2@I@Z")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:??_7?$AbsValLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?Forward_cpu@?$ArgMaxLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?default_instance@LRNParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??1?$_Tree_comp@$0A@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_G?$PReLULayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?test_net_param@SolverParameter@caffe@@QBEABVNetParameter@2@H@Z")
#pragma comment(linker, "/include:__CTA8?AV?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@@std@@YAPAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?RELU@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??H?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE?AV01@H@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$HingeLossLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?value@?$is_base_of_imp@Vexception@std@@Ubad_weekday@gregorian@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$_Unchecked@V?$_Vector_val@U?$_Simple_types@U?$pair@MH@std@@@std@@@std@@@std@@YAPAU?$pair@MH@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MH@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?ShapeEquals@?$Blob@M@caffe@@QAE_NABVBlobProto@2@@Z")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@TransformationParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$construct@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@$$$V@?$allocator_traits@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@1@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@1@@Z")
#pragma comment(linker, "/include:??_7?$SoftmaxWithLossLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?SetCachedSize@MemoryDataParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?default_instance@DataParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:?ByteSize@V0LayerParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$Creator_LogLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$MemoryDataLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R0?AVExpParameter@caffe@@@8")
#pragma comment(linker, "/include:?Clear@?$RepeatedPtrField@VNetState@caffe@@@protobuf@google@@QAEXXZ")
#pragma comment(linker, "/include:??1NetParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$_Uninit_def_fill_n@PAV?$vector@HV?$allocator@H@std@@@std@@IV?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@V12@@std@@YAXPAV?$vector@HV?$allocator@H@std@@@0@IAAU?$_Wrap_alloc@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?backward_cpu_bias@?$BaseConvolutionLayer@N@caffe@@IAEXPANPBN@Z")
#pragma comment(linker, "/include:?engine@?$variate_generator@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@V?$uniform_real@M@3@@random@boost@@QAEAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@23@XZ")
#pragma comment(linker, "/include:??_R0?AV?$MultinomialLogisticLossLayer@M@caffe@@@8")
#pragma comment(linker, "/include:??_7?$ImageDataLayer@M@caffe@@6B?$BaseDataLayer@M@1@@")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$PoolingLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?AppendTop@?$Net@M@caffe@@IAEXABVNetParameter@2@HHPAV?$set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@5@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$EuclideanLossLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?min@?$simple_exception_policy@G$0FHI@$0CHBA@Ubad_year@gregorian@boost@@@CV@boost@@SAGXZ")
#pragma comment(linker, "/include:??0?$Blob@N@caffe@@QAE@HHHH@Z")
#pragma comment(linker, "/include:?vdLn@@YAXHPBNPAN@Z")
#pragma comment(linker, "/include:??_C@_0CN@LIHLGBHD@Unknown?5parameter?5num_output?5for@")
#pragma comment(linker, "/include:?SharedCtor@ReductionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?set_has_crop_mode@WindowDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$map@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??1?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z")
#pragma comment(linker, "/include:?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B")
#pragma comment(linker, "/include:??_C@_0FL@DKPHNOIC@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??_R4?$PoolingLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??$?0V?$ConcatLayer@N@caffe@@@?$shared_ptr@V?$ConcatLayer@N@caffe@@@boost@@QAE@PAV?$ConcatLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_R4?$BasePrefetchingDataLayer@M@caffe@@6BInternalThread@1@@")
#pragma comment(linker, "/include:??_C@_0BH@JKPNFEOF@start?5?$DM?5layers_?4size?$CI?$CJ?$AA@")
#pragma comment(linker, "/include:??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:?set_has_source@InfogainLossParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$LRNLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$LogLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$_Rechecked@PAHPAH@std@@YAAAPAHAAPAHPAH@Z")
#pragma comment(linker, "/include:?mutable_train_net@SolverParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?mean_file@ImageDataParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAU?$pair@HH@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@HH@std@@@std@@@2@@std@@YAPAU?$pair@HH@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@HH@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??1HDF5OutputParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?history@?$SGDSolver@M@caffe@@QAEABV?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@XZ")
#pragma comment(linker, "/include:??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$FlattenLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??$append_string@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@io@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV34@II@Z")
#pragma comment(linker, "/include:?enum_type@Descriptor@protobuf@google@@QBEPBVEnumDescriptor@23@H@Z")
#pragma comment(linker, "/include:?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@2@0@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@$$QAV23@@Z")
#pragma comment(linker, "/include:?value@?$int_@$03@mpl@boost@@2HB")
#pragma comment(linker, "/include:??_C@_0BA@GCJDCIPP@ContrastiveLoss?$AA@")
#pragma comment(linker, "/include:?mutable_num@DummyDataParameter@caffe@@QAEPAV?$RepeatedField@I@protobuf@google@@XZ")
#pragma comment(linker, "/include:_powf")
#pragma comment(linker, "/include:?gInstantiationGuardTanHLayer@caffe@@3DA")
#pragma comment(linker, "/include:?kNormalizeVarianceFieldNumber@MVNParameter@caffe@@2HB")
#pragma comment(linker, "/include:??0?$arg@$06@boost@@QAE@XZ")
#pragma comment(linker, "/include:?SharedDtor@ConcatParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$ReLULayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?has_power@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?max_size@?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??0?$MSRAFiller@M@caffe@@QAE@ABVFillerParameter@1@@Z")
#pragma comment(linker, "/include:?function@?1???$float_prior_imp@NU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@math@boost@@@detail@math@boost@@YANABNABU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@23@@Z@4PBDB")
#pragma comment(linker, "/include:?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$SilenceLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$OwnInternal@VDataParameter@caffe@@@Arena@protobuf@google@@AAEXPAVDataParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?_Ufill@?$vector@MV?$allocator@M@std@@@std@@IAEPAMPAMIPBM@Z")
#pragma comment(linker, "/include:?nan@?$br_mul@$00$0PECEA@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@1@@Z")
#pragma comment(linker, "/include:__CT??_R0?AV?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@@8??0?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z44")
#pragma comment(linker, "/include:??$caffe_sign@M@caffe@@YACM@Z")
#pragma comment(linker, "/include:?_Make_iter@?$vector@IV?$allocator@_N@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@@Z")
#pragma comment(linker, "/include:??_C@_04OFMADDDJ@jpeg?$AA@")
#pragma comment(linker, "/include:??_R3HDF5OutputParameter@caffe@@8")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@SPPParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??_C@_0P@GHFPNOJB@bad?5allocation?$AA@")
#pragma comment(linker, "/include:?LayerSetUp@?$InnerProductLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?kBlobsLrFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?batch_size@HDF5DataParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??$reset@V?$DataTransformer@M@caffe@@@?$shared_ptr@V?$DataTransformer@M@caffe@@@boost@@QAEXPAV?$DataTransformer@M@caffe@@@Z")
#pragma comment(linker, "/include:?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDH@2@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$ReshapeLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$MakeCheckOpValueString@PAV?$Blob@M@caffe@@@google@@YAXPAV?$basic_ostream@DU?$char_traits@D@std@@@std@@ABQAV?$Blob@M@caffe@@@Z")
#pragma comment(linker, "/include:?SharedCtor@ReshapeParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?is_signed@?$numeric_limits@E@std@@2_NB")
#pragma comment(linker, "/include:??_R2ios_base@std@@8")
#pragma comment(linker, "/include:?clear@?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:??_7SolverParameter@caffe@@6B@")
#pragma comment(linker, "/include:?MergeFrom@PythonParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?value@?$integral_c@_J$0PECEA@@mpl@boost@@2_JB")
#pragma comment(linker, "/include:??1?$stream_format_state@DU?$char_traits@D@std@@@detail@io@boost@@QAE@XZ")
#pragma comment(linker, "/include:?is_integral@?$integer_traits_base@H$0?IAAAAAAA@$0HPPPPPPP@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??0?$vector@MV?$allocator@M@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?descriptor@SolverState@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R2?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?sig_bits@?$low_bits_mask_t@$0EA@@boost@@2_KB")
#pragma comment(linker, "/include:?mutable_weight_filler@ConvolutionParameter@caffe@@QAEPAVFillerParameter@2@XZ")
#pragma comment(linker, "/include:??$?0V?$MVNLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$MVNLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??E?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??_C@_01IPJKGB@?$CD?$AA@")
#pragma comment(linker, "/include:??_R2?$SPPLayer@M@caffe@@8")
#pragma comment(linker, "/include:??$_Uninitialized_default_fill_n@PAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@IU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@IAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$thread_data@V?$bind_t@XV?$mf0@XVInternalThread@caffe@@@_mfi@boost@@V?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@3@@_bi@boost@@@detail@boost@@8")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$BNLLLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PA_K@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_C@_0O@EGIOMNCP@kernel_h_?5?$DO?50?$AA@")
#pragma comment(linker, "/include:?select_on_container_copy_construction@?$allocator_traits@V?$allocator@H@std@@@std@@SA?AV?$allocator@H@2@ABV32@@Z")
#pragma comment(linker, "/include:?has_reduction_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?InferBlobShape@?$DataTransformer@N@caffe@@QAE?AV?$vector@HV?$allocator@H@std@@@std@@ABVMat@cv@@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$InnerProductLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$ConvolutionLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$PoolingLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_C@_0BB@DMLMCKDB@Check?5failed?3?5y?5?$AA@")
#pragma comment(linker, "/include:?value@?$int_@$0BI@@mpl@boost@@2HB")
#pragma comment(linker, "/include:??1thread_resource_error@boost@@UAE@XZ")
#pragma comment(linker, "/include:?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$TanHLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?output_c@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@2IB")
#pragma comment(linker, "/include:?set_has_dropout_ratio@DropoutParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?Reshape@?$SliceLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VContrastiveLossParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVContrastiveLossParameter@caffe@@@Z")
#pragma comment(linker, "/include:?diff@?$Blob@N@caffe@@QBEABV?$shared_ptr@VSyncedMemory@caffe@@@boost@@XZ")
#pragma comment(linker, "/include:??$_Uninitialized_default_fill_n@PAV?$shared_ptr@V?$Net@M@caffe@@@boost@@IU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$Net@M@caffe@@@boost@@IAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@2@@Z")
#pragma comment(linker, "/include:??_R4ConvolutionParameter@caffe@@6B@")
#pragma comment(linker, "/include:?New@BlobProto@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_7bad_day_of_month@gregorian@boost@@6B@")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@MVNParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?tempering_s@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@2IB")
#pragma comment(linker, "/include:??$float_next_imp@MU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@math@boost@@@detail@math@boost@@YAMABMABU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@12@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$ReLULayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?size@?$RepeatedPtrField@VBlobShape@caffe@@@protobuf@google@@QBEHXZ")
#pragma comment(linker, "/include:?has_biasterm@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PAUoptional_tag@optional_detail@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?significand@?$fp_traits_non_native@OUextended_double_precision@detail@math@boost@@@detail@math@boost@@2IB")
#pragma comment(linker, "/include:??_G?$InnerProductLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?_Reallocate@?$vector@U?$pair@MH@std@@V?$allocator@U?$pair@MH@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??0?$BaseConvolutionLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?reset@?$stream_format_state@DU?$char_traits@D@std@@@detail@io@boost@@QAEXD@Z")
#pragma comment(linker, "/include:?has_cropsize@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@VCursor@db@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?kPythonParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?Swap@EltwiseParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??0?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVLRNParameter@caffe@@@internal@protobuf@google@@YAPBVLRNParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:??_7?$Layer@M@caffe@@6B@")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$LogLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@2@@std@@YAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?MergeFrom@LayerParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_C@_0BM@NJJBIGLI@MaxTopBlobs?$CI?$CJ?5?$DO?$DN?5top?4size?$CI?$CJ?$AA@")
#pragma comment(linker, "/include:?shape@ReshapeParameter@caffe@@QBEABVBlobShape@2@XZ")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@PAV?$FlattenLayer@N@caffe@@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_C@_0FB@INHELAAE@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??$?9HV?$allocator@H@std@@@std@@YA_NABV?$vector@HV?$allocator@H@std@@@0@0@Z")
#pragma comment(linker, "/include:??0?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@boost@@QAE@V?$value@PAVInternalThread@caffe@@@12@@Z")
#pragma comment(linker, "/include:??$sort_heap@PAU?$pair@NH@std@@U?$greater@U?$pair@NH@std@@@2@@std@@YAXPAU?$pair@NH@0@0U?$greater@U?$pair@NH@std@@@0@@Z")
#pragma comment(linker, "/include:?Delete@?$GenericTypeHandler@VV1LayerParameter@caffe@@@internal@protobuf@google@@SAXPAVV1LayerParameter@caffe@@PAVArena@34@@Z")
#pragma comment(linker, "/include:?kDropoutRatioFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?modulus@?$linear_congruential_engine@_K$0FNOOMOGGN@$0L@$0BAAAAAAAAAAAA@@random@boost@@2_KB")
#pragma comment(linker, "/include:?_Freenode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_C@_0BH@DNBLFAJE@input_height?5?$DN?$DN?5height?$AA@")
#pragma comment(linker, "/include:?initEmpty@Mat@cv@@IAEXXZ")
#pragma comment(linker, "/include:??$make_pair@AAHAAH@std@@YA?AU?$pair@HH@0@AAH0@Z")
#pragma comment(linker, "/include:?value@?$result_@V?$basic_istream@DU?$char_traits@D@std@@@std@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$?0D@_InputArray@cv@@QAE@ABV?$vector@DV?$allocator@D@std@@@std@@@Z")
#pragma comment(linker, "/include:?size@?$vector@_NV?$allocator@_N@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@NH@std@@@std@@@std@@@std@@YAXPAU?$pair@NH@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@NH@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VFlattenParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVFlattenParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?MergeFrom@MVNParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?CopyFrom@V0LayerParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_C@_06JIFAHDEN@param?5?$AA@")
#pragma comment(linker, "/include:?mutable_unknown_fields@AccuracyParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?Reshape@?$PoolingLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??4?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAEAAV01@ABV01@@Z")
#pragma comment(linker, "/include:??$forward_as_tuple@H@std@@YA?AV?$tuple@$$QAH@0@$$QAH@Z")
#pragma comment(linker, "/include:?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??$insert@U?$pair@HH@std@@@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@HH@1@@Z")
#pragma comment(linker, "/include:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z")
#pragma comment(linker, "/include:?is_signed@_Num_float_base@std@@2_NB")
#pragma comment(linker, "/include:??_R4bad_day_of_month@gregorian@boost@@6B@")
#pragma comment(linker, "/include:??_C@_00CNPNBAHC@?$AA@")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$LRNLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_C@_0BP@MCKKENKH@Unknown?5elementwise?5operation?4?$AA@")
#pragma comment(linker, "/include:??_G?$BaseConvolutionLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$isnan@N@@YA_NN@Z")
#pragma comment(linker, "/include:??_R4ExpParameter@caffe@@6B@")
#pragma comment(linker, "/include:??$_Equal@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:??_R4FlattenParameter@caffe@@6B@")
#pragma comment(linker, "/include:?running@Timer@caffe@@QAE_NXZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$FlattenLayer@M@caffe@@PAV12@PAV12@@std@@YAPAPAV?$FlattenLayer@M@caffe@@PAPAV12@00AAU?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$BNLLLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?set_has_backend@DataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?mutable_unknown_fields@SoftmaxParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@U?$pair@MH@std@@@std@@@std@@SAIABV?$allocator@U?$pair@MH@std@@@2@@Z")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@EBEXXZ")
#pragma comment(linker, "/include:??$arena_destruct_object@VBlobProto@caffe@@@internal@protobuf@google@@YAXPAX@Z")
#pragma comment(linker, "/include:__CT??_R0?AU?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@8??0?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@QAE@ABU012@@Z32")
#pragma comment(linker, "/include:?hinge_loss_param@V1LayerParameter@caffe@@QBEABVHingeLossParameter@2@XZ")
#pragma comment(linker, "/include:??$Own@VThresholdParameter@caffe@@@Arena@protobuf@google@@QAEXPAVThresholdParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_GDataParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_C@_05IMNAOMFL@Slice?$AA@")
#pragma comment(linker, "/include:??0?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@QAE@ABU01@@Z")
#pragma comment(linker, "/include:?GetMetadata@TanHParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?clear_diff@BlobProto@caffe@@QAEXXZ")
#pragma comment(linker, "/include:?_Xlen@?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@IBEXXZ")
#pragma comment(linker, "/include:??_R4?$ReLULayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?GetMetadata@DropoutParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_C@_0DP@OFAOMABE@V0NetParameter?5to?5NetParameter?5?$CI@")
#pragma comment(linker, "/include:??_R2DummyDataParameter@caffe@@8")
#pragma comment(linker, "/include:??_C@_0EF@JNPFENOM@Number?5of?5data?5fillers?5must?5be?50@")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_pd@PAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@VNo_Op@?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@23@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_R3HDF5DataParameter@caffe@@8")
#pragma comment(linker, "/include:?type@?$ThresholdLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?GetPoolingParam@?$SPPLayer@M@caffe@@MAE?AVLayerParameter@2@HHHVSPPParameter@2@@Z")
#pragma comment(linker, "/include:??_R2MVNParameter@caffe@@8")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PAV?$basic_istream@DU?$char_traits@D@std@@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$SplitLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@ReductionParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??0?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAE@XZ")
#pragma comment(linker, "/include:??$_Allocate@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@YAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@0@IPAU10@@Z")
#pragma comment(linker, "/include:?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$ReLULayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_R4TanHParameter@caffe@@6B@")
#pragma comment(linker, "/include:?MergeFromInternal@RepeatedPtrFieldBase@internal@protobuf@google@@AAEXABV1234@P81234@AEXPAPAX1HH@Z@Z")
#pragma comment(linker, "/include:?is_signed@?$numeric_limits@J@std@@2_NB")
#pragma comment(linker, "/include:??$ptr@M@Mat@cv@@QAEPAMH@Z")
#pragma comment(linker, "/include:?InternalSwap@HingeLossParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?Clear@NetState@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?value@?$is_function_impl@Uforward_iterator_tag@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$checked_delete@V?$ImageDataLayer@M@caffe@@@boost@@YAXPAV?$ImageDataLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?output_blob_indices@?$Net@N@caffe@@QBEABV?$vector@HV?$allocator@H@std@@@std@@XZ")
#pragma comment(linker, "/include:?GPU@SolverParameter@caffe@@2W4SolverParameter_SolverMode@2@B")
#pragma comment(linker, "/include:?set_has_encoded@Datum@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$ReductionLayer@N@caffe@@@detail@boost@@QAE@PAV?$ReductionLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_7ContrastiveLossParameter@caffe@@6B@")
#pragma comment(linker, "/include:??0?$set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?digits@?$numeric_limits@_J@std@@2HB")
#pragma comment(linker, "/include:?do_init@init@?$min_shift_initializer@M@detail@math@boost@@SAXXZ")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PAV?$basic_istream@_WU?$char_traits@_W@std@@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:_hypot")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$ReshapeLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?channels@?$MemoryDataLayer@M@caffe@@QAEHXZ")
#pragma comment(linker, "/include:?set_bottom@V1LayerParameter@caffe@@QAEXHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$BaseDataLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$_Move@AAPAVImageDataParameter@caffe@@@std@@YA$$QAPAVImageDataParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?value@?$operator_exists@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@G@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:?count@?$Blob@H@caffe@@QBEHH@Z")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAV?$vector@MV?$allocator@M@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@2@@std@@YAPAV?$vector@MV?$allocator@M@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@AAE@ABV012@Uclone_tag@012@@Z")
#pragma comment(linker, "/include:??$_Move@AAPAV?$Layer@M@caffe@@@std@@YA$$QAPAV?$Layer@M@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??$_Uninit_def_fill_n@PAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@IV?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@V12@@std@@YAXPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@IAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$OwnInternal@VNetParameter@caffe@@@Arena@protobuf@google@@AAEXPAVNetParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?_Reserve@?$vector@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??P?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:??_R2?$Filler@M@caffe@@8")
#pragma comment(linker, "/include:?SPPParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??$checked_delete@V?$LogLayer@M@caffe@@@boost@@YAXPAV?$LogLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?IsInitialized@SliceParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??$forward@AAPAVmutex@boost@@@std@@YAAAPAVmutex@boost@@AAPAV12@@Z")
#pragma comment(linker, "/include:??$swap@PAVHingeLossParameter@caffe@@@std@@YAXAAPAVHingeLossParameter@caffe@@0@Z")
#pragma comment(linker, "/include:?kLrnParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?lower_bound@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@2@ABH@Z")
#pragma comment(linker, "/include:??C?$shared_ptr@VRNG@Caffe@caffe@@@boost@@QBEPAVRNG@Caffe@caffe@@XZ")
#pragma comment(linker, "/include:?InitAsDefaultInstance@BlobProto@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?InitAsDefaultInstance@PowerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?compute_states@?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@QAEXXZ")
#pragma comment(linker, "/include:??_GTanHParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?Reset@?$MemoryDataLayer@N@caffe@@QAEXPAN0H@Z")
#pragma comment(linker, "/include:?DataLayerSetUp@?$BaseDataLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??4?$vector@MV?$allocator@M@std@@@std@@QAEAAV01@$$QAV01@@Z")
#pragma comment(linker, "/include:?kThresholdParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?GetCachedSize@ReductionParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$Creator_PowerLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$PReLULayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$DeconvolutionLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:?Reshape@?$DropoutLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R2?$AbsValLayer@N@caffe@@8")
#pragma comment(linker, "/include:?has_current_step@SolverState@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?PowerParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?set_has_mvn_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@8")
#pragma comment(linker, "/include:??_C@_0DE@IICOIHOA@Unknown?5parameter?5hdf5_output_pa@")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$ExpLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$MVNLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@@std@@SAIABV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@2@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@2@@Z")
#pragma comment(linker, "/include:__TI7?AV?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:?PoolMethod_MAX@V0LayerParameter@caffe@@2W4V0LayerParameter_PoolMethod@2@B")
#pragma comment(linker, "/include:?kHdf5OutputParamFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?SharedDtor@Datum@caffe@@AAEXXZ")
#pragma comment(linker, "/include:__CT??_R0?AUbad_month@gregorian@boost@@@8??0bad_month@gregorian@boost@@QAE@ABU012@@Z12")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VThresholdParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVThresholdParameter@caffe@@@Z")
#pragma comment(linker, "/include:?value@?$alignment_logic@$01$01@detail@boost@@2IB")
#pragma comment(linker, "/include:??$construct@V?$vector@MV?$allocator@M@std@@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@QAEXPAV?$vector@MV?$allocator@M@std@@@1@ABV21@@Z")
#pragma comment(linker, "/include:??_R2?$Solver@M@caffe@@8")
#pragma comment(linker, "/include:?Backward_cpu@?$InfogainLossLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@U?$pair@NH@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBU?$pair@HH@std@@U12@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?_Reallocate@?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??$do_format@V?$basic_format@DU?$char_traits@D@std@@V?$allocator@D@2@@boost@@U?$group1@U?$group2@U?$_Smanip@_J@std@@ABM@detail@io@boost@@@detail@io@2@@detail@policies@math@boost@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_format@DU?$char_traits@D@std@@V?$allocator@D@2@@3@ABU?$group1@U?$group2@U?$_Smanip@_J@std@@ABM@detail@io@boost@@@0io@3@@Z")
#pragma comment(linker, "/include:?construct@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$SoftmaxLayer@N@caffe@@@boost@@YAXPAV?$SoftmaxLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0BK@NOOKHMFG@Not?5enough?5points?5to?5skip?$AA@")
#pragma comment(linker, "/include:?DEFAULT@SigmoidParameter@caffe@@2W4SigmoidParameter_Engine@2@B")
#pragma comment(linker, "/include:??_R4?$basic_fstream@DU?$char_traits@D@std@@@std@@6B@")
#pragma comment(linker, "/include:??_E?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@WBE@AEPAXI@Z")
#pragma comment(linker, "/include:?WriteVarint32SignExtendedToArray@CodedOutputStream@io@protobuf@google@@SAPAEHPAE@Z")
#pragma comment(linker, "/include:??_C@_06BBNHMBDF@p?5?$DM?$DN?51?$AA@")
#pragma comment(linker, "/include:??$checked_delete@V?$SoftmaxWithLossLayer@M@caffe@@@boost@@YAXPAV?$SoftmaxWithLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$SoftmaxWithLossLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@@std@@YAPAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_C@_0EI@FJFLHIGD@Check?5failed?3?5param?4shape_size?$CI?$CJ@")
#pragma comment(linker, "/include:?gInstantiationGuardContrastiveLossLayer@caffe@@3DA")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$ConcatLayer@N@caffe@@@detail@boost@@QAE@PAV?$ConcatLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??0?$TanHLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?InitAsDefaultInstance@ReductionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B")
#pragma comment(linker, "/include:??$addressof@$$CBI@std@@YAPBIABI@Z")
#pragma comment(linker, "/include:?set_k@V0LayerParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z")
#pragma comment(linker, "/include:?deallocate@?$allocator@U?$pair@MH@std@@@std@@QAEXPAU?$pair@MH@2@I@Z")
#pragma comment(linker, "/include:??1?$RepeatedField@H@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:?_Kfn@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IBEABHABU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$SoftmaxLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0?$MultinomialLogisticLossLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?clear_crop_size@ImageDataParameter@caffe@@QAEXXZ")
#pragma comment(linker, "/include:??$_Move@AAPAVNetParameter@caffe@@@std@@YA$$QAPAVNetParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VBlobShape@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVBlobShape@caffe@@@Z")
#pragma comment(linker, "/include:??_7bad_exception_@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$SoftmaxLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?LayerSetUp@?$LossLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_G?$AccuracyLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?lower_bound@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@2@ABU?$pair@HH@2@@Z")
#pragma comment(linker, "/include:?_Reserve@?$vector@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??$_Move@AAPAVCursor@db@caffe@@@std@@YA$$QAPAVCursor@db@caffe@@AAPAV123@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$ConcatLayer@N@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@V?$ConcatLayer@N@caffe@@@1@PAV?$ConcatLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??1?$InfogainLossLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?Solve@?$Solver@M@caffe@@UAEXPBD@Z")
#pragma comment(linker, "/include:?CORD@FieldOptions@protobuf@google@@2W4FieldOptions_CType@23@B")
#pragma comment(linker, "/include:??C?$shared_ptr@V?$Blob@M@caffe@@@boost@@QBEPAV?$Blob@M@caffe@@XZ")
#pragma comment(linker, "/include:?allocate@?$allocator@D@std@@QAEPADI@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VReshapeParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVReshapeParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:??_C@_0BB@FCAJKIOP@V1LayerParameter?$AA@")
#pragma comment(linker, "/include:??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:?Merge@StringTypeHandlerBase@internal@protobuf@google@@SAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV56@@Z")
#pragma comment(linker, "/include:?kVarianceNormFieldNumber@FillerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_C@_0L@CCJPCPHI@?5to?5layer?5?$AA@")
#pragma comment(linker, "/include:??_C@_0CC@JBNMAOHP@end_axis?5?$DM?$DN?5bottom?$FL0?$FN?9?$DOnum_axes?$CI@")
#pragma comment(linker, "/include:??_G?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@QAEPAXI@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$DummyDataLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?set_has_source@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?input_blobs@?$Net@N@caffe@@QBEABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@XZ")
#pragma comment(linker, "/include:?value@?$arg@$02@mpl@boost@@2HB")
#pragma comment(linker, "/include:??$forward@V?$vector@NV?$allocator@N@std@@@std@@@std@@YA$$QAV?$vector@NV?$allocator@N@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$Filler@M@caffe@@@boost@@QAE@$$QAV01@@Z")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEXXZ")
#pragma comment(linker, "/include:??1?$MultinomialLogisticLossLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?ConvolutionParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??$OwnInternal@VTransformationParameter@caffe@@@Arena@protobuf@google@@AAEXPAVTransformationParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?caffe_rng_rand@caffe@@YAIXZ")
#pragma comment(linker, "/include:??1LRNParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??R?$greater@U?$pair@NH@std@@@std@@QBE_NABU?$pair@NH@1@0@Z")
#pragma comment(linker, "/include:?GetMetadata@SigmoidParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVAccuracyParameter@caffe@@@internal@protobuf@google@@YAPBVAccuracyParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??$reset@V?$PowerLayer@M@caffe@@@?$shared_ptr@V?$PowerLayer@M@caffe@@@boost@@QAEXPAV?$PowerLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?deallocate@?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@QAEXPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@I@Z")
#pragma comment(linker, "/include:?set_has_operation@EltwiseParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$SliceLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$Check_LEImpl@IH@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABIABHPBD@Z")
#pragma comment(linker, "/include:?Delete@?$GenericTypeHandler@VNetParameter@caffe@@@internal@protobuf@google@@SAXPAVNetParameter@caffe@@PAVArena@34@@Z")
#pragma comment(linker, "/include:?New@LossParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ")
#pragma comment(linker, "/include:??_C@_0CP@NMPHCFBE@bottom?$FL0?$FN?9?$DOchannels?$CI?$CJ?5?$DN?$DN?5bottom?$FL@")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$DataLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$DataLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_R1A@CI@3FA@clone_base@exception_detail@boost@@8")
#pragma comment(linker, "/include:?value@?$is_pointer_helper@V?$basic_istream@DU?$char_traits@D@std@@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R4_System_error_category@std@@6B@")
#pragma comment(linker, "/include:?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$MultinomialLogisticLossLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_7?$BaseConvolutionLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@SliceParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?_Tidy@?$vector@EV?$allocator@E@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?is_integral@?$integer_traits_base@F$0?IAAA@$0HPPP@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?kSFixed64Size@WireFormatLite@internal@protobuf@google@@2HB")
#pragma comment(linker, "/include:??$Destroy@VTypeHandler@?$RepeatedPtrField@VNetParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXXZ")
#pragma comment(linker, "/include:?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$PReLULayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?set_has_axis@SoftmaxParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_G?$MVNLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?BlobProto_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@NetStateRule@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?set_has_lr_policy@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?is_open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QBE_NXZ")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@1@@Z")
#pragma comment(linker, "/include:??0?$error_info@Uthrow_file_@boost@@PBD@boost@@QAE@PBD@Z")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z")
#pragma comment(linker, "/include:?set_fg_threshold@WindowDataParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bbad_month@gregorian@2@@")
#pragma comment(linker, "/include:??$arena_destruct_object@VNetStateRule@caffe@@@internal@protobuf@google@@YAXPAX@Z")
#pragma comment(linker, "/include:?AddAlreadyReserved@?$RepeatedField@M@protobuf@google@@QAEXABM@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@VDB@db@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?has_encoded@Datum@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?root_folder@ImageDataParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?IsInitialized@SolverParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?mutable_unknown_fields@PReLUParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?UnsafeArenaSwap@?$RepeatedPtrField@VLayerParameter@caffe@@@protobuf@google@@QAEXPAV123@@Z")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$Filler@M@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@VGenerator@RNG@Caffe@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?default_instance_@AccuracyParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?New@HDF5DataParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z")
#pragma comment(linker, "/include:??1?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?mutable_dim@BlobShape@caffe@@QAEPAV?$RepeatedField@_J@protobuf@google@@XZ")
#pragma comment(linker, "/include:?InferBlobShape@?$DataTransformer@N@caffe@@QAE?AV?$vector@HV?$allocator@H@std@@@std@@ABV?$vector@VDatum@caffe@@V?$allocator@VDatum@caffe@@@std@@@4@@Z")
#pragma comment(linker, "/include:?kScaleFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$DeconvolutionLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$DeconvolutionLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_R3Datum@caffe@@8")
#pragma comment(linker, "/include:?Forward_gpu@?$ConvolutionLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?has_name@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?SharedDtor@BlobProto@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@PAV12@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@V12@@std@@YAPAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?cpu_data@?$Blob@I@caffe@@QBEPBIXZ")
#pragma comment(linker, "/include:??$Creator_LRNLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$Layer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_C@_0BD@CNGKCFEL@pad_h_?5?$DM?5kernel_h_?$AA@")
#pragma comment(linker, "/include:??0?$RepeatedPtrField@VV1LayerParameter@caffe@@@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_06FHFOAHML@system?$AA@")
#pragma comment(linker, "/include:?Swap@LossParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$WindowDataLayer@N@caffe@@@boost@@YAXPAV?$WindowDataLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?descriptor@BlobProtoVector@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?type@?$ImageDataLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_08LLGCOLLL@iostream?$AA@")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$EltwiseLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$LRNLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?kDimFieldNumber@BlobShape@caffe@@2HB")
#pragma comment(linker, "/include:?Capacity@?$RepeatedField@_J@protobuf@google@@QBEHXZ")
#pragma comment(linker, "/include:??_C@_07OMEKGEEE@?5data?3?5?$AA@")
#pragma comment(linker, "/include:??0?$UniformFiller@M@caffe@@QAE@ABVFillerParameter@1@@Z")
#pragma comment(linker, "/include:?has_batch_size@WindowDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?unknown_fields@MVNParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??0greg_year@gregorian@boost@@QAE@G@Z")
#pragma comment(linker, "/include:?_Mysize@?$tuple@ABU?$pair@HH@std@@@std@@2IB")
#pragma comment(linker, "/include:??$_Move@AAPAURep@?$RepeatedField@_J@protobuf@google@@@std@@YA$$QAPAURep@?$RepeatedField@_J@protobuf@google@@AAPAU1234@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$ReLULayer@M@caffe@@@detail@boost@@QAE@PAV?$ReLULayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?max_size@?$vector@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@_System_error_category@std@@8")
#pragma comment(linker, "/include:??$_Unchecked@PAH@std@@YAPAHPAH@Z")
#pragma comment(linker, "/include:?_Construct_n@?$vector@HV?$allocator@H@std@@@std@@QAEXIPBH@Z")
#pragma comment(linker, "/include:?MergeFrom@FlattenParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAXPAH0AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$SilenceLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z")
#pragma comment(linker, "/include:?swap@?$shared_ptr@VCaffe@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:?net@SolverParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?has_gamma@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$enable_error_info@Voverflow_error@std@@@boost@@YA?AU?$error_info_injector@Voverflow_error@std@@@exception_detail@0@ABVoverflow_error@std@@@Z")
#pragma comment(linker, "/include:?bit_count@?$low_bits_mask_t@$07@boost@@2IB")
#pragma comment(linker, "/include:??$Creator_HingeLossLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?value@?$is_function_impl@PBE@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_G?$FilterLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$_Allocate@N@std@@YAPANIPAN@Z")
#pragma comment(linker, "/include:??$CreateInternal@VNetParameter@caffe@@@Arena@protobuf@google@@AAEPAVNetParameter@caffe@@_N@Z")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:?mutable_module@PythonParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?InternalSwap@BlobProtoVector@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?deallocate@?$allocator@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@std@@QAEXPAV?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@I@Z")
#pragma comment(linker, "/include:?descriptor@ParamSpec@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?set_axis@ConcatParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$EltwiseLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$ReshapeLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?function@?1???$float_next_imp@MU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@math@boost@@@detail@math@boost@@YAMABMABU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@23@@Z@4PBDB")
#pragma comment(linker, "/include:?clear_mirror@DataParameter@caffe@@QAEXXZ")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ")
#pragma comment(linker, "/include:?Check_LEImpl@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HHPBD@Z")
#pragma comment(linker, "/include:??$?0V?$LRNLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$LRNLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0BB@KONIAEFE@?5?5cache_images?3?5?$AA@")
#pragma comment(linker, "/include:??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBU?$pair@HH@std@@M@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?has_loss_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?_Make_iter@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@@Z")
#pragma comment(linker, "/include:??0?$group2@U?$_Smanip@_J@std@@ABM@detail@io@boost@@QAE@U?$_Smanip@_J@std@@ABM@Z")
#pragma comment(linker, "/include:?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_R4?$Layer@N@caffe@@6B@")
#pragma comment(linker, "/include:??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@?$normal_distribution@M@random@boost@@QAEMAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@@Z")
#pragma comment(linker, "/include:??$?0V?$LogLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$LogLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$Check_LEImpl@HI@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABHABIPBD@Z")
#pragma comment(linker, "/include:??0?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@QAE@ABVbad_alloc@std@@@Z")
#pragma comment(linker, "/include:??_GV1LayerParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?kKernelSizeFieldNumber@PoolingParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$Get@VTypeHandler@?$RepeatedPtrField@VBlobProto@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IBEABVBlobProto@caffe@@H@Z")
#pragma comment(linker, "/include:??_R4?$DummyDataLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??$construct@V?$vector@MV?$allocator@M@std@@@std@@AAV12@@?$allocator_traits@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@1@PAV?$vector@MV?$allocator@M@std@@@1@AAV31@@Z")
#pragma comment(linker, "/include:?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R0?AVParamSpec@caffe@@@8")
#pragma comment(linker, "/include:?set_has_train_state@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$TanHLayer@N@caffe@@@detail@boost@@QAE@PAV?$TanHLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?ABS_D@?$ratio@$00$0PECEA@@boost@@0_JB")
#pragma comment(linker, "/include:?has_lrn_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$BNLLLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$construct@PAV?$Blob@M@caffe@@AAPAV12@@?$allocator_traits@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@SAXAAV?$allocator@PAV?$Blob@M@caffe@@@1@PAPAV?$Blob@M@caffe@@AAPAV34@@Z")
#pragma comment(linker, "/include:??_R0?AVLogParameter@caffe@@@8")
#pragma comment(linker, "/include:??$Own@VLossParameter@caffe@@@Arena@protobuf@google@@QAEXPAVLossParameter@caffe@@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@2@@Z")
#pragma comment(linker, "/include:?ByteSize@Datum@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?_Inside@?$vector@HV?$allocator@H@std@@@std@@IBE_NPBH@Z")
#pragma comment(linker, "/include:?New@ConcatParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$SigmoidLayer@M@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??$construct@PAV?$Blob@M@caffe@@AAPAV12@@?$_Wrap_alloc@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@QAEXPAPAV?$Blob@M@caffe@@AAPAV23@@Z")
#pragma comment(linker, "/include:?SharedDtor@ThresholdParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?New@ReLUParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:?axis@ConcatParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??$generate_int_float_pair@N$07V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@detail@random@boost@@YA?AU?$pair@NH@std@@AAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@U?$bool_@$00@mpl@2@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@logic_error@std@@8")
#pragma comment(linker, "/include:??$_Uninit_copy@V?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@PANV?$allocator@N@2@@std@@YAPANV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@0@0PANAAU?$_Wrap_alloc@V?$allocator@N@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@AAV12@@?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@AAV23@@Z")
#pragma comment(linker, "/include:??_R0?AV?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$EltwiseLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$EltwiseLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_C@_0FI@CGIEFMNC@System?5entropy?5source?5not?5availa@")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@PoolingParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$DummyDataLayer@N@caffe@@@boost@@YAXPAV?$DummyDataLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$EltwiseLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R0?AUContainer@InternalMetadataWithArena@internal@protobuf@google@@@8")
#pragma comment(linker, "/include:??_R3?$DummyDataLayer@M@caffe@@8")
#pragma comment(linker, "/include:??0?$ThresholdLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?kPreluParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VDummyDataParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVDummyDataParameter@caffe@@@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VPowerParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVPowerParameter@caffe@@@Z")
#pragma comment(linker, "/include:??0?$fpos@H@std@@QAE@H_J@Z")
#pragma comment(linker, "/include:??$_Ptr_cat@V?$vector@HV?$allocator@H@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$vector@HV?$allocator@H@std@@@0@0@Z")
#pragma comment(linker, "/include:??1?$vector@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?SPPParameter_Engine_IsValid@caffe@@YA_NH@Z")
#pragma comment(linker, "/include:??$Add@VTypeHandler@?$RepeatedPtrField@VV1LayerParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEPAVV1LayerParameter@caffe@@PAV45@@Z")
#pragma comment(linker, "/include:?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEXABV12@@Z")
#pragma comment(linker, "/include:??1?$WindowDataLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_C@_0N@JFDMEAJL@?1dev?1urandom?$AA@")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$PoolingLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_7?$FlattenLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??$ReadPackedPrimitive@M$01@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAV?$RepeatedField@M@23@@Z")
#pragma comment(linker, "/include:?NewFromPrototype@?$GenericTypeHandler@VNetStateRule@caffe@@@internal@protobuf@google@@SAPAVNetStateRule@caffe@@PBV56@PAVArena@34@@Z")
#pragma comment(linker, "/include:??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QAEAAV01@H@Z")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEXXZ")
#pragma comment(linker, "/include:??$?0V?$tuple@$$QAU?$pair@HH@std@@@std@@V?$tuple@$$$V@1@$0A@$S@?$pair@$$CBU?$pair@HH@std@@H@std@@QAE@AAV?$tuple@$$QAU?$pair@HH@std@@@1@AAV?$tuple@$$$V@1@U?$_Arg_idx@$0A@@1@U?$_Arg_idx@$S@1@@Z")
#pragma comment(linker, "/include:?iter@?$Solver@N@caffe@@QAEHXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$FilterLayer@M@caffe@@8")
#pragma comment(linker, "/include:?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??$ReadPackedPrimitive@_N$07@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAV?$RepeatedField@_N@23@@Z")
#pragma comment(linker, "/include:?_Tidy@?$vector@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:??A?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@QAEAAV?$vector@MV?$allocator@M@std@@@1@I@Z")
#pragma comment(linker, "/include:??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@QBEABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@XZ")
#pragma comment(linker, "/include:??1?$Layer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??0?$SGDSolver@M@caffe@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?AddAlreadyReserved@?$RepeatedField@_N@protobuf@google@@QAEXAB_N@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@BlobProtoVector@caffe@@8")
#pragma comment(linker, "/include:?THRESHOLD@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??_G?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@QAEPAXI@Z")
#pragma comment(linker, "/include:?SoftmaxParameter_Engine_descriptor_@?A0x5e4fc710@caffe@@3PBVEnumDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:__real@1e3ce508")
#pragma comment(linker, "/include:?kSnapshotFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:?IsInitialized@FlattenParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@SliceParameter@caffe@@8")
#pragma comment(linker, "/include:??$Own@VSolverParameter@caffe@@@Arena@protobuf@google@@QAEXPAVSolverParameter@caffe@@@Z")
#pragma comment(linker, "/include:??$MergeFrom@VTypeHandler@?$RepeatedPtrField@VV1LayerParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXABV0123@@Z")
#pragma comment(linker, "/include:?size@?$vector@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?blob_loss_weights@?$Net@N@caffe@@QBEABV?$vector@NV?$allocator@N@std@@@std@@XZ")
#pragma comment(linker, "/include:??$enable_error_info@Ubad_month@gregorian@boost@@@boost@@YA?AU?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@0@ABUbad_month@gregorian@0@@Z")
#pragma comment(linker, "/include:?_Reserve@?$vector@V?$shared_ptr@V?$Net@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??$_Umove@PAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@?$vector@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@IAEPAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@PAV23@00@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVPythonParameter@caffe@@@internal@protobuf@google@@YAPBVPythonParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?ClearToDefaultNoArena@ArenaStringPtr@internal@protobuf@google@@QAEXPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:??_R3?$SoftmaxLayer@M@caffe@@8")
#pragma comment(linker, "/include:?GetArenaNoVirtual@?$RepeatedField@_J@protobuf@google@@ABEPAVArena@23@XZ")
#pragma comment(linker, "/include:??_C@_06OBGPIMGL@index?5?$AA@")
#pragma comment(linker, "/include:?Clear@SolverParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?deallocate@?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?Engine_ARRAYSIZE@ReLUParameter@caffe@@2HB")
#pragma comment(linker, "/include:?is_specialized@_Num_float_base@std@@2_NB")
#pragma comment(linker, "/include:?mutable_unknown_fields@ReLUParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R2?$NeuronLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAXPAH0AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@@Z")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@Vthread@boost@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@ExpParameter@caffe@@8")
#pragma comment(linker, "/include:?unknown_fields@WindowDataParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?value@?$is_function_impl@Urandom_access_iterator_tag@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$ContrastiveLossLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$ContrastiveLossLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$ConvolutionLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_R0?AV?$InnerProductLayer@M@caffe@@@8")
#pragma comment(linker, "/include:??$GetReferenceableValue@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@google@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z")
#pragma comment(linker, "/include:__CT??_R0?AV?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@@8??0?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z44")
#pragma comment(linker, "/include:??_C@_0FE@FLEHHNDD@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??$?0V?$ArgMaxLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$ArgMaxLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?Datum_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?set_eps@MVNParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?layers@?$Net@M@caffe@@QBEABV?$vector@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@XZ")
#pragma comment(linker, "/include:??_G?$NeuronLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?to_char_type@?$char_traits@D@std@@SADABH@Z")
#pragma comment(linker, "/include:?tempering_d@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@2IB")
#pragma comment(linker, "/include:??_R4exception@boost@@6B@")
#pragma comment(linker, "/include:?set_has_scale@TransformationParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?set_has_top_k@AccuracyParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?value@?$max_pow2_less@$0EA@$0CA@@detail@boost@@2HB")
#pragma comment(linker, "/include:??$?0V?$WindowDataLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$WindowDataLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?data_size@BlobProto@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??1?$InfogainLossLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?kDeltaFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:?debug_info@NetParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?VarianceNorm_ARRAYSIZE@FillerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VReshapeParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVReshapeParameter@caffe@@@Z")
#pragma comment(linker, "/include:??0?$RepeatedField@_N@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@2@XZ")
#pragma comment(linker, "/include:?AddDatumVector@?$MemoryDataLayer@N@caffe@@UAEXABV?$vector@VDatum@caffe@@V?$allocator@VDatum@caffe@@@std@@@std@@@Z")
#pragma comment(linker, "/include:??$construct@PAV?$Blob@N@caffe@@AAPAV12@@?$_Wrap_alloc@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@QAEXPAPAV?$Blob@N@caffe@@AAPAV23@@Z")
#pragma comment(linker, "/include:__CT??_R0?AU?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@8??0?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@QAE@ABU012@@Z32")
#pragma comment(linker, "/include:??_G?$FlattenLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?PreSolve@?$SGDSolver@N@caffe@@IAEXXZ")
#pragma comment(linker, "/include:??0?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@AAE@ABV012@Uclone_tag@012@@Z")
#pragma comment(linker, "/include:??_C@_0BB@PFCEIHCG@File?5not?5found?3?5?$AA@")
#pragma comment(linker, "/include:?set_has_axis@SliceParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_C@_0FC@JEKEBOGF@Check?5failed?3?5layer_param?4includ@")
#pragma comment(linker, "/include:?max_size@?$vector@PAV?$FlattenLayer@N@caffe@@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??0?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@MessageLite@protobuf@google@@8")
#pragma comment(linker, "/include:??_C@_0N@LJLHIHAK@w?5?$DM?$DN?5width?$CI?$CJ?$AA@")
#pragma comment(linker, "/include:?MEAN@ReductionParameter@caffe@@2W4ReductionParameter_ReductionOp@2@B")
#pragma comment(linker, "/include:?type@?$MemoryDataLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??$?6V?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@Uthrow_file_@2@PBD@boost@@YAABV?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@0@ABV120@ABV?$error_info@Uthrow_file_@boost@@PBD@0@@Z")
#pragma comment(linker, "/include:??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?value@?$integral_constant@H$0A@@std@@2HB")
#pragma comment(linker, "/include:??$forward@AA_N@std@@YAAA_NAA_N@Z")
#pragma comment(linker, "/include:?WithinChannelForward@?$LRNLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$AbsValLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?UnsafeArenaSwap@?$RepeatedPtrField@VNetState@caffe@@@protobuf@google@@QAEXPAV123@@Z")
#pragma comment(linker, "/include:??4?$back_insert_iterator@V?$vector@HV?$allocator@H@std@@@std@@@std@@QAEAAV01@ABH@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$XavierFiller@N@caffe@@8")
#pragma comment(linker, "/include:?value@?$is_error_condition_enum@H@system@boost@@2_NB")
#pragma comment(linker, "/include:??_R1A@A@3EA@ios_base@std@@8")
#pragma comment(linker, "/include:??1?$NesterovSolver@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??0MSize@Mat@cv@@QAE@PAH@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$SigmoidCrossEntropyLossLayer@N@caffe@@@boost@@YAXPAV?$SigmoidCrossEntropyLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$AbsValLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?resize@?$vector@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@QAEXI@Z")
#pragma comment(linker, "/include:??0?$base_time@Vptime@posix_time@boost@@V?$counted_time_system@U?$counted_time_rep@Vmillisec_posix_time_system_config@posix_time@boost@@@date_time@boost@@@date_time@3@@date_time@boost@@QAE@ABVdate@gregorian@2@ABVtime_duration@posix_time@2@W4dst_flags@12@@Z")
#pragma comment(linker, "/include:?type@?$SoftmaxWithLossLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?insert@?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@@2@IABU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@Z")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bbad_format_string@io@2@@")
#pragma comment(linker, "/include:??_R0?AV?$PoolingLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?has_std@FillerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$DeconvolutionLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?push_back@?$vector@_NV?$allocator@_N@std@@@std@@QAEXAB_N@Z")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$EltwiseLayer@M@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??$swap@D@std@@YAXAAD0@Z")
#pragma comment(linker, "/include:?descriptor@NetState@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z")
#pragma comment(linker, "/include:?InferBlobShape@?$DataTransformer@M@caffe@@QAE?AV?$vector@HV?$allocator@H@std@@@std@@ABV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@4@@Z")
#pragma comment(linker, "/include:??0ContrastiveLossParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?SetCachedSize@InnerProductParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?IsInitialized@DropoutParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$PReLULayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$enable_error_info@Vbad_format_string@io@boost@@@boost@@YA?AU?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@0@ABVbad_format_string@io@0@@Z")
#pragma comment(linker, "/include:??_R3?$base_from_member@V?$shared_ptr@V?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@@boost@@$0A@@boost@@8")
#pragma comment(linker, "/include:?set_has_crop_size@DataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@bad_alloc_@exception_detail@boost@@8")
#pragma comment(linker, "/include:??_C@_0DJ@GOOMDBCA@Negative?5slope?5size?5is?5inconsist@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$ReLULayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?CopyFrom@Datum@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?_Inside@?$vector@MV?$allocator@M@std@@@std@@IBE_NPBM@Z")
#pragma comment(linker, "/include:?get@?$shared_ptr@V?$Blob@M@caffe@@@boost@@QBEPAV?$Blob@M@caffe@@XZ")
#pragma comment(linker, "/include:??_7?$LossLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??_Gbad_day_of_month@gregorian@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$_Allocate@U?$pair@NH@std@@@std@@YAPAU?$pair@NH@0@IPAU10@@Z")
#pragma comment(linker, "/include:??$?RV?$mf0@XVInternalThread@caffe@@@_mfi@boost@@Vlist0@_bi@2@@?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@boost@@QAEXV?$type@X@12@AAV?$mf0@XVInternalThread@caffe@@@_mfi@2@AAVlist0@12@H@Z")
#pragma comment(linker, "/include:??$caffe_cpu_dot@N@caffe@@YANHPBN0@Z")
#pragma comment(linker, "/include:?digits10@?$numeric_limits@M@std@@2HB")
#pragma comment(linker, "/include:?AllowForceBackward@?$LossLayer@M@caffe@@UBE_NH@Z")
#pragma comment(linker, "/include:??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z")
#pragma comment(linker, "/include:??_R0?AVbad_format_string@io@boost@@@8")
#pragma comment(linker, "/include:?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$LogLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??$sigmoid@N@caffe@@YANN@Z")
#pragma comment(linker, "/include:??$reset@V?$PoolingLayer@N@caffe@@@?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@QAEXPAV?$PoolingLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_R4NetState@caffe@@6B@")
#pragma comment(linker, "/include:??_7?$LogLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??$ReadPrimitive@H$0O@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAH@Z")
#pragma comment(linker, "/include:??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??0?$Blob@H@caffe@@QAE@HHHH@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$FlattenLayer@M@caffe@@8")
#pragma comment(linker, "/include:?set_has_norm_region@LRNParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??1?$_Tree_buy@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?Fill@?$PositiveUnitballFiller@M@caffe@@UAEXPAV?$Blob@M@2@@Z")
#pragma comment(linker, "/include:??$checked_delete@VCursor@db@caffe@@@boost@@YAXPAVCursor@db@caffe@@@Z")
#pragma comment(linker, "/include:?InternalSwap@MVNParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?UnsafeArenaSwap@?$RepeatedField@_N@protobuf@google@@QAEXPAV123@@Z")
#pragma comment(linker, "/include:?descriptor@DropoutParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?set_axis@ReductionParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBU?$pair@HH@std@@M@1@XZ")
#pragma comment(linker, "/include:?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z")
#pragma comment(linker, "/include:?gInstantiationGuardMVNLayer@caffe@@3DA")
#pragma comment(linker, "/include:__real@7fdfffffffffffff")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$ContrastiveLossLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$checked_delete@V?$DeconvolutionLayer@N@caffe@@@boost@@YAXPAV?$DeconvolutionLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$ReductionLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?mutable_lrn_param@V1LayerParameter@caffe@@QAEPAVLRNParameter@2@XZ")
#pragma comment(linker, "/include:??$destroy@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@QAEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@1@@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBHH@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAH@2@V?$tuple@$$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@1@PAU?$pair@$$CBHH@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAH@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??$destroy@U?$pair@NH@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@NH@std@@@std@@@std@@QAEXPAU?$pair@NH@1@@Z")
#pragma comment(linker, "/include:?kIgnoreLabelFieldNumber@AccuracyParameter@caffe@@2HB")
#pragma comment(linker, "/include:__TI6?AV?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:?_Grow_to@?$vector@PAV?$FlattenLayer@M@caffe@@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@IBEII@Z")
#pragma comment(linker, "/include:?default_instance@SigmoidParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@@std@@@std@@YAXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$ReadRepeatedPrimitiveNoInline@_J$02@WireFormatLite@internal@protobuf@google@@SA_NHIPAVCodedInputStream@io@23@PAV?$RepeatedField@_J@23@@Z")
#pragma comment(linker, "/include:?kOperationFieldNumber@EltwiseParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@MH@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?AllowForceBackward@?$Layer@M@caffe@@UBE_NH@Z")
#pragma comment(linker, "/include:??_C@_0CG@OPDBJMCM@Image?5data?5type?5must?5be?5unsigned@")
#pragma comment(linker, "/include:??0?$date@V0gregorian@boost@@Vgregorian_calendar@12@Vdate_duration@12@@date_time@boost@@IAE@V?$int_adapter@I@12@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@AccuracyParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$_Move@AAPAVSyncedMemory@caffe@@@std@@YA$$QAPAVSyncedMemory@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:__CT??_R0?AU?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@8??0?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@QAE@ABU012@@Z32")
#pragma comment(linker, "/include:?kKernelWFieldNumber@PoolingParameter@caffe@@2HB")
#pragma comment(linker, "/include:?SOFTMAX_LOSS@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??_C@_0BI@LIODIMPG@Upgrade?5of?5input?5layer?5?$AA@")
#pragma comment(linker, "/include:?_Pop_back_n@?$vector@V?$shared_ptr@V?$Net@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@QAEXI@Z")
#pragma comment(linker, "/include:?mutable_mean_value@TransformationParameter@caffe@@QAEPAV?$RepeatedField@M@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$_Move@AAPAV?$Filler@M@caffe@@@std@@YA$$QAPAV?$Filler@M@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??1?$SliceLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?blobs_size@LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??_E?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@$4PPPPPPPM@CI@AEPAXI@Z")
#pragma comment(linker, "/include:??$Check_LEImpl@MM@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABM0PBD@Z")
#pragma comment(linker, "/include:??$?0NHX@?$pair@NH@std@@QAE@$$QAU01@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$EltwiseLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?kPtrTagMask@InternalMetadataWithArena@internal@protobuf@google@@0HB")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$ReLULayer@N@caffe@@@detail@boost@@QAE@PAV?$ReLULayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$SliceLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R0?AV?$AbsValLayer@N@caffe@@@8")
#pragma comment(linker, "/include:?sumsq_diff@?$Blob@I@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?clear_shape@BlobProto@caffe@@QAEXXZ")
#pragma comment(linker, "/include:??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@@Z")
#pragma comment(linker, "/include:?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$ReLULayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?set_shuffle@HDF5DataParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:?value@?$has_type@U?$range_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@range_detail@boost@@U?$bool_@$0A@@mpl@3@@range_detail@boost@@2_NB")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$Im2colLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?IsInitialized@ReductionParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?pointer_to@?$pointer_traits@PAU?$pair@$$CBHH@std@@@std@@SAPAU?$pair@$$CBHH@2@AAU32@@Z")
#pragma comment(linker, "/include:??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@1@$$QA_N@Z")
#pragma comment(linker, "/include:?_Destroy@?$vector@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@IAEXPAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:??$?0H$$$VPAPAX@?$tuple@$$QAH@std@@QAE@$$QAH@Z")
#pragma comment(linker, "/include:??_C@_0BN@BEPNICCK@boost?3?3thread_resource_error?$AA@")
#pragma comment(linker, "/include:?_Lmost@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VMVNParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVMVNParameter@caffe@@@Z")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@2@@std@@YAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?asum_data@?$Blob@M@caffe@@QBEMXZ")
#pragma comment(linker, "/include:??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8")
#pragma comment(linker, "/include:?New@LRNParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAXPAE0AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@@Z")
#pragma comment(linker, "/include:?CrossChannelForward_gpu@?$LRNLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?set_has_gamma@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?ByteSize@PoolingParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_C@_0BH@GMEBKMIB@height?5?$DM?$DN?5datum_height?$AA@")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@HDF5DataParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??4?$optional@Vlocale@std@@@boost@@QAEAAV01@ABV01@@Z")
#pragma comment(linker, "/include:??$get@$0A@ABH@std@@YAABH$$QAV?$tuple@ABH@0@@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$InnerProductLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEXXZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$DummyDataLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??$caffe_mul@N@caffe@@YAXHPBN0PAN@Z")
#pragma comment(linker, "/include:?PoolingParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@LayerParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??_R0?AV?$BilinearFiller@M@caffe@@@8")
#pragma comment(linker, "/include:?value@?$is_arithmetic_and_not_xchars@_JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?type@?$SPPLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??$swap@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@YAXAAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@0@0@Z")
#pragma comment(linker, "/include:??_C@_09NIGIGFDC@ImageData?$AA@")
#pragma comment(linker, "/include:?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBE_NPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:??_R0?AV?$ReshapeLayer@N@caffe@@@8")
#pragma comment(linker, "/include:?mutable_root_folder@ImageDataParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??_C@_0BA@KGEDLPAK@indices?$FLi?$FN?5?$DO?$DN?50?$AA@")
#pragma comment(linker, "/include:??_Gtoo_many_args@io@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$?0V?$SigmoidLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$SigmoidLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?capacity@?$vector@V?$shared_ptr@V?$Net@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?GetMetadata@PoolingParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?WriteBoolToArray@WireFormatLite@internal@protobuf@google@@SAPAEH_NPAE@Z")
#pragma comment(linker, "/include:?set_has_axis@AccuracyParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$swap@PAV?$Blob@N@caffe@@@std@@YAXAAPAV?$Blob@N@caffe@@0@Z")
#pragma comment(linker, "/include:??_7?$DeconvolutionLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAEXPAHI@Z")
#pragma comment(linker, "/include:??_R2error_category@std@@8")
#pragma comment(linker, "/include:??$Own@VAccuracyParameter@caffe@@@Arena@protobuf@google@@QAEXPAVAccuracyParameter@caffe@@@Z")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?has_share_mode@ParamSpec@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?InitAsDefaultInstance@ConvolutionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??1?$vector@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@2@@std@@YAPAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??4?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QAEAAV01@_N@Z")
#pragma comment(linker, "/include:??RMat@cv@@QBE?AV01@ABV?$Rect_@H@1@@Z")
#pragma comment(linker, "/include:??_G?$SPPLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?kNumOutputFieldNumber@InnerProductParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_C@_0BJ@BIIIJLHG@channels?5?$DN?$DN?5img_channels?$AA@")
#pragma comment(linker, "/include:??0?$int_adapter@I@date_time@boost@@QAE@I@Z")
#pragma comment(linker, "/include:?insert@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@AB_N@Z")
#pragma comment(linker, "/include:??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABH@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBHH@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABH@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$PowerLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?iter@?$Solver@M@caffe@@QAEHXZ")
#pragma comment(linker, "/include:?SetCachedSize@DummyDataParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:??$min@M@std@@YAABMABM0@Z")
#pragma comment(linker, "/include:??1?$unique_lock@Vmutex@boost@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?set_has_name@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?name@LayerParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??1?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??$forward@AAI@std@@YAAAIAAI@Z")
#pragma comment(linker, "/include:??$reset@Vthread@boost@@@?$shared_ptr@Vthread@boost@@@boost@@QAEXPAVthread@1@@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$MemoryDataLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_D?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@QAEXXZ")
#pragma comment(linker, "/include:?unknown_fields@InnerProductParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?set_has_phase@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?kEndFieldNumber@DescriptorProto_ReservedRange@protobuf@google@@2HB")
#pragma comment(linker, "/include:?set_has_type@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R4?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:?has_num_output@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$sp_deleter_construct@V?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@V123@@detail@boost@@YAXPAV?$shared_ptr@V?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@@1@PAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@1@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$ContrastiveLossLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$_Allocate@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@YAPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@IPAU1234@@Z")
#pragma comment(linker, "/include:??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??0?$PoolingLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$SigmoidLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?MergeFrom@TanHParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:_cblas_daxpby")
#pragma comment(linker, "/include:?num_axes@ReshapeParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??_R3?$ConvolutionLayer@N@caffe@@8")
#pragma comment(linker, "/include:?LayerParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?caffe_rng@caffe@@YAPAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@XZ")
#pragma comment(linker, "/include:?add_test_net@SolverParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$DropoutLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@2@XZ")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VPowerParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVPowerParameter@caffe@@@Z")
#pragma comment(linker, "/include:??$Own@VV1LayerParameter@caffe@@@Arena@protobuf@google@@QAEXPAVV1LayerParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@bad_exception_@exception_detail@boost@@8")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$ReLULayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?den@?$ratio@$00$0PECEA@@boost@@2_JB")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$SilenceLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R2ConvolutionParameter@caffe@@8")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@MH@std@@V?$allocator@U?$pair@MH@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@MH@std@@@1@@Z")
#pragma comment(linker, "/include:??$Check_LTImpl@HH@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH0PBD@Z")
#pragma comment(linker, "/include:?push_back@?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@QAEXABV?$shared_ptr@V?$Blob@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@?$exponential_distribution@N@random@boost@@QBENAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@@Z")
#pragma comment(linker, "/include:?MergeFrom@ArgMaxParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$addressof@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@YAPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@AAU1234@@Z")
#pragma comment(linker, "/include:??0InfogainLossParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?set_type@V1LayerParameter@caffe@@QAEXW4V1LayerParameter_LayerType@2@@Z")
#pragma comment(linker, "/include:??$generate_int_float_pair@N$07V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@detail@random@boost@@YA?AU?$pair@NH@std@@AAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@@Z")
#pragma comment(linker, "/include:??$?0V?$tuple@$$QAH@std@@V?$tuple@$$$V@1@$0A@$S@?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@AAV?$tuple@$$QAH@1@AAV?$tuple@$$$V@1@U?$_Arg_idx@$0A@@1@U?$_Arg_idx@$S@1@@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$ReshapeLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$swap@PAVNetState@caffe@@@std@@YAXAAPAVNetState@caffe@@0@Z")
#pragma comment(linker, "/include:??$_Pop_heap@PAU?$pair@NH@std@@HU12@U?$greater@U?$pair@NH@std@@@2@@std@@YAXPAU?$pair@NH@0@00$$QAU10@U?$greater@U?$pair@NH@std@@@0@PAH@Z")
#pragma comment(linker, "/include:?kNormFieldNumber@HingeLossParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_7?$BNLLLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?GoogleOnceInit@protobuf@google@@YAXPAHP6AXXZ@Z")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$FlattenLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?Reserve@?$RepeatedField@H@protobuf@google@@QAEXH@Z")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@LayerParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:?top_size@LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?mutable_power_param@LayerParameter@caffe@@QAEPAVPowerParameter@2@XZ")
#pragma comment(linker, "/include:?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B")
#pragma comment(linker, "/include:??_R4?$SilenceLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?offset@?$Blob@I@caffe@@QBEHABV?$vector@HV?$allocator@H@std@@@std@@@Z")
#pragma comment(linker, "/include:??0?$SigmoidCrossEntropyLossLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?MergeFrom@SolverParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?kGroupFieldNumber@ConvolutionParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_C@_0EE@LBBIECBF@new?5shape?5contains?5a?50?0?5but?5ther@")
#pragma comment(linker, "/include:?SplitBlobName@caffe@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@0HH@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$ContrastiveLossLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?mutable_transform_param@LayerParameter@caffe@@QAEPAVTransformationParameter@2@XZ")
#pragma comment(linker, "/include:?kMeanFileFieldNumber@WindowDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?value@?$is_reference_impl@G@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$vMul@M@@YAXHPBM0PAM@Z")
#pragma comment(linker, "/include:?ReadImageToCVMat@caffe@@YA?AVMat@cv@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$ConcatLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?set_has_random_seed@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?weight_cpu_gemm@?$BaseConvolutionLayer@N@caffe@@IAEXPBN0PAN@Z")
#pragma comment(linker, "/include:??_R0?AV?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:?mutable_mean_file@ImageDataParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?default_instance_@HDF5DataParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?mutable_name@V0LayerParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?New@HDF5OutputParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?kLayerFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??0ConvolutionParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?m@?1???$get_smallest_value@M@detail@math@boost@@YAMABU?$bool_@$00@mpl@3@@Z@4MB")
#pragma comment(linker, "/include:?name@?$Net@N@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?SetCachedSize@ParamSpec@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?dropout_param@V1LayerParameter@caffe@@QBEABVDropoutParameter@2@XZ")
#pragma comment(linker, "/include:?set_batch_size@HDF5DataParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??_R3too_few_args@io@boost@@8")
#pragma comment(linker, "/include:?default_instance@ThresholdParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??_R0?AV?$ReductionLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?test_iter@SolverParameter@caffe@@QBEHH@Z")
#pragma comment(linker, "/include:??_R2out_of_range@std@@8")
#pragma comment(linker, "/include:??_C@_0CD@DKKNNNIC@Check?5failed?3?5cv_cropped_img?4dat@")
#pragma comment(linker, "/include:??_GExpParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$swap@PAURep@RepeatedPtrFieldBase@internal@protobuf@google@@@std@@YAXAAPAURep@RepeatedPtrFieldBase@internal@protobuf@google@@0@Z")
#pragma comment(linker, "/include:??1?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@2@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??0?$allocator@H@std@@QAE@XZ")
#pragma comment(linker, "/include:?max@?$numeric_limits@I@std@@SAIXZ")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?has_mirror@ImageDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$_Iter_cat@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?Reshape@?$DropoutLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$HingeLossLayer@N@caffe@@8")
#pragma comment(linker, "/include:?clear_has_mirror@DataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$enable_error_info@Vdomain_error@std@@@boost@@YA?AU?$error_info_injector@Vdomain_error@std@@@exception_detail@0@ABVdomain_error@std@@@Z")
#pragma comment(linker, "/include:??$CreateMaybeMessage@VBlobShape@caffe@@@Arena@protobuf@google@@CAPAVBlobShape@caffe@@PAV012@ZZ")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@2@I@Z")
#pragma comment(linker, "/include:?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_C@_0BG@LKBCKELN@Unknown?5filler?5name?3?5?$AA@")
#pragma comment(linker, "/include:??$Creator_SilenceLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?EqualNumBottomTopBlobs@?$BaseConvolutionLayer@M@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?mutable_unknown_fields@ConcatParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?mutable_data@Datum@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?push_back@?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@QAEX$$QAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??_E?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@$4PPPPPPPM@CI@AEPAXI@Z")
#pragma comment(linker, "/include:?_Reserve@?$vector@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??_7?$LogLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@1@$$QA_N@Z")
#pragma comment(linker, "/include:?history@?$SGDSolver@N@caffe@@QAEABV?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@XZ")
#pragma comment(linker, "/include:??$swap@PAD@std@@YAXAAPAD0@Z")
#pragma comment(linker, "/include:??$_Move@AAPAV?$Layer@N@caffe@@@std@@YA$$QAPAV?$Layer@N@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBU?$pair@HH@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@ABU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBU?$pair@HH@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:?V0LayerParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@VLayerParameter@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?kBlobShareModeFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?CopyFrom@HDF5DataParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?ImageDataParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??0?$MVNLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??0?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@1@@Z")
#pragma comment(linker, "/include:??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@")
#pragma comment(linker, "/include:??0?$sp_counted_impl_pd@PAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@VNo_Op@?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@23@@detail@boost@@QAE@PAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@2@AAVNo_Op@?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@42@@Z")
#pragma comment(linker, "/include:??$wrap_narrow@DV?$ctype@D@std@@@detail@io@boost@@YADABV?$ctype@D@std@@DD@Z")
#pragma comment(linker, "/include:?has_filler@PReLUParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$EltwiseLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_R2ContrastiveLossParameter@caffe@@8")
#pragma comment(linker, "/include:??0?$_Tree_buy@U?$pair@QBXUtss_data_node@detail@boost@@@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@1@@Z")
#pragma comment(linker, "/include:??_G?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$SilenceLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?SPPParameter_PoolMethod_descriptor@caffe@@YAPBVEnumDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?SharedCtor@AccuracyParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_7?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:??1?$vector@EV?$allocator@E@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?value@?$is_base_of_imp@Vexception@std@@Ubad_day_of_month@gregorian@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?AllowForceBackward@?$EuclideanLossLayer@M@caffe@@UBE_NH@Z")
#pragma comment(linker, "/include:??_R3?$ContrastiveLossLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$PowerLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$EuclideanLossLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?type@?$LRNLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??_C@_0IO@BHMGIOEK@class?5boost?3?3exception_ptr?5__cde@")
#pragma comment(linker, "/include:??$ReadMessageNoVirtualNoRecursionDepth@VNetState@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVNetState@caffe@@@Z")
#pragma comment(linker, "/include:??$construct@VNetParameter@caffe@@$$$V@?$allocator_traits@V?$allocator@VNetParameter@caffe@@@std@@@std@@SAXAAV?$allocator@VNetParameter@caffe@@@1@PAVNetParameter@caffe@@@Z")
#pragma comment(linker, "/include:?GetMetadata@ParamSpec@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?Reshape@?$PReLULayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@AccuracyParameter@caffe@@8")
#pragma comment(linker, "/include:?New@V1LayerParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R0?AVoverflow_error@std@@@8")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@NV?$allocator@N@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@N@std@@@2@XZ")
#pragma comment(linker, "/include:??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@NH@std@@@std@@@std@@@std@@QAEAAV01@H@Z")
#pragma comment(linker, "/include:??_R4?$AccuracyLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?SharedCtor@EltwiseParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?allocate@?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@QAEPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@2@I@Z")
#pragma comment(linker, "/include:?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_R0?AVbad_cast@std@@@8")
#pragma comment(linker, "/include:?digits@?$numeric_limits@I@std@@2HB")
#pragma comment(linker, "/include:?_Buy@?$vector@IV?$allocator@_N@std@@@std@@IAE_NI@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$Im2colLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?MergeFrom@?$RepeatedPtrField@VV1LayerParameter@caffe@@@protobuf@google@@QAEXABV123@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@VSyncedMemory@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?max_size@?$allocator@H@std@@QBEIXZ")
#pragma comment(linker, "/include:?kSolverTypeFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$SigmoidLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@VRNG@Caffe@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_7?$BasePrefetchingDataLayer@M@caffe@@6B?$BaseDataLayer@M@1@@")
#pragma comment(linker, "/include:?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?DimCheckMode_MIN@ParamSpec@caffe@@2W4ParamSpec_DimCheckMode@2@B")
#pragma comment(linker, "/include:??$_Uninit_move@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@PAU12@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@2@U12@@std@@YAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?mirror@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?kShareModeFieldNumber@ParamSpec@caffe@@2HB")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$DummyDataLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?WriteTag@WireFormatLite@internal@protobuf@google@@SAXHW4WireType@1234@PAVCodedOutputStream@io@34@@Z")
#pragma comment(linker, "/include:?Clear@PoolingParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?set_has_mean_file@TransformationParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_7InfogainLossParameter@caffe@@6B@")
#pragma comment(linker, "/include:?_Reallocate@?$vector@PAV?$FlattenLayer@M@caffe@@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$Im2colLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?_Rmost@?$_Tree@V?$_Tmap_traits@PBXUtss_data_node@detail@boost@@U?$less@PBX@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??_7?$DummyDataLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$_Rechecked@PAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@PAV12@@std@@YAAAPAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@AAPAV12@PAV12@@Z")
#pragma comment(linker, "/include:??$vPowx@M@@YAXHPBMMPAM@Z")
#pragma comment(linker, "/include:??$?0V?$BNLLLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$BNLLLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_R4SPPParameter@caffe@@6B@")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?GetArenaNoVirtual@?$RepeatedPtrField@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@protobuf@google@@IBEPAVArena@23@XZ")
#pragma comment(linker, "/include:??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$cast@VTypeHandler@?$RepeatedPtrField@VNetParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@CAPAVNetParameter@caffe@@PAX@Z")
#pragma comment(linker, "/include:?_Grow_to@?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@IBEII@Z")
#pragma comment(linker, "/include:?Engine_ARRAYSIZE@TanHParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8")
#pragma comment(linker, "/include:?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B")
#pragma comment(linker, "/include:?CopyFrom@DummyDataParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$ThresholdLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@IBEXPAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@2@0@Z")
#pragma comment(linker, "/include:??$Own@VInnerProductParameter@caffe@@@Arena@protobuf@google@@QAEXPAVInnerProductParameter@caffe@@@Z")
#pragma comment(linker, "/include:?_Freeheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_7HDF5OutputParameter@caffe@@6B@")
#pragma comment(linker, "/include:?CopyFrom@LogParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$vAdd@N@@YAXHPBN0PAN@Z")
#pragma comment(linker, "/include:?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QBEXABV12@@Z")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??1?$SoftmaxLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?has_force_encoded_color@DataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?type@?$DataLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??$forward@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@YA$$QAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@AAV12@@Z")
#pragma comment(linker, "/include:??$ReadPrimitive@M$01@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAM@Z")
#pragma comment(linker, "/include:??$destroy@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@QAEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@@Z")
#pragma comment(linker, "/include:?compute_output_shape@?$DeconvolutionLayer@M@caffe@@MAEXXZ")
#pragma comment(linker, "/include:??A?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@1@I@Z")
#pragma comment(linker, "/include:?kEngineFieldNumber@ConvolutionParameter@caffe@@2HB")
#pragma comment(linker, "/include:??4locale@std@@QAEAAV01@ABV01@@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$DataTransformer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?descriptor@BlobShape@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R0?AV?$DataLayer@M@caffe@@@8")
#pragma comment(linker, "/include:__CTA6?AV?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$ReductionLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?Forward_cpu@?$ReductionLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?is_started@InternalThread@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$ConvolutionLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@PAV12@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@V12@@std@@YAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_G?$ReLULayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$Blob@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??1SolverParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??_R3?$ReLULayer@N@caffe@@8")
#pragma comment(linker, "/include:?set_bottom@LayerParameter@caffe@@QAEXHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??_R2?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?allocate@?$allocator@M@std@@QAEPAMI@Z")
#pragma comment(linker, "/include:??$Own@VEltwiseParameter@caffe@@@Arena@protobuf@google@@QAEXPAVEltwiseParameter@caffe@@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$ConvolutionLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@HH@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@HH@std@@@std@@@std@@QAEXPAU?$pair@HH@1@$$QAU21@@Z")
#pragma comment(linker, "/include:?MinTopBlobs@?$FilterLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$SliceLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:__CTA8?AV?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:??_R0?AVInnerProductParameter@caffe@@@8")
#pragma comment(linker, "/include:??_C@_0CP@BIBGNAOF@Must?5specify?5?8num?8?5once?0?5or?5once@")
#pragma comment(linker, "/include:??0?$vector@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$FilterLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@SAIABV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@Z")
#pragma comment(linker, "/include:??0?$AdaGradSolver@N@caffe@@QAE@ABVSolverParameter@1@@Z")
#pragma comment(linker, "/include:?new_width@V0LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??$min_value@M@tools@math@boost@@YAMXZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$DummyDataLayer@M@caffe@@@detail@boost@@QAE@PAV?$DummyDataLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?Merge@?$GenericTypeHandler@VNetParameter@caffe@@@internal@protobuf@google@@SAXABVNetParameter@caffe@@PAV56@@Z")
#pragma comment(linker, "/include:??$float_next@NU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@math@boost@@@math@boost@@YANABNABU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@01@@Z")
#pragma comment(linker, "/include:??_7SliceParameter@caffe@@6B@")
#pragma comment(linker, "/include:??C?$shared_ptr@VDB@db@caffe@@@boost@@QBEPAVDB@db@caffe@@XZ")
#pragma comment(linker, "/include:?kConcatParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?mutable_gpu_data@?$Blob@N@caffe@@QAEPANXZ")
#pragma comment(linker, "/include:??_7?$XavierFiller@M@caffe@@6B@")
#pragma comment(linker, "/include:?_Inside@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@IBE_NPBU?$pair@HH@2@@Z")
#pragma comment(linker, "/include:?default_instance_@DataParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?Update@?$Net@N@caffe@@QAEXXZ")
#pragma comment(linker, "/include:?MinTopBlobs@?$FilterLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R2thread_resource_error@boost@@8")
#pragma comment(linker, "/include:?kJavaGenerateEqualsAndHashFieldNumber@FileOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:??$OwnInternal@VExpParameter@caffe@@@Arena@protobuf@google@@AAEXPAVExpParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$AbsValLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??0?$shared_ptr@VCursor@db@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$SilenceLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?push_back@?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@QAEXABQAV?$Blob@N@caffe@@@Z")
#pragma comment(linker, "/include:?dereference@?$optional_base@Vlocale@std@@@optional_detail@boost@@ABEABVlocale@std@@PBV45@U?$bool_@$0A@@mpl@3@@Z")
#pragma comment(linker, "/include:??_C@_03LBAOJAIK@MVN?$AA@")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@VGenerator@RNG@Caffe@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?has_source@DataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R4?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@6Bbad_format_string@io@2@@")
#pragma comment(linker, "/include:?stepvalue@SolverParameter@caffe@@QBEHH@Z")
#pragma comment(linker, "/include:??$_Uninit_move@III@std@@YAPAIPAI00AAU?$_Wrap_alloc@V?$allocator@I@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$Own@VInfogainLossParameter@caffe@@@Arena@protobuf@google@@QAEXPAVInfogainLossParameter@caffe@@@Z")
#pragma comment(linker, "/include:?has_name@ParamSpec@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R4?$ConvolutionLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?GetMetadata@LayerParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?mutable_cpu_data@?$Blob@M@caffe@@QAEPAMXZ")
#pragma comment(linker, "/include:?unknown_fields@Datum@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?exponent@?$fp_traits_non_native@MUsingle_precision@detail@math@boost@@@detail@math@boost@@2IB")
#pragma comment(linker, "/include:?kFgThresholdFieldNumber@WindowDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?SharedDtor@DummyDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?New@HingeLossParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:?New@ReshapeParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R4WindowDataParameter@caffe@@6B@")
#pragma comment(linker, "/include:??_E?$WindowDataLayer@M@caffe@@WBJE@AEPAXI@Z")
#pragma comment(linker, "/include:?name@_System_error_category@std@@UBEPBDXZ")
#pragma comment(linker, "/include:??0?$_Vb_val@V?$allocator@_N@std@@@std@@QAE@IAB_NABV?$allocator@_N@1@@Z")
#pragma comment(linker, "/include:??_C@_0BF@GIGBAADO@windows?5to?5process?3?5?$AA@")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$PowerLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?_Grow_to@?$vector@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@IBEII@Z")
#pragma comment(linker, "/include:?unknown_fields@PoolingParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?set_kernel_w@ConvolutionParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??_C@_0FF@CFODLMIF@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VNetState@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVNetState@caffe@@@Z")
#pragma comment(linker, "/include:?InitAsDefaultInstance@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$checked_delete@V?$ReshapeLayer@M@caffe@@@boost@@YAXPAV?$ReshapeLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_E?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@$4PPPPPPPM@CI@AEPAXI@Z")
#pragma comment(linker, "/include:?mutable_pooling_param@LayerParameter@caffe@@QAEPAVPoolingParameter@2@XZ")
#pragma comment(linker, "/include:?ClipGradients@?$SGDSolver@M@caffe@@MAEXXZ")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@QAEXPAV?$vector@MV?$allocator@M@std@@@2@I@Z")
#pragma comment(linker, "/include:??$_Construct@PBD@?$vector@DV?$allocator@D@std@@@std@@QAEXPBD0@Z")
#pragma comment(linker, "/include:?mutable_cpu_data@?$Blob@H@caffe@@QAEPAHXZ")
#pragma comment(linker, "/include:?GetMetadata@BlobShape@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?IsInitialized@DummyDataParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?ReductionParameter_ReductionOp_IsValid@caffe@@YA_NH@Z")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$LossLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?kMessageSetWireFormatFieldNumber@MessageOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_R4sp_counted_base@detail@boost@@6B@")
#pragma comment(linker, "/include:?propagate_down_size@LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$Filler@N@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?set_has_across_channels@MVNParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?value@?$bool_@$0A@@mpl@boost@@2_NB")
#pragma comment(linker, "/include:??_C@_0CG@PHJMEHCP@slice_point_?4size?$CI?$CJ?5?$DN?$DN?5top?4size?$CI@")
#pragma comment(linker, "/include:?PowerParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?SolverParameter_SolverMode_IsValid@caffe@@YA_NH@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$DeconvolutionLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??0?$vector@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$Filler@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?value@?$alignment_logic@$00$00@detail@boost@@2IB")
#pragma comment(linker, "/include:?lrn_param@V1LayerParameter@caffe@@QBEABVLRNParameter@2@XZ")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@QAEPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@I@Z")
#pragma comment(linker, "/include:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Net@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?value@?$alignment_of_impl@T?$lower_alignment@$03@detail@boost@@@detail@boost@@2IB")
#pragma comment(linker, "/include:?_Destroy@?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@IAEXPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@0@Z")
#pragma comment(linker, "/include:?has_fixed_range@?$linear_congruential_engine@_K$0FNOOMOGGN@$0L@$0BAAAAAAAAAAAA@@random@boost@@2_NB")
#pragma comment(linker, "/include:?CopyFrom@EltwiseParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$DummyDataLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_R0?AV?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$WindowDataLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_D?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@QAEXXZ")
#pragma comment(linker, "/include:?has_sigmoid_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?GetCachedSize@HDF5OutputParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??0?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@1@@Z")
#pragma comment(linker, "/include:??_R3?$ThresholdLayer@M@caffe@@8")
#pragma comment(linker, "/include:?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?value@?$is_function_impl@C@detail@boost@@2_NB")
#pragma comment(linker, "/include:?Forward_gpu@?$SigmoidLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$?0V?$ImageDataLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$ImageDataLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?random_seed@SolverParameter@caffe@@QBE_JXZ")
#pragma comment(linker, "/include:??_7ReductionParameter@caffe@@6B@")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@VLayerParameter@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?JS_STRING@FieldOptions@protobuf@google@@2W4FieldOptions_JSType@23@B")
#pragma comment(linker, "/include:?construct@?$allocator@PAV?$Blob@N@caffe@@@std@@QAEXPAPAV?$Blob@N@caffe@@ABQAV34@@Z")
#pragma comment(linker, "/include:??$swap@PAVPowerParameter@caffe@@@std@@YAXAAPAVPowerParameter@caffe@@0@Z")
#pragma comment(linker, "/include:?allocate@?$allocator@U?$pair@HH@std@@@std@@QAEPAU?$pair@HH@2@I@Z")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Vbad_alloc@std@@@12@@Z")
#pragma comment(linker, "/include:?set_has_log_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?CopyFrom@FillerParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R3?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??$_Uninitialized_fill_n@PAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@IU1234@U?$_Wrap_alloc@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@@std@@YAXPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@IPBU1234@AAU?$_Wrap_alloc@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:?SetCachedSize@ReLUParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?max@?$constrained_value@V?$simple_exception_policy@G$00$0BP@Ubad_day_of_month@gregorian@boost@@@CV@boost@@@CV@boost@@SAGXZ")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@YAXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?IsInitialized@ConvolutionParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?Clear@ConcatParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:?CopyFrom@ThresholdParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@U?$pair@NH@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?value@?$is_aligned@$03$03@detail@boost@@2_NB")
#pragma comment(linker, "/include:?_Grow_to@?$vector@U?$pair@MH@std@@V?$allocator@U?$pair@MH@std@@@2@@std@@IBEII@Z")
#pragma comment(linker, "/include:?deallocate@?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:??$Creator_Im2colLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??0LRNParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??0?$vector@PAV?$FlattenLayer@M@caffe@@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R4?$AdaGradSolver@N@caffe@@6B@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$ReLULayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?_Reserve@?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$SplitLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?kDiffFieldNumber@BlobProto@caffe@@2HB")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$HingeLossLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?default_instance@InnerProductParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??_C@_01IDAFKMJL@_?$AA@")
#pragma comment(linker, "/include:?construct@?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@QAEXPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@2@@Z")
#pragma comment(linker, "/include:??_GSolverParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_C@_0DG@BGCNNPGO@Check?5failed?3?5ReadProtoFromTextF@")
#pragma comment(linker, "/include:??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@1@$$QA_N@Z")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@2@XZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@InnerProductParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$OwnInternal@VHingeLossParameter@caffe@@@Arena@protobuf@google@@AAEXPAVHingeLossParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$SoftmaxLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?Get@?$RepeatedPtrField@VFillerParameter@caffe@@@protobuf@google@@QBEABVFillerParameter@caffe@@H@Z")
#pragma comment(linker, "/include:??0?$counted_time_rep@Vmillisec_posix_time_system_config@posix_time@boost@@@date_time@boost@@QAE@ABVdate@gregorian@2@ABVtime_duration@posix_time@2@@Z")
#pragma comment(linker, "/include:??$forward@AAU?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@YAAAU?$pair@$$CBU?$pair@HH@std@@M@0@AAU10@@Z")
#pragma comment(linker, "/include:?clone@?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:?sig_bits_fast@?$low_bits_mask_t@$0EA@@boost@@2_KB")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$ArgMaxLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$InfogainLossLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?has_power_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?mutable_inner_product_param@LayerParameter@caffe@@QAEPAVInnerProductParameter@2@XZ")
#pragma comment(linker, "/include:??_R3?$TanHLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$_Move@AAPAVHDF5DataParameter@caffe@@@std@@YA$$QAPAVHDF5DataParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?size@?$RepeatedPtrField@VFillerParameter@caffe@@@protobuf@google@@QBEHXZ")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@@Z")
#pragma comment(linker, "/include:?end@?$vector@NV?$allocator@N@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?kCropsizeFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?loss_param@V1LayerParameter@caffe@@QBEABVLossParameter@2@XZ")
#pragma comment(linker, "/include:?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:__CT??_R0?AUbad_alloc_@exception_detail@boost@@@8??0bad_alloc_@exception_detail@boost@@QAE@ABU012@@Z32")
#pragma comment(linker, "/include:?mutable_inner_product_param@V1LayerParameter@caffe@@QAEPAVInnerProductParameter@2@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@bad_day_of_month@gregorian@boost@@8")
#pragma comment(linker, "/include:??1?$LossLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$AccuracyLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??1BlobProtoVector@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$_Unchecked@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@YAPBHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??0MemoryDataParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?ticks_per_second@?$time_resolution_traits@Utime_resolution_traits_adapted64_impl@date_time@boost@@$04$0PECEA@$05H@date_time@boost@@2_JB")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$SplitLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??0PythonParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??1?$RepeatedPtrField@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:?has_infinity@_Num_float_base@std@@2_NB")
#pragma comment(linker, "/include:??_C@_0IK@LHEHAGMH@class?5boost?3?3exception_ptr?5__cde@")
#pragma comment(linker, "/include:?kThresholdFieldNumber@ThresholdParameter@caffe@@2HB")
#pragma comment(linker, "/include:??0?$value@PAVInternalThread@caffe@@@_bi@boost@@QAE@ABQAVInternalThread@caffe@@@Z")
#pragma comment(linker, "/include:??1?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$caffe_add_scalar@N@caffe@@YAXHNPAN@Z")
#pragma comment(linker, "/include:?DataLayerSetUp@?$DataLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$SPPLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$SigmoidLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?_Rrotate@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?Reshape@?$SPPLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??$?0V?$ConcatLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$ConcatLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_R0?AVSPPParameter@caffe@@@8")
#pragma comment(linker, "/include:??$swap@PAVSyncedMemory@caffe@@@std@@YAXAAPAVSyncedMemory@caffe@@0@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$SoftmaxLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??A?$map@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@@std@@QAEAAU?$pair@HH@1@$$QAU21@@Z")
#pragma comment(linker, "/include:?_Grow_to@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@2@@std@@IBEII@Z")
#pragma comment(linker, "/include:??1ConvolutionParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$Net@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??1?$ReLULayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$ConcatLayer@M@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$PoolingLayer@M@caffe@@@detail@boost@@QAE@PAV?$PoolingLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?ComputeUpdateValue@?$AdaGradSolver@M@caffe@@MAEXHM@Z")
#pragma comment(linker, "/include:??_C@_07DGKBIBNP@Dropout?$AA@")
#pragma comment(linker, "/include:??$make_move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@std@@YA?AV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?force_instantiate@?$min_shift_initializer@M@detail@math@boost@@SAXXZ")
#pragma comment(linker, "/include:?deallocate@?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?Clear@DropoutParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??0?$ReductionLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$SigmoidLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_R3?$PoolingLayer@M@caffe@@8")
#pragma comment(linker, "/include:?mutable_memory_data_param@V1LayerParameter@caffe@@QAEPAVMemoryDataParameter@2@XZ")
#pragma comment(linker, "/include:?initialization_multiplier@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@2IB")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$SilenceLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$SplitLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R0?AVFillerParameter@caffe@@@8")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VTanHParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVTanHParameter@caffe@@@Z")
#pragma comment(linker, "/include:??0?$vector@U?$pair@NH@std@@V?$allocator@U?$pair@NH@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0CA@CILKAOEJ@top?4size?$CI?$CJ?5?$DM?$DN?5bottom_slice_axis?$AA@")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$InfogainLossLayer@N@caffe@@@detail@boost@@QAE@PAV?$InfogainLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$SilenceLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??1?$ExpLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBU?$pair@HH@std@@M@1@XZ")
#pragma comment(linker, "/include:?count@?$Blob@I@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?Delete@?$GenericTypeHandler@VParamSpec@caffe@@@internal@protobuf@google@@SAXPAVParamSpec@caffe@@PAVArena@34@@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VNetParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVNetParameter@caffe@@@Z")
#pragma comment(linker, "/include:?DEFAULT@ConvolutionParameter@caffe@@2W4ConvolutionParameter_Engine@2@B")
#pragma comment(linker, "/include:??_C@_0CO@HLHGEHNF@Creating?5training?5net?5specified?5@")
#pragma comment(linker, "/include:?shape@?$Blob@N@caffe@@QBEHH@Z")
#pragma comment(linker, "/include:?on_error@?$simple_exception_policy@G$00$0BP@Ubad_day_of_month@gregorian@boost@@@CV@boost@@SAXGGW4violation_enum@23@@Z")
#pragma comment(linker, "/include:??0?$MultinomialLogisticLossLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??1?$vector@PAV?$FlattenLayer@N@caffe@@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?InternalThreadEntry@?$BasePrefetchingDataLayer@M@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??A?$vector@NV?$allocator@N@std@@@std@@QBEABNI@Z")
#pragma comment(linker, "/include:??_E?$WindowDataLayer@N@caffe@@WBJE@AEPAXI@Z")
#pragma comment(linker, "/include:??_R0?AVReLUParameter@caffe@@@8")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$ThresholdLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??$construct@HAAH@?$allocator_traits@V?$allocator@H@std@@@std@@SAXAAV?$allocator@H@1@PAHAAH@Z")
#pragma comment(linker, "/include:??$cast@VTypeHandler@?$RepeatedPtrField@VBlobShape@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@CAPAVBlobShape@caffe@@PAX@Z")
#pragma comment(linker, "/include:??_C@_05OFLEIIDM@fixed?$AA@")
#pragma comment(linker, "/include:??$OwnInternal@VMessage@protobuf@google@@@Arena@protobuf@google@@AAEXPAVMessage@12@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?FLATTEN@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:?Reshape@?$Blob@H@caffe@@QAEXHHHH@Z")
#pragma comment(linker, "/include:??$caffe_cpu_gemm@M@caffe@@YAXW4CBLAS_TRANSPOSE@@0HHHMPBM1MPAM@Z")
#pragma comment(linker, "/include:??$_Move@AAPAV?$DataTransformer@N@caffe@@@std@@YA$$QAPAV?$DataTransformer@N@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??_C@_0BL@FIJAICDD@input_channels?5?$DN?$DN?5channels?$AA@")
#pragma comment(linker, "/include:??_R3LRNParameter@caffe@@8")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$MemoryDataLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?ByteSize@PReLUParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?GetArenaNoVirtual@?$RepeatedField@_N@protobuf@google@@ABEPAVArena@23@XZ")
#pragma comment(linker, "/include:?Backward_cpu@?$ExpLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?default_seed@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@2IB")
#pragma comment(linker, "/include:??$_Move@AAPAVPReLUParameter@caffe@@@std@@YA$$QAPAVPReLUParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$PowerLayer@M@caffe@@8")
#pragma comment(linker, "/include:?kDebugInfoFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$BNLLLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$FlattenLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$construct@NABN@?$allocator_traits@V?$allocator@N@std@@@std@@SAXAAV?$allocator@N@1@PANABN@Z")
#pragma comment(linker, "/include:??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAE?AV01@H@Z")
#pragma comment(linker, "/include:??_R3?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?_Inside@?$vector@IV?$allocator@_N@std@@@std@@IBE_NPBI@Z")
#pragma comment(linker, "/include:?Init@?$Net@M@caffe@@QAEXABVNetParameter@2@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$HingeLossLayer@N@caffe@@@detail@boost@@QAE@PAV?$HingeLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$fill@PAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@U1234@@std@@YAXPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@0ABU1234@@Z")
#pragma comment(linker, "/include:__CT??_R0?AVsystem_error@system@boost@@@8??0system_error@system@boost@@QAE@ABV012@@Z44")
#pragma comment(linker, "/include:??0FlattenParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?snapshot_diff@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?mutable_exp_param@V1LayerParameter@caffe@@QAEPAVExpParameter@2@XZ")
#pragma comment(linker, "/include:?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@1@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$EltwiseLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?protobuf_AssignDescriptorsOnce@?A0x5e4fc710@caffe@@YAXXZ")
#pragma comment(linker, "/include:?_Ufill@?$vector@NV?$allocator@N@std@@@std@@IAEPANPANIPBN@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$ReLULayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?SharedDtor@NetParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$swap@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z")
#pragma comment(linker, "/include:?_Eqrange@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@V12@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:??_R3NetStateRule@caffe@@8")
#pragma comment(linker, "/include:?kInitialSize@?$RepeatedField@_N@protobuf@google@@0HB")
#pragma comment(linker, "/include:?CopyFrom@V0LayerParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z")
#pragma comment(linker, "/include:__CTA9?AV?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:??_R3?$ExpLayer@N@caffe@@8")
#pragma comment(linker, "/include:?Delete@?$GenericTypeHandler@VBlobShape@caffe@@@internal@protobuf@google@@SAXPAVBlobShape@caffe@@PAVArena@34@@Z")
#pragma comment(linker, "/include:?bottom_size@LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?_Xlen@?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@IBEXXZ")
#pragma comment(linker, "/include:?TestAll@?$Solver@N@caffe@@IAEXXZ")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$ContrastiveLossLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_G?$Im2colLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABV31@@Z")
#pragma comment(linker, "/include:?kKernelWFieldNumber@ConvolutionParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$FilterLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_C@_0GH@CGGDEKMN@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?rand_skip@DataParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?_Reallocate@?$vector@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?Clear@TransformationParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?has_axis@ConcatParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@@Z")
#pragma comment(linker, "/include:?descriptor@LossParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_C@_0CG@IMEKPFFN@Creating?5training?5net?5from?5net?5f@")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?_Inside@?$vector@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@IBE_NPBV?$shared_ptr@V?$Layer@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$AbsValLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?max_size@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R1A@73FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:?default_instance_@BlobProto@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?VarintSize32SignExtended@CodedOutputStream@io@protobuf@google@@SAHH@Z")
#pragma comment(linker, "/include:?New@?$GenericTypeHandler@VLayerParameter@caffe@@@internal@protobuf@google@@SAPAVLayerParameter@caffe@@PAVArena@34@@Z")
#pragma comment(linker, "/include:?add_include@V1LayerParameter@caffe@@QAEPAVNetStateRule@2@XZ")
#pragma comment(linker, "/include:??$forward@AAU?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@YAAAU?$pair@$$CBU?$pair@HH@std@@H@0@AAU10@@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$ConvolutionLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?max@?$simple_exception_policy@G$00$0BP@Ubad_day_of_month@gregorian@boost@@@CV@boost@@SAGXZ")
#pragma comment(linker, "/include:?New@?$GenericTypeHandler@VBlobShape@caffe@@@internal@protobuf@google@@SAPAVBlobShape@caffe@@PAVArena@34@@Z")
#pragma comment(linker, "/include:??_C@_0CJ@BCBNGJJE@param_?4test_iter_size?$CI?$CJ?5?$DO?$DN?5num_t@")
#pragma comment(linker, "/include:?MergeFrom@V0LayerParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?InitAsDefaultInstance@NetState@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?add_input_shape@NetParameter@caffe@@QAEPAVBlobShape@2@XZ")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$ImageDataLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$Creator_MVNLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$PoolingLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?const_min@?$integer_traits_base@D$0?IA@$0HP@@detail@boost@@2DB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$BaseDataLayer@M@caffe@@8")
#pragma comment(linker, "/include:?has_slice_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$MemoryDataLayer@N@caffe@@8")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@DropoutParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$_Val_type@PAV?$vector@MV?$allocator@M@std@@@std@@@std@@YAPAV?$vector@MV?$allocator@M@std@@@0@PAV10@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$TanHLayer@M@caffe@@8")
#pragma comment(linker, "/include:?parse@?$basic_format@DU?$char_traits@D@std@@V?$allocator@D@2@@boost@@QAEAAV12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?CopyFrom@SliceParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?kOptionsFieldNumber@EnumValueDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_R4?$AdaGradSolver@M@caffe@@6B@")
#pragma comment(linker, "/include:??$vPowx@N@@YAXHPBNNPAN@Z")
#pragma comment(linker, "/include:?gpu_diff@?$Blob@M@caffe@@QBEPBMXZ")
#pragma comment(linker, "/include:??_7?$ContrastiveLossLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QBE?AU12@XZ")
#pragma comment(linker, "/include:?argmax_param@V1LayerParameter@caffe@@QBEABVArgMaxParameter@2@XZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAPAV?$FlattenLayer@N@caffe@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@@std@@YAPAPAV?$FlattenLayer@N@caffe@@PAPAV12@00AAU?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_R4?$LRNLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?set_has_argmax_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@@std@@YAPAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:?size@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$MemoryDataLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??1?$map@PBXUtss_data_node@detail@boost@@U?$less@PBX@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@5@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VInnerProductParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVInnerProductParameter@caffe@@@Z")
#pragma comment(linker, "/include:??$?LU?$group1@U?$group2@U?$_Smanip@_J@std@@ABM@detail@io@boost@@@detail@io@boost@@@?$basic_format@DU?$char_traits@D@std@@V?$allocator@D@2@@boost@@QAEAAV01@ABU?$group1@U?$group2@U?$_Smanip@_J@std@@ABM@detail@io@boost@@@detail@io@1@@Z")
#pragma comment(linker, "/include:?TanHParameter_Engine_IsValid@caffe@@YA_NH@Z")
#pragma comment(linker, "/include:?kBottomFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$nextafter@MMU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@math@boost@@@math@boost@@YAMABM0ABU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@01@@Z")
#pragma comment(linker, "/include:??$_Rechecked@PAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@PAPAV12@@std@@YAAAPAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@AAPAPAV10@PAPAV10@@Z")
#pragma comment(linker, "/include:?has_max_iter@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$PowerLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$PowerLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_C@_0FC@NGEPAOL@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?CopyFrom@NetParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B")
#pragma comment(linker, "/include:??$construct@V?$vector@MV?$allocator@M@std@@@std@@AAV12@@?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@QAEXPAV?$vector@MV?$allocator@M@std@@@1@AAV21@@Z")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@VNetParameter@caffe@@@std@@@std@@QAEPAVNetParameter@caffe@@I@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$InfogainLossLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?_Pop_back_n@?$vector@IV?$allocator@_N@std@@@std@@QAEXI@Z")
#pragma comment(linker, "/include:??1?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$MemoryDataLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_7logic_error@std@@6B@")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@M@caffe@@@detail@boost@@QAE@PAV?$SigmoidCrossEntropyLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?EncodeFloat@WireFormatLite@internal@protobuf@google@@SAIM@Z")
#pragma comment(linker, "/include:??_7FillerParameter@caffe@@6B@")
#pragma comment(linker, "/include:??1?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?max_size@?$vector@V?$shared_ptr@V?$Net@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$SplitLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?mutable_unknown_fields@PythonParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??0?$ReLULayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??0bad_alloc_@exception_detail@boost@@QAE@XZ")
#pragma comment(linker, "/include:??_R2?$MemoryDataLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$destroy@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@QAEXPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@1@@Z")
#pragma comment(linker, "/include:?clear_has_shape@BlobProto@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?value@?$is_scalar_impl@$$CCX@detail@boost@@2_NB")
#pragma comment(linker, "/include:__real@2f800000")
#pragma comment(linker, "/include:?test_state_size@SolverParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??$?0V?$ThresholdLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$ThresholdLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?pointer_to@?$pointer_traits@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@SAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@2@AAU32@@Z")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PAV?$optional@Vlocale@std@@@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:__real@3f1a36e2eb1c432d")
#pragma comment(linker, "/include:?Engine_ARRAYSIZE@PoolingParameter@caffe@@2HB")
#pragma comment(linker, "/include:?is_integer@_Num_int_base@std@@2_NB")
#pragma comment(linker, "/include:??_C@_0CM@IJPBMIHP@Unknown?5parameter?5rand_skip?5for?5@")
#pragma comment(linker, "/include:?Forward_cpu@?$PoolingLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_7?$GaussianFiller@M@caffe@@6B@")
#pragma comment(linker, "/include:??$Own@VPoolingParameter@caffe@@@Arena@protobuf@google@@QAEXPAVPoolingParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$Blob@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?SharedDtor@ContrastiveLossParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R2?$GaussianFiller@N@caffe@@8")
#pragma comment(linker, "/include:?top_vecs@?$Net@N@caffe@@QBEABV?$vector@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@XZ")
#pragma comment(linker, "/include:?ReadFileToDatum@caffe@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPAVDatum@1@@Z")
#pragma comment(linker, "/include:?width@Datum@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?backward_cpu_gemm@?$BaseConvolutionLayer@M@caffe@@IAEXPBM0PAM@Z")
#pragma comment(linker, "/include:?SIGN_N@?$ratio@$00$0DOI@@boost@@0_JB")
#pragma comment(linker, "/include:?LRNParameter_NormRegion_IsValid@caffe@@YA_NH@Z")
#pragma comment(linker, "/include:??$?0V?$ThresholdLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$ThresholdLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?SharedCtor@ContrastiveLossParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$SilenceLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??0LayerParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??0LogParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVSigmoidParameter@caffe@@@internal@protobuf@google@@YAPBVSigmoidParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@MVNParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??$construct@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@PAV12@@?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@QAEXPAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@1@$$QAPAV21@@Z")
#pragma comment(linker, "/include:??$_Copy_backward@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z")
#pragma comment(linker, "/include:??_7ExpParameter@caffe@@6B@")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VFlattenParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVFlattenParameter@caffe@@@Z")
#pragma comment(linker, "/include:??$float_prior@NU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@math@boost@@@math@boost@@YANABNABU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@01@@Z")
#pragma comment(linker, "/include:?kMaxIterFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:?kHeightFieldNumber@BlobProto@caffe@@2HB")
#pragma comment(linker, "/include:?InfogainLossParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z")
#pragma comment(linker, "/include:?V1LayerParameter_DimCheckMode_descriptor@caffe@@YAPBVEnumDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$SilenceLayer@N@caffe@@@detail@boost@@QAE@PAV?$SilenceLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?mutable_data@BlobProto@caffe@@QAEPAV?$RepeatedField@M@protobuf@google@@XZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@LossParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$EltwiseLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??1?$ContrastiveLossLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R0?AV?$SigmoidLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?value@?$max_pow2_less@$0CA@$07@detail@boost@@2HB")
#pragma comment(linker, "/include:??_C@_0P@KHGIHEBM@Shuffling?5data?$AA@")
#pragma comment(linker, "/include:?kWidthFieldNumber@BlobProto@caffe@@2HB")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Vthread_resource_error@boost@@@12@@Z")
#pragma comment(linker, "/include:?GetCachedSize@V1LayerParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?Restore@?$Solver@N@caffe@@QAEXPBD@Z")
#pragma comment(linker, "/include:__CTA6?AV?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:??$?0V?$DataTransformer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$DataTransformer@N@caffe@@@Z")
#pragma comment(linker, "/include:?_Reallocate@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?TYPE_FIXED64@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Type@23@B")
#pragma comment(linker, "/include:??$integer_log2@I@detail@random@boost@@YAHI@Z")
#pragma comment(linker, "/include:?const_min@?$integer_traits_base@F$0?IAAA@$0HPPP@@detail@boost@@2FB")
#pragma comment(linker, "/include:??0?$Im2colLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$ArgMaxLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@AAE@ABV012@Uclone_tag@012@@Z")
#pragma comment(linker, "/include:?kNameFieldNumber@UninterpretedOption@protobuf@google@@2HB")
#pragma comment(linker, "/include:?value@?$operator_returns_Ret@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@_JUdont_care@has_right_shift_impl@detail@boost@@$0A@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:?value@?$is_volatile_rval_filter@_K@detail@boost@@2_NB")
#pragma comment(linker, "/include:?_Grow_to@?$vector@PAV?$FlattenLayer@N@caffe@@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@IBEII@Z")
#pragma comment(linker, "/include:??_R4?$BaseConvolutionLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??1AccuracyParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PAV?$base_from_member@V?$shared_ptr@V?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@@boost@@$0A@@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??1?$SilenceLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$_Uninit_copy@PBHPAHU?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAPAHPBH0PAHAAU?$_Wrap_alloc@V?$allocator@H@std@@@0@@Z")
#pragma comment(linker, "/include:??$_Buynode@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree_buy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z")
#pragma comment(linker, "/include:??0?$_Tree_comp@$0A@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@U?$pair@HH@std@@@1@ABV?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@1@@Z")
#pragma comment(linker, "/include:?value@?$is_pod_impl@Ua128@tt_align_ns@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?is_neg_inf@?$int_adapter@_J@date_time@boost@@SA_N_J@Z")
#pragma comment(linker, "/include:?SharedDtor@PowerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?kChannelsFieldNumber@Datum@caffe@@2HB")
#pragma comment(linker, "/include:?_Destroy@?$vector@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@IAEXPAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBU?$pair@HH@std@@H@1@XZ")
#pragma comment(linker, "/include:??_R0?AVInfogainLossParameter@caffe@@@8")
#pragma comment(linker, "/include:??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z")
#pragma comment(linker, "/include:?set_has_scale@LogParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?den@?$ratio@$0PECEA@$00@boost@@2_JB")
#pragma comment(linker, "/include:??_R4?$BaseDataLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??_R4SoftmaxParameter@caffe@@6B@")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$Layer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R4too_few_args@io@boost@@6B@")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$Net@M@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z")
#pragma comment(linker, "/include:?image_data_param@V1LayerParameter@caffe@@QBEABVImageDataParameter@2@XZ")
#pragma comment(linker, "/include:?gcd_n1_n2@?$is_evenly_divisible_by@V?$ratio@$00$0JIJGIA@@boost@@V12@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:?deallocate@?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:??$?0V?$DeconvolutionLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$DeconvolutionLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?kParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:__real@80800000")
#pragma comment(linker, "/include:?beta@LRNParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@VRNG@Caffe@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?_Reallocate@?$vector@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?has_axis@InnerProductParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?type@?$InfogainLossLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?Swap@ReshapeParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??_C@_06CMLIEHFC@concat?$AA@")
#pragma comment(linker, "/include:?kMinimumSize@StringOutputStream@io@protobuf@google@@0HB")
#pragma comment(linker, "/include:?kSppParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??1?$ContrastiveLossLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?TransformationParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??$Creator_MVNLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@NetState@caffe@@8")
#pragma comment(linker, "/include:??_G?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@QAEPAXI@Z")
#pragma comment(linker, "/include:?CopyFrom@HingeLossParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?has_end_axis@FlattenParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R4?$WindowDataLayer@M@caffe@@6BInternalThread@1@@")
#pragma comment(linker, "/include:?MergeFrom@SPPParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@AAE@ABV012@Uclone_tag@012@@Z")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$ArgMaxLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_C@_0BH@OBHJIBLI@?5?5?5?5Train?5net?5output?5?$CD?$AA@")
#pragma comment(linker, "/include:?bias_term@ConvolutionParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?unknown_fields@TransformationParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@InfogainLossParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?getloc@?$basic_format@DU?$char_traits@D@std@@V?$allocator@D@2@@boost@@QBE?AVlocale@std@@XZ")
#pragma comment(linker, "/include:?value@?$is_pointer_impl@F@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_GInternalThread@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?has_new_width@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?New@EltwiseParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?shape@?$Blob@I@caffe@@QBEABV?$vector@HV?$allocator@H@std@@@std@@XZ")
#pragma comment(linker, "/include:?set_has_type@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@IBEXPAN0@Z")
#pragma comment(linker, "/include:?type@?$SigmoidLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?clone@?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:?_Rrotate@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?Add@?$RepeatedField@M@protobuf@google@@QAEXABM@Z")
#pragma comment(linker, "/include:?kFgFractionFieldNumber@WindowDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?kCropModeFieldNumber@WindowDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_C@_0DF@NBJJAKEI@Eltwise?5Layer?5takes?5one?5coeffici@")
#pragma comment(linker, "/include:??1?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?kParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?L2@HingeLossParameter@caffe@@2W4HingeLossParameter_Norm@2@B")
#pragma comment(linker, "/include:??0?$Solver@M@caffe@@QAE@ABVSolverParameter@1@@Z")
#pragma comment(linker, "/include:?Transform@?$DataTransformer@N@caffe@@QAEXABVDatum@2@PAV?$Blob@N@2@@Z")
#pragma comment(linker, "/include:??0?$Filler@M@caffe@@QAE@ABVFillerParameter@1@@Z")
#pragma comment(linker, "/include:??1ExpParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$SPPLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@AAE@ABV012@Uclone_tag@012@@Z")
#pragma comment(linker, "/include:?GetCachedSize@BlobProtoVector@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$_Allocate@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@0@IPAU10@@Z")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@HH@std@@@std@@@std@@QAEPAU?$pair@HH@2@I@Z")
#pragma comment(linker, "/include:?has_weight_filler@InnerProductParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_0DL@GJHLJOPC@Cause?5unknown?3?5error?5caused?5by?5b@")
#pragma comment(linker, "/include:?kMomentumFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:??$_Dist_type@PAU?$pair@NH@std@@@std@@YAPAHPAU?$pair@NH@0@@Z")
#pragma comment(linker, "/include:??_R0?AV?$FlattenLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??_C@_0CL@EMHFIBGL@Number?5of?5axes?5of?5bottom?5blob?5mu@")
#pragma comment(linker, "/include:?value@?$is_reference_impl@V?$basic_istream@DU?$char_traits@D@std@@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VNetParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVNetParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$FilterLayer@N@caffe@@@boost@@YAXPAV?$FilterLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:__xmm@3ff00000000000003ff0000000000000")
#pragma comment(linker, "/include:??0domain_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$EuclideanLossLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_R4runtime_error@std@@6B@")
#pragma comment(linker, "/include:??$_Umove@PAV?$shared_ptr@V?$Net@M@caffe@@@boost@@@?$vector@V?$shared_ptr@V?$Net@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@IAEPAV?$shared_ptr@V?$Net@M@caffe@@@boost@@PAV23@00@Z")
#pragma comment(linker, "/include:?value@?$max_pow2_less@$0EA@$07@detail@boost@@2HB")
#pragma comment(linker, "/include:?DummyDataParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??_7?$PowerLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$MergeFromInnerLoop@VTypeHandler@?$RepeatedPtrField@VV1LayerParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@AAEXPAPAX0HH@Z")
#pragma comment(linker, "/include:??_B?1???$get_min_shift_value@M@detail@math@boost@@YAMXZ@51")
#pragma comment(linker, "/include:?_Erase@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??0date@gregorian@boost@@QAE@Vgreg_year@12@Vgreg_month@12@Vgreg_day@12@@Z")
#pragma comment(linker, "/include:??$?0V?$EltwiseLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$EltwiseLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?allocate@?$allocator@U?$pair@MH@std@@@std@@QAEPAU?$pair@MH@2@I@Z")
#pragma comment(linker, "/include:?BlobProto_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?ShareData@?$Blob@N@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?has_hinge_loss_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$construct@NABN@?$_Wrap_alloc@V?$allocator@N@std@@@std@@QAEXPANABN@Z")
#pragma comment(linker, "/include:??$_Swap_adl@H@std@@YAXAAH0@Z")
#pragma comment(linker, "/include:??_R4?$BaseDataLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??_R0?AVThresholdParameter@caffe@@@8")
#pragma comment(linker, "/include:?set_scale@DataParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?_Grow_to@?$vector@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@IBEII@Z")
#pragma comment(linker, "/include:??_C@_0BD@OKIBLMAH@datum_channels?5?$DO?50?$AA@")
#pragma comment(linker, "/include:?size@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$HingeLossLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_9InternalThread@caffe@@$B3AE")
#pragma comment(linker, "/include:?set_has_source@ImageDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?count@?$Blob@M@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??$_Move@AAPAVSliceParameter@caffe@@@std@@YA$$QAPAVSliceParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?has_engine@SPPParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R4?$Im2colLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$SplitLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?count@?$Blob@I@caffe@@QBEHHH@Z")
#pragma comment(linker, "/include:??$MakeCheckOpString@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$BY01$$CBD@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@AAY01$$CBDPBD@Z")
#pragma comment(linker, "/include:??1?$ArgMaxLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_G?$ImageDataLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_C@_0BF@IIDFAOII@?5already?5registered?4?$AA@")
#pragma comment(linker, "/include:?MergeFrom@HingeLossParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?layer_by_name@?$Net@N@caffe@@QBE?BV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$SPPLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$PowerLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?Swap@ImageDataParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@")
#pragma comment(linker, "/include:?mean_file@WindowDataParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bbad_format_string@io@2@@")
#pragma comment(linker, "/include:?add_dim@BlobShape@caffe@@QAEX_J@Z")
#pragma comment(linker, "/include:?kLossParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VNetParameter@caffe@@@std@@@std@@@std@@YAXPAVNetParameter@caffe@@0AAU?$_Wrap_alloc@V?$allocator@VNetParameter@caffe@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$SliceLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R4LayerParameter@caffe@@6B@")
#pragma comment(linker, "/include:??_G?$MSRAFiller@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$_Insert_nohint@AAU?$pair@$$CBU?$pair@HH@std@@H@std@@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBU?$pair@HH@std@@H@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@1@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$LogLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$DropoutLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_GDummyDataParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_E?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@WM@AEPAXI@Z")
#pragma comment(linker, "/include:?value@?$is_reference_impl@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?axis@InnerProductParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?blobs@V1LayerParameter@caffe@@QBEABVBlobProto@2@H@Z")
#pragma comment(linker, "/include:??$swap@PAVLogParameter@caffe@@@std@@YAXAAPAVLogParameter@caffe@@0@Z")
#pragma comment(linker, "/include:?infinity@?$numeric_limits@N@std@@SANXZ")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_GInnerProductParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?set_has_kernel_w@ConvolutionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$move@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABV21@@Z")
#pragma comment(linker, "/include:?find@?$char_traits@D@std@@SAPBDPBDIABD@Z")
#pragma comment(linker, "/include:??_R0?AV?$BaseConvolutionLayer@M@caffe@@@8")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@QAE@$$QAV01@@Z")
#pragma comment(linker, "/include:?_Destroy@?$vector@DV?$allocator@D@std@@@std@@IAEXPAD0@Z")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@PAV?$FlattenLayer@M@caffe@@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$?0VDB@db@caffe@@@shared_count@detail@boost@@QAE@PAVDB@db@caffe@@@Z")
#pragma comment(linker, "/include:??0?$PReLULayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?New@DummyDataParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$?0V?$SigmoidLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$SigmoidLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ")
#pragma comment(linker, "/include:?kStartFieldNumber@DescriptorProto_ReservedRange@protobuf@google@@2HB")
#pragma comment(linker, "/include:?exp_param@LayerParameter@caffe@@QBEABVExpParameter@2@XZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_pd@PAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@VNo_Op@?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@23@@detail@boost@@6B@")
#pragma comment(linker, "/include:?allocate@?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@QAEPAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@2@I@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$DeconvolutionLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@XZ")
#pragma comment(linker, "/include:??1?$BaseDataLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$AccuracyLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$_Construct@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@?$vector@HV?$allocator@H@std@@@std@@QAEXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z")
#pragma comment(linker, "/include:??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QBEABNXZ")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$DataTransformer@N@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??1?$SoftmaxLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?kLrPolicyFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$TanHLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??1?$SplitLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$TanHLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R4SigmoidParameter@caffe@@6B@")
#pragma comment(linker, "/include:?value@?$trait_impl1@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@HUdont_care@has_right_shift_impl@detail@boost@@$0A@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$_Umove@PAI@?$vector@IV?$allocator@_N@std@@@std@@IAEPAIPAI00@Z")
#pragma comment(linker, "/include:??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:??0?$vector@HV?$allocator@H@std@@@std@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?construct@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Net@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$AccuracyLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$swap@PAV?$Layer@N@caffe@@@std@@YAXAAPAV?$Layer@N@caffe@@0@Z")
#pragma comment(linker, "/include:?GetCachedSize@ReshapeParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?kKernelHFieldNumber@ConvolutionParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$DeconvolutionLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEXXZ")
#pragma comment(linker, "/include:?_Xlen@?$vector@MV?$allocator@M@std@@@std@@IBEXXZ")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$Filler@N@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??1?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?_Xlen@?$vector@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@IBEXXZ")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_C@_0CA@FKCGONHO@Check?5failed?3?5?$CBisnan?$CIlog_base?$CJ?5?$AA@")
#pragma comment(linker, "/include:??_B?1??Registry@?$LayerRegistry@M@caffe@@SAAAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@XZ@51")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@ArgMaxParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?TYPE_MESSAGE@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Type@23@B")
#pragma comment(linker, "/include:??$throw_exception@Vruntime_error@std@@@boost@@YAXABVruntime_error@std@@@Z")
#pragma comment(linker, "/include:??$?0V?$ReductionLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$ReductionLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$swap@PAVLossParameter@caffe@@@std@@YAXAAPAVLossParameter@caffe@@0@Z")
#pragma comment(linker, "/include:??$_Insert_at@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@1@1@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$BNLLLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_GMessage@protobuf@google@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$ArgMaxLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_R4?$ConcatLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?has_stable_prod_grad@EltwiseParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@$$QAV34@@Z")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$MemoryDataLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$ImageDataLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$?0V?$Layer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$Layer@N@caffe@@@Z")
#pragma comment(linker, "/include:?has_device_id@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??Bgreg_year@gregorian@boost@@QBEGXZ")
#pragma comment(linker, "/include:?plus@?$lcast_char_constants@D@detail@boost@@2DB")
#pragma comment(linker, "/include:??_R0?AVHDF5DataParameter@caffe@@@8")
#pragma comment(linker, "/include:??$?0V?$ThresholdLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$ThresholdLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$?0V?$ThresholdLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$ThresholdLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0BE@GKACGONG@Check?5failed?3?5data?5?$AA@")
#pragma comment(linker, "/include:?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??_R2?$ArgMaxLayer@N@caffe@@8")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$AbsValLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?Forward_gpu@?$ReshapeLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?IsInitialized@TanHParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?scale_data@?$Blob@N@caffe@@QAEXN@Z")
#pragma comment(linker, "/include:??$make_pair@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$vector@HV?$allocator@H@std@@@2@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@0@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV?$vector@HV?$allocator@H@std@@@0@@Z")
#pragma comment(linker, "/include:?set_has_weight_filler@InnerProductParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$get_smallest_value@M@detail@math@boost@@YAMABU?$bool_@$00@mpl@2@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$MemoryDataLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?ArgMaxParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$SilenceLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@ImageDataParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:?default_instance_@BlobProtoVector@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??$enable_error_info@Vtoo_few_args@io@boost@@@boost@@YA?AU?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@0@ABVtoo_few_args@io@0@@Z")
#pragma comment(linker, "/include:??_C@_0BL@GBJJKFNM@bottom?$FL2?$FN?9?$DOchannels?$CI?$CJ?5?$DN?$DN?51?$AA@")
#pragma comment(linker, "/include:?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$caffe_cpu_gemv@N@caffe@@YAXW4CBLAS_TRANSPOSE@@HHNPBN1NPAN@Z")
#pragma comment(linker, "/include:?MergeFrom@LRNParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$ReLULayer@M@caffe@@@boost@@YAXPAV?$ReLULayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?Clear@?$GenericTypeHandler@VNetStateRule@caffe@@@internal@protobuf@google@@SAXPAVNetStateRule@caffe@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$ReductionLayer@N@caffe@@8")
#pragma comment(linker, "/include:?push_back@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@2@@std@@QAEX$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@2@@Z")
#pragma comment(linker, "/include:?set_has_fg_threshold@WindowDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?value@?$operator_returns_Ret@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@GUdont_care@has_right_shift_impl@detail@boost@@$0A@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$TanHLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?kLossWeightFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$InnerProductLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$cast@VTypeHandler@?$RepeatedPtrField@VBlobProto@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@CAPAVBlobProto@caffe@@PAX@Z")
#pragma comment(linker, "/include:??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MH@std@@@std@@@std@@@std@@QAEAAV01@H@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$BNLLLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$Add@VTypeHandler@?$RepeatedPtrField@VBlobProto@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEPAVBlobProto@caffe@@PAV45@@Z")
#pragma comment(linker, "/include:??_R0?AV?$BaseConvolutionLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVContrastiveLossParameter@caffe@@@internal@protobuf@google@@YAPBVContrastiveLossParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?default_instance@LogParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$ArgMaxLayer@N@caffe@@@detail@boost@@QAE@PAV?$ArgMaxLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?_Grow_to@?$vector@NV?$allocator@N@std@@@std@@IBEII@Z")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@HingeLossParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$ReductionLayer@M@caffe@@8")
#pragma comment(linker, "/include:?Backward_cpu@?$SplitLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$FilterLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$FilterLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$EuclideanLossLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?data_at@?$Blob@N@caffe@@QBENHHHH@Z")
#pragma comment(linker, "/include:?ReductionParameter_ReductionOp_descriptor_@?A0x5e4fc710@caffe@@3PBVEnumDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?set_cpu_data@?$Blob@N@caffe@@QAEXPAN@Z")
#pragma comment(linker, "/include:??_R2DropoutParameter@caffe@@8")
#pragma comment(linker, "/include:?kLogParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?ParamSpec_DimCheckMode_IsValid@caffe@@YA_NH@Z")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@PAV12@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@V12@@std@@YAPAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??R?$mf0@XVInternalThread@caffe@@@_mfi@boost@@QBEXPAVInternalThread@caffe@@@Z")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@@Z")
#pragma comment(linker, "/include:??_C@_0O@OOONOKCP@?$CJ?$DL?5specified?5?$AA@")
#pragma comment(linker, "/include:?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z")
#pragma comment(linker, "/include:??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@$$QAH@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBHH@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAH@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$LogLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?New@InfogainLossParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??_7?$BNLLLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?_Kfn@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@IBEABHABU?$pair@$$CBHH@2@@Z")
#pragma comment(linker, "/include:??_7?$EltwiseLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PAM@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_C@_0BE@DDILPJPE@Unknown?5caffe?5mode?4?$AA@")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@$$QAV23@@Z")
#pragma comment(linker, "/include:?mutable_dummy_data_param@LayerParameter@caffe@@QAEPAVDummyDataParameter@2@XZ")
#pragma comment(linker, "/include:?top@V1LayerParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z")
#pragma comment(linker, "/include:?set_has_width@Datum@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??G?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QBEHABV01@@Z")
#pragma comment(linker, "/include:??0?$variate_generator@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@V?$uniform_real@N@3@@random@boost@@QAE@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@V?$uniform_real@N@2@@Z")
#pragma comment(linker, "/include:??1?$RepeatedPtrField@VFillerParameter@caffe@@@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:?TYPE_ENUM@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Type@23@B")
#pragma comment(linker, "/include:??A?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@QBEABVMat@cv@@I@Z")
#pragma comment(linker, "/include:?GetCachedSize@SolverParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??0error_code@system@boost@@QAE@HABVerror_category@12@@Z")
#pragma comment(linker, "/include:?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ")
#pragma comment(linker, "/include:___isa_available_default")
#pragma comment(linker, "/include:??0Timer@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?GetCachedSize@MVNParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?_Buynode0@?$_Tree_buy@U?$pair@$$CBHH@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??$fpclassify_imp@M@detail@math@boost@@YAHMUieee_copy_all_bits_tag@012@@Z")
#pragma comment(linker, "/include:__CT??_R0?AVclone_base@exception_detail@boost@@@8??0clone_base@exception_detail@boost@@QAE@ABV012@@Z40404")
#pragma comment(linker, "/include:??_C@_0N@GDFMOLGN@Unknown?5Norm?$AA@")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?is_signed@?$numeric_limits@_W@std@@2_NB")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$Blob@N@caffe@@@detail@boost@@QAE@PAV?$Blob@N@caffe@@@Z")
#pragma comment(linker, "/include:??$OwnInternal@VContrastiveLossParameter@caffe@@@Arena@protobuf@google@@AAEXPAVContrastiveLossParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?type@?$DeconvolutionLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?pad@ConvolutionParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?max_size@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@VSyncedMemory@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@VSyncedMemory@caffe@@@1@PAVSyncedMemory@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?New@DropoutParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R4?$Im2colLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$EuclideanLossLayer@N@caffe@@@detail@boost@@QAE@PAV?$EuclideanLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?ticks@?$time_duration@V0posix_time@boost@@V?$time_resolution_traits@Utime_resolution_traits_adapted64_impl@date_time@boost@@$04$0PECEA@$05H@date_time@2@@date_time@boost@@QBE_JXZ")
#pragma comment(linker, "/include:?_Xlen@?$vector@VNetParameter@caffe@@V?$allocator@VNetParameter@caffe@@@std@@@std@@IBEXXZ")
#pragma comment(linker, "/include:?value@?$is_function_impl@V?$token_iterator@Voffset_separator@boost@@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R4FunctionClosure0@internal@protobuf@google@@6B@")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$ThresholdLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?New@AccuracyParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?set_bg_threshold@WindowDataParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$ThresholdLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?ELTWISE@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:?xor_mask@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@2IB")
#pragma comment(linker, "/include:??$group_last@U?$_Smanip@_J@std@@ABN@detail@io@boost@@YA?AU?$group1@ABN@012@ABU?$group2@U?$_Smanip@_J@std@@ABN@012@@Z")
#pragma comment(linker, "/include:??A?$vector@NV?$allocator@N@std@@@std@@QAEAANI@Z")
#pragma comment(linker, "/include:??1?$DataTransformer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R4?$ExpLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?swap@?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:??$get_pointer@Vlocale@std@@@boost@@YAPAVlocale@std@@AAV?$optional@Vlocale@std@@@0@@Z")
#pragma comment(linker, "/include:?allocate@?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@QAEPAV?$shared_ptr@V?$Net@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:??$_Umove@PAPAV?$Blob@M@caffe@@@?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@IAEPAPAV?$Blob@M@caffe@@PAPAV23@00@Z")
#pragma comment(linker, "/include:??$?0V?$DeconvolutionLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$DeconvolutionLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$SigmoidCrossEntropyLossLayer@M@caffe@@8")
#pragma comment(linker, "/include:?unknown_fields@SigmoidParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?SetCachedSize@ImageDataParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:??A?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@QAEAAPAV?$Blob@N@caffe@@I@Z")
#pragma comment(linker, "/include:??C?$shared_ptr@VLayerParameter@caffe@@@boost@@QBEPAVLayerParameter@caffe@@XZ")
#pragma comment(linker, "/include:?FromProto@?$Blob@N@caffe@@QAEXABVBlobProto@2@_N@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$TanHLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$DropoutLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?mutable_unknown_fields@DropoutParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@1@PAPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@1@AAPAU31@@Z")
#pragma comment(linker, "/include:??$vAbs@M@@YAXHPBMPAM@Z")
#pragma comment(linker, "/include:??$?0V?$ReductionLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$ReductionLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?unknown_fields@SliceParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?value@?$trait_impl1@V?$basic_istream@DU?$char_traits@D@std@@@std@@HUdont_care@has_right_shift_impl@detail@boost@@$0A@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$caffe_sign@N@caffe@@YACN@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$EltwiseLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?SharedDtor@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Uninit_def_fill_n@PAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@IV?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@V12@@std@@YAXPAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@IAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@VLayerParameter@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?MinBottomBlobs@?$FilterLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?_Destroy@?$vector@V?$shared_ptr@V?$Net@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@IAEXPAV?$shared_ptr@V?$Net@N@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@AAE@ABV012@Uclone_tag@012@@Z")
#pragma comment(linker, "/include:??0StaticDescriptorInitializer_caffe_2eproto@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$SoftmaxWithLossLayer@M@caffe@@8")
#pragma comment(linker, "/include:?MergeFrom@ThresholdParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??_G?$BNLLLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R3bad_year@gregorian@boost@@8")
#pragma comment(linker, "/include:?Clear@?$RepeatedField@M@protobuf@google@@QAEXXZ")
#pragma comment(linker, "/include:?UpdateDebugInfo@?$Net@N@caffe@@IAEXH@Z")
#pragma comment(linker, "/include:?unknown_fields@ExpParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?MaxBottomBlobs@?$Layer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?pos_infinity@?$int_adapter@_J@date_time@boost@@SA?BV123@XZ")
#pragma comment(linker, "/include:??_R0?AV?$ArgMaxLayer@M@caffe@@@8")
#pragma comment(linker, "/include:??$reset@V?$SplitLayer@M@caffe@@@?$shared_ptr@V?$SplitLayer@M@caffe@@@boost@@QAEXPAV?$SplitLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0M@ODJNIGHI@L1?5norm?5?$DN?5?$CI?$AA@")
#pragma comment(linker, "/include:?set_kernel_w@PoolingParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Net@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?default_instance_@SolverParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@LossParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?AutoTopBlobs@?$LossLayer@N@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??_C@_04BMHKPPID@poly?$AA@")
#pragma comment(linker, "/include:?has_data@Datum@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?descriptor@ReshapeParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?mutable_hdf5_output_param@V1LayerParameter@caffe@@QAEPAVHDF5OutputParameter@2@XZ")
#pragma comment(linker, "/include:?a_y@?$br_mul@$00$0PECEA@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:??0?$NesterovSolver@N@caffe@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$Im2colLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?RestoreSolverState@?$SGDSolver@N@caffe@@MAEXABVSolverState@2@@Z")
#pragma comment(linker, "/include:?ByteSize@ExpParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@NetState@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??0?$RepeatedPtrField@VLayerParameter@caffe@@@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:?DataLayerSetUp@?$MemoryDataLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?has_dummy_data_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?_Key@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?PythonParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??_C@_0BD@FCMBGEPF@V0LayerParameter?3?5?$AA@")
#pragma comment(linker, "/include:??_R4AccuracyParameter@caffe@@6B@")
#pragma comment(linker, "/include:??_C@_07NPEOMGOB@to?5copy?$AA@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$MemoryDataLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?get_allocator@?$vector@NV?$allocator@N@std@@@std@@QBE?AV?$allocator@N@2@XZ")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$AbsValLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_7?$ConvolutionLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$TanHLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?kShuffleFieldNumber@ImageDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?set_engine@TanHParameter@caffe@@QAEXW4TanHParameter_Engine@2@@Z")
#pragma comment(linker, "/include:?MaxTopBlobs@?$PoolingLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$destroy@V?$vector@MV?$allocator@M@std@@@std@@@?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@QAEXPAV?$vector@MV?$allocator@M@std@@@1@@Z")
#pragma comment(linker, "/include:??$forward@PAVmutex@boost@@@std@@YA$$QAPAVmutex@boost@@AAPAV12@@Z")
#pragma comment(linker, "/include:?set_has_mean@FillerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_7PReLUParameter@caffe@@6B@")
#pragma comment(linker, "/include:??_C@_0DD@FPFDJAJN@Note?5that?5future?5Caffe?5releases?5@")
#pragma comment(linker, "/include:?has_scale@LogParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??0?$vector@IV?$allocator@_N@std@@@std@@QAE@$$QAV01@@Z")
#pragma comment(linker, "/include:??$_Iter_cat@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?has_beta@LRNParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R3?$SilenceLayer@M@caffe@@8")
#pragma comment(linker, "/include:?kStrideFieldNumber@ConvolutionParameter@caffe@@2HB")
#pragma comment(linker, "/include:?ByteSize@HDF5DataParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$EuclideanLossLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?rng@Generator@RNG@Caffe@caffe@@QAEPAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@XZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$ImageDataLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?accuracy_param@LayerParameter@caffe@@QBEABVAccuracyParameter@2@XZ")
#pragma comment(linker, "/include:?size@?$vector@NV?$allocator@N@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@QAEPAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?set_is_color@ImageDataParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:??1?$SPPLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VTransformationParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVTransformationParameter@caffe@@@Z")
#pragma comment(linker, "/include:??$group_head@U?$_Smanip@_J@std@@ABM@detail@io@boost@@YA?AU?$group1@U?$_Smanip@_J@std@@@012@ABU?$group2@U?$_Smanip@_J@std@@ABM@012@@Z")
#pragma comment(linker, "/include:?has_contrastive_loss_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?diff_at@?$Blob@H@caffe@@QBEHABV?$vector@HV?$allocator@H@std@@@std@@@Z")
#pragma comment(linker, "/include:??_C@_0FH@JLKGOFBA@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??_E?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@$4PPPPPPPM@CI@AEPAXI@Z")
#pragma comment(linker, "/include:?kDetFgFractionFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@2@@Z")
#pragma comment(linker, "/include:?Clear@HingeLossParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??$Creator_EltwiseLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?GetTagFieldNumber@WireFormatLite@internal@protobuf@google@@SAHI@Z")
#pragma comment(linker, "/include:??_7?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??_C@_0BA@HKCPOJHF@?5?$CIknown?5types?3?5?$AA@")
#pragma comment(linker, "/include:?val@?1???$get_min_shift_value@N@detail@math@boost@@YANXZ@4NB")
#pragma comment(linker, "/include:??$?9V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@V01@@std@@YA_NABV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@0@0@Z")
#pragma comment(linker, "/include:?set_has_stride_w@ConvolutionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??$CreateInternal@VBlobShape@caffe@@@Arena@protobuf@google@@AAEPAVBlobShape@caffe@@_N@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@VCaffe@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_R4?$AccuracyLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$ReLULayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??$construct@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@1@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@1@$$QAU31@@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$SoftmaxLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@QAE@ABV?$allocator@PAV?$Blob@N@caffe@@@1@@Z")
#pragma comment(linker, "/include:??0?$FilterLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??_R3?$XavierFiller@N@caffe@@8")
#pragma comment(linker, "/include:?mutable_image_data_param@LayerParameter@caffe@@QAEPAVImageDataParameter@2@XZ")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VWindowDataParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVWindowDataParameter@caffe@@@Z")
#pragma comment(linker, "/include:?set_slice_dim@SliceParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@ContrastiveLossParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$FilterLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?kTestStateFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:?flag@?$fp_traits_non_native@OUdouble_precision@detail@math@boost@@@detail@math@boost@@2_KB")
#pragma comment(linker, "/include:?num_output@InnerProductParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?WriteVarint32@CodedOutputStream@io@protobuf@google@@QAEXI@Z")
#pragma comment(linker, "/include:??_C@_0CH@GBAEPKOA@ExactNumBottomBlobs?$CI?$CJ?5?$DN?$DN?5bottom?4@")
#pragma comment(linker, "/include:?Forward_cpu@?$PowerLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?end@?$vector@MV?$allocator@M@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@$$QAU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBU?$pair@HH@std@@H@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??$?0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tuple_val@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@Z")
#pragma comment(linker, "/include:?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??$swap@PAV?$SplitLayer@M@caffe@@@std@@YAXAAPAV?$SplitLayer@M@caffe@@0@Z")
#pragma comment(linker, "/include:??1bad_format_string@io@boost@@UAE@XZ")
#pragma comment(linker, "/include:?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?GetMetadata@FillerParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PAV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?set_has_rand_skip@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?Reserve@?$RepeatedField@_J@protobuf@google@@QAEXH@Z")
#pragma comment(linker, "/include:??1system_error@system@boost@@UAE@XZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$LRNLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$LRNLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?clone@?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:?kPadHFieldNumber@ConvolutionParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R3?$PoolingLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:?SIGN_N@?$ratio@$00$0CHBA@@boost@@0_JB")
#pragma comment(linker, "/include:?width@?$MemoryDataLayer@N@caffe@@QAEHXZ")
#pragma comment(linker, "/include:??_C@_0DA@BPHFEEOJ@top_k_?5?$DM?$DN?5bottom?$FL0?$FN?9?$DOcount?$CI?$CJ?5?1?5b@")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$AbsValLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$swap@D$0BA@@std@@YAXAAY0BA@D0@Z")
#pragma comment(linker, "/include:?ReshapeLike@?$Blob@M@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$SoftmaxWithLossLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?WriteStringToArray@WireFormatLite@internal@protobuf@google@@SAPAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z")
#pragma comment(linker, "/include:??_7?$InfogainLossLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?value@?$trait_impl@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@FUdont_care@has_right_shift_impl@detail@boost@@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R4thread_exception@boost@@6B@")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$WindowDataLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$ImageDataLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?_Pop_back_n@?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@QAEXI@Z")
#pragma comment(linker, "/include:??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?has_quiet_NaN@_Num_float_base@std@@2_NB")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@@std@@YAXPAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?value@?$alignment_of_impl@H@detail@boost@@2IB")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$SliceLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV31@@Z")
#pragma comment(linker, "/include:??0?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?InputDebugInfo@?$Net@M@caffe@@IAEXH@Z")
#pragma comment(linker, "/include:?mutable_mean_file@WindowDataParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?Engine_MAX@SPPParameter@caffe@@2W4SPPParameter_Engine@2@B")
#pragma comment(linker, "/include:??_C@_0BG@GKFDCDEK@blob?9?$DOnum_axes?$CI?$CJ?5?$DN?$DN?54?$AA@")
#pragma comment(linker, "/include:?level@NetState@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?Reshape@?$EltwiseLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?data_at@?$Blob@H@caffe@@QBEHABV?$vector@HV?$allocator@H@std@@@std@@@Z")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@QAEXPAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@2@I@Z")
#pragma comment(linker, "/include:??$_Allocate@PAV?$FlattenLayer@N@caffe@@@std@@YAPAPAV?$FlattenLayer@N@caffe@@IPAPAV12@@Z")
#pragma comment(linker, "/include:??_R3?$SplitLayer@M@caffe@@8")
#pragma comment(linker, "/include:?set_encoded@Datum@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:?MergeFrom@FillerParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?value@?$is_error_code_enum@W4errc_t@errc@system@boost@@@system@boost@@2_NB")
#pragma comment(linker, "/include:?max_size@?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?_Inside@?$vector@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@IBE_NPBV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVLogParameter@caffe@@@internal@protobuf@google@@YAPBVLogParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?deallocate@?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@QAEXPAV?$vector@MV?$allocator@M@std@@@2@I@Z")
#pragma comment(linker, "/include:?vdDiv@@YAXHPBN0PAN@Z")
#pragma comment(linker, "/include:??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??$OwnInternal@VWindowDataParameter@caffe@@@Arena@protobuf@google@@AAEXPAVWindowDataParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:??$?0V?$EuclideanLossLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$EuclideanLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?LRNParameter_NormRegion_descriptor@caffe@@YAPBVEnumDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?min_level@NetStateRule@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?category@error_code@std@@QBEABVerror_category@2@XZ")
#pragma comment(linker, "/include:??$raise_error@Vdomain_error@std@@M@detail@policies@math@boost@@YAXPBD0ABM@Z")
#pragma comment(linker, "/include:?type@?$MultinomialLogisticLossLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??_R3?$PositiveUnitballFiller@N@caffe@@8")
#pragma comment(linker, "/include:??_R4?$HingeLossLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?bias_filler@InnerProductParameter@caffe@@QBEABVFillerParameter@2@XZ")
#pragma comment(linker, "/include:??_C@_08EPJLHIJG@bad?5cast?$AA@")
#pragma comment(linker, "/include:?_Assign_rv@?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z")
#pragma comment(linker, "/include:?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?clear_has_mean_file@DataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$SliceLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?_Destroy@?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@IAEXPAV?$vector@_NV?$allocator@_N@std@@@2@0@Z")
#pragma comment(linker, "/include:?LossParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VExpParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVExpParameter@caffe@@@Z")
#pragma comment(linker, "/include:?end@?$_Iosb@H@std@@2W4_Seekdir@12@B")
#pragma comment(linker, "/include:??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@XZ")
#pragma comment(linker, "/include:?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?Engine_MAX@SigmoidParameter@caffe@@2W4SigmoidParameter_Engine@2@B")
#pragma comment(linker, "/include:??_C@_0CL@OJGKHALF@end_axis?5?$DN?5axis?5?$CL?5num_axes?5is?5ou@")
#pragma comment(linker, "/include:??_C@_03OLLFPDD@LRN?$AA@")
#pragma comment(linker, "/include:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@PowerParameter@caffe@@8")
#pragma comment(linker, "/include:??_D?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@QAEXXZ")
#pragma comment(linker, "/include:?kBiasTermFieldNumber@InnerProductParameter@caffe@@2HB")
#pragma comment(linker, "/include:??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QAE@PANPBU_Container_base0@1@@Z")
#pragma comment(linker, "/include:?data_at@?$Blob@M@caffe@@QBEMHHHH@Z")
#pragma comment(linker, "/include:?New@InfogainLossParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_GSigmoidParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?mutable_net_param@SolverParameter@caffe@@QAEPAVNetParameter@2@XZ")
#pragma comment(linker, "/include:??_C@_0FF@LNNNOCOD@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?INFOGAIN_LOSS@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:?SharedCtor@NetStateRule@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?Init@?$Net@N@caffe@@QAEXABVNetParameter@2@@Z")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@MemoryDataParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??0FunctionClosure0@internal@protobuf@google@@QAE@P6AXXZ_N@Z")
#pragma comment(linker, "/include:??_R2?$SoftmaxWithLossLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_C@_0DK@CIKBCKFP@Check?5failed?3?5ReadProtoFromBinar@")
#pragma comment(linker, "/include:??_C@_0BK@NMBICPBJ@count_?5?$DN?$DN?5top?$FLi?$FN?9?$DOcount?$CI?$CJ?$AA@")
#pragma comment(linker, "/include:?size@?$RepeatedPtrField@VBlobProto@caffe@@@protobuf@google@@QBEHXZ")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@@std@@YAXPAPAV?$FlattenLayer@M@caffe@@0AAU?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_R2DataParameter@caffe@@8")
#pragma comment(linker, "/include:??_R0?AVTransformationParameter@caffe@@@8")
#pragma comment(linker, "/include:?max_size@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??0SolverParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0BJ@PDNFJNFC@concat_dim?5out?5of?5range?4?$AA@")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?kNoStandardDescriptorAccessorFieldNumber@MessageOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:??$swap@PAV?$Blob@M@caffe@@@std@@YAXAAPAV?$Blob@M@caffe@@0@Z")
#pragma comment(linker, "/include:?lowercase_e@?$lcast_char_constants@D@detail@boost@@2DB")
#pragma comment(linker, "/include:?kSourceFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@QAE@$$QAV01@@Z")
#pragma comment(linker, "/include:??0?$vector@HV?$allocator@H@std@@@std@@QAE@$$QAV01@@Z")
#pragma comment(linker, "/include:?kArgmaxParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??0?$shared_ptr@Vthread@boost@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?value@?$sign_wknd@_J$0DLJKMKAA@@aux@mpl@boost@@2_JB")
#pragma comment(linker, "/include:??0?$allocator@PAV?$Blob@M@caffe@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?LayerSetUp@?$BaseConvolutionLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?InsertSplits@caffe@@YAXABVNetParameter@1@PAV21@@Z")
#pragma comment(linker, "/include:??$OwnInternal@VReLUParameter@caffe@@@Arena@protobuf@google@@AAEXPAVReLUParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$BNLLLayer@M@caffe@@8")
#pragma comment(linker, "/include:??1_System_error_category@std@@UAE@XZ")
#pragma comment(linker, "/include:?_Tidy@?$_Tree@V?$_Tmap_traits@PBXUtss_data_node@detail@boost@@U?$less@PBX@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@5@$0A@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:?_Destroy@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@IAEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@0@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@too_many_args@io@boost@@8")
#pragma comment(linker, "/include:??1Timer@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_C@_0BL@GNAFMNKJ@bottom?$FL0?$FN?9?$DOnum_axes?$CI?$CJ?5?$DO?$DN?52?$AA@")
#pragma comment(linker, "/include:??$_Move@AAPAVLogParameter@caffe@@@std@@YA$$QAPAVLogParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?default_instance@ContrastiveLossParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??_C@_0EM@CPFCCFNJ@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@std@@@std@@YAXPAV?$vector@_NV?$allocator@_N@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_C@_0BI@DCIKOMC@concat_axis_?5?$DM?5num_axes?$AA@")
#pragma comment(linker, "/include:__CT??_R0?AV?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@@8??0?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z44")
#pragma comment(linker, "/include:?_Kfn@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@IBEABU?$pair@HH@2@ABU?$pair@$$CBU?$pair@HH@std@@U12@@2@@Z")
#pragma comment(linker, "/include:?set_has_batch_size@HDF5DataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_7?$AccuracyLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?Add@?$RepeatedField@I@protobuf@google@@QAEXABI@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$AccuracyLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABV21@@Z")
#pragma comment(linker, "/include:??$swap@PAVFlattenParameter@caffe@@@std@@YAXAAPAVFlattenParameter@caffe@@0@Z")
#pragma comment(linker, "/include:?protobuf_AssignDesc_caffe_2eproto@caffe@@YAXXZ")
#pragma comment(linker, "/include:?New@?$GenericTypeHandler@VNetState@caffe@@@internal@protobuf@google@@SAPAVNetState@caffe@@PAVArena@34@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$ConcatLayer@N@caffe@@@boost@@YAXPAV?$ConcatLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?Clear@ThresholdParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?bias_term@InnerProductParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?kStateFieldNumber@NetParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$Own@VSoftmaxParameter@caffe@@@Arena@protobuf@google@@QAEXPAVSoftmaxParameter@caffe@@@Z")
#pragma comment(linker, "/include:??$_Rechecked@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@PAV12@@std@@YAAAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@AAPAV10@PAV10@@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$SigmoidCrossEntropyLossLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?max_size@?$vector@V?$shared_ptr@V?$Net@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_E?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@$4PPPPPPPM@DA@AEPAXI@Z")
#pragma comment(linker, "/include:??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R2?$MVNLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_C@_0BN@PMBIFMBG@source_layer?4top_size?$CI?$CJ?5?$DN?$DN?51?$AA@")
#pragma comment(linker, "/include:__TI7?AV?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:?default_instance@ArgMaxParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??1?$PowerLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$HingeLossLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$ExpLayer@M@caffe@@8")
#pragma comment(linker, "/include:?Check_LTImpl@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HHPBD@Z")
#pragma comment(linker, "/include:??$swap@PAV?$ConcatLayer@N@caffe@@@std@@YAXAAPAV?$ConcatLayer@N@caffe@@0@Z")
#pragma comment(linker, "/include:??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?Norm_ARRAYSIZE@HingeLossParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$?0V?$Blob@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$Blob@M@caffe@@@Z")
#pragma comment(linker, "/include:?GetMetadata@Datum@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?kTagTypeBits@WireFormatLite@internal@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_C@_0BF@LBBAEMHI@Check?5failed?3?5false?5?$AA@")
#pragma comment(linker, "/include:?clear_mean_file@DataParameter@caffe@@QAEXXZ")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$SoftmaxLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?_Adopt@_Iterator_base0@std@@QAEXPBX@Z")
#pragma comment(linker, "/include:?set_has_shuffle@HDF5DataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?kTrainNetParamFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PAUbad_month@gregorian@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?digits10@?$numeric_limits@C@std@@2HB")
#pragma comment(linker, "/include:?tempering_d@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@2IB")
#pragma comment(linker, "/include:?capacity@?$vector@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?value@?$operator_returns_void@V?$basic_istream@DU?$char_traits@D@std@@@std@@_J@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??1?$_Tree_comp@$0A@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$ArgMaxLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z")
#pragma comment(linker, "/include:?IsInitialized@DataParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?kDefaultMaxBlockSize@ArenaOptions@protobuf@google@@0IB")
#pragma comment(linker, "/include:?tempering_c@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@2IB")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R3?$PowerLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:??1?$RepeatedPtrField@VParamSpec@caffe@@@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$NeuronLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??0?$variate_generator@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@V?$bernoulli_distribution@N@23@@random@boost@@QAE@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@V?$bernoulli_distribution@N@12@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@VGenerator@RNG@Caffe@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@NetStateRule@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??0?$LogLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??$_Ptr_cat@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@0@Z")
#pragma comment(linker, "/include:??$swap@PAVLRNParameter@caffe@@@std@@YAXAAPAVLRNParameter@caffe@@0@Z")
#pragma comment(linker, "/include:??$?0V?$Im2colLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$Im2colLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$ConcatLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?shape@?$Blob@M@caffe@@QBEABV?$vector@HV?$allocator@H@std@@@std@@XZ")
#pragma comment(linker, "/include:??$forward@U?$pair@HH@std@@@std@@YA$$QAU?$pair@HH@0@AAU10@@Z")
#pragma comment(linker, "/include:?cpu_data@?$Blob@M@caffe@@QBEPBMXZ")
#pragma comment(linker, "/include:?kOptionsFieldNumber@FileDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?BackwardTo@?$Net@N@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?CrossChannelBackward_gpu@?$LRNLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?MinBottomBlobs@?$ConcatLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?alpha@LRNParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:??$_Allocate@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@IPAV12@@Z")
#pragma comment(linker, "/include:??_R0?AVformat_error@io@boost@@@8")
#pragma comment(linker, "/include:?value@FillerParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$LossLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?kDataFieldNumber@Datum@caffe@@2HB")
#pragma comment(linker, "/include:??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0DE@MPPJGNAE@Must?5specify?5?8channels?8?5once?0?5or@")
#pragma comment(linker, "/include:?Reshape@?$Blob@M@caffe@@QAEXABV?$vector@HV?$allocator@H@std@@@std@@@Z")
#pragma comment(linker, "/include:??0HDF5DataParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?HingeLossParameter_Norm_IsValid@caffe@@YA_NH@Z")
#pragma comment(linker, "/include:??$_Move@AAPAVMVNParameter@caffe@@@std@@YA$$QAPAVMVNParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?kNameFieldNumber@DescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?_Tidy@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@IAEXXZ")
#pragma comment(linker, "/include:??_7?$LRNLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??C?$shared_ptr@V?$SplitLayer@N@caffe@@@boost@@QBEPAV?$SplitLayer@N@caffe@@XZ")
#pragma comment(linker, "/include:?is_signed@?$numeric_limits@G@std@@2_NB")
#pragma comment(linker, "/include:?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QBEPBMXZ")
#pragma comment(linker, "/include:?EqualNumBottomTopBlobs@?$Layer@M@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?set_has_dropout_ratio@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z")
#pragma comment(linker, "/include:?SharedCtor@LossParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?FlattenParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??7?$optional@Vlocale@std@@@boost@@QBE_NXZ")
#pragma comment(linker, "/include:??0?$MemoryDataLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?value@?$is_function_impl@V?$duration@_JV?$ratio@$00$0JIJGIA@@boost@@@chrono@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?kNormalizeFieldNumber@LossParameter@caffe@@2HB")
#pragma comment(linker, "/include:?gInstantiationGuardConcatLayer@caffe@@3DA")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??_C@_0CE@MLNHPMGG@output?5count?5must?5match?5input?5co@")
#pragma comment(linker, "/include:??$swap@PAVFillerParameter@caffe@@@std@@YAXAAPAVFillerParameter@caffe@@0@Z")
#pragma comment(linker, "/include:?gcd_n1_n2@?$ratio_divide@V?$ratio@$00$0JIJGIA@@boost@@V?$ratio@$00$0DOI@@2@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z")
#pragma comment(linker, "/include:??_R4MessageLite@protobuf@google@@6B@")
#pragma comment(linker, "/include:??_C@_07MPNHODIJ@dropout?$AA@")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@IBEXPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:?axis@SoftmaxParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?Forward_gpu@?$ConvolutionLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?PReLUParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?unknown_fields@DummyDataParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?is_modulo@?$numeric_limits@_N@std@@2_NB")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@VGenerator@RNG@Caffe@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?function@?1???$float_prior_imp@MU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@math@boost@@@detail@math@boost@@YAMABMABU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@23@@Z@4PBDB")
#pragma comment(linker, "/include:?has_bg_threshold@WindowDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??0list0@_bi@boost@@QAE@XZ")
#pragma comment(linker, "/include:?_Assign_rv@?$vector@MV?$allocator@M@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$0A@@2@@Z")
#pragma comment(linker, "/include:??A?$map@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@@std@@QAEAAU?$pair@HH@1@ABU21@@Z")
#pragma comment(linker, "/include:??$_Move@AAD@std@@YA$$QADAAD@Z")
#pragma comment(linker, "/include:??1?$SGDSolver@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@NetState@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z")
#pragma comment(linker, "/include:??$?6DU?$char_traits@D@std@@ABM@detail@io@boost@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV34@ABU?$group1@ABM@012@@Z")
#pragma comment(linker, "/include:??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z")
#pragma comment(linker, "/include:??0?$allocator@I@std@@QAE@XZ")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@U?$pair@NH@std@@@std@@@std@@SAIABV?$allocator@U?$pair@NH@std@@@2@@Z")
#pragma comment(linker, "/include:?kLevelFieldNumber@NetState@caffe@@2HB")
#pragma comment(linker, "/include:??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z")
#pragma comment(linker, "/include:?kEltwiseParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?Restore@?$Solver@M@caffe@@QAEXPBD@Z")
#pragma comment(linker, "/include:??1?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAE@XZ")
#pragma comment(linker, "/include:??1?$vector@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?has_value@FillerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?_Pdif@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@0@Z")
#pragma comment(linker, "/include:??0clone_base@exception_detail@boost@@QAE@XZ")
#pragma comment(linker, "/include:?value@?$lcast_src_length@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@X@detail@boost@@2IB")
#pragma comment(linker, "/include:??$_Move@AAPAURep@?$RepeatedField@I@protobuf@google@@@std@@YA$$QAPAURep@?$RepeatedField@I@protobuf@google@@AAPAU1234@@Z")
#pragma comment(linker, "/include:?unknown_fields@NetStateRule@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?min@?$simple_exception_policy@G$00$0BP@Ubad_day_of_month@gregorian@boost@@@CV@boost@@SAGXZ")
#pragma comment(linker, "/include:??_7?$basic_fstream@DU?$char_traits@D@std@@@std@@6B@")
#pragma comment(linker, "/include:?const_max@?$integer_traits_base@H$0?IAAAAAAA@$0HPPPPPPP@@detail@boost@@2HB")
#pragma comment(linker, "/include:??_C@_0BM@HMFFPCFB@Amount?5of?5context?5padding?3?5?$AA@")
#pragma comment(linker, "/include:??0?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@1@@Z")
#pragma comment(linker, "/include:??_7ReshapeParameter@caffe@@6B@")
#pragma comment(linker, "/include:??_R4?$ArgMaxLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?push_back@?$vector@PAV?$FlattenLayer@M@caffe@@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@QAEX$$QAPAV?$FlattenLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$ExpLayer@N@caffe@@8")
#pragma comment(linker, "/include:?Reshape@?$AccuracyLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$DummyDataLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_C@_0BF@FJNEKHMH@input_width?5?$DO?$DN?5width?$AA@")
#pragma comment(linker, "/include:?_Tidy@?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:?SharedDtor@NetState@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??0ArgMaxParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?Swap@ContrastiveLossParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:?SigmoidParameter_Engine_IsValid@caffe@@YA_NH@Z")
#pragma comment(linker, "/include:??_7thread_exception@boost@@6B@")
#pragma comment(linker, "/include:??1?$EltwiseLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?NewFromPrototype@?$GenericTypeHandler@VLayerParameter@caffe@@@internal@protobuf@google@@SAPAVLayerParameter@caffe@@PBV56@PAVArena@34@@Z")
#pragma comment(linker, "/include:?release@?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@AAEXXZ")
#pragma comment(linker, "/include:?mutable_unknown_fields@MemoryDataParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?height@DummyDataParameter@caffe@@QBEIH@Z")
#pragma comment(linker, "/include:?get@?$value@PAVInternalThread@caffe@@@_bi@boost@@QAEAAPAVInternalThread@caffe@@XZ")
#pragma comment(linker, "/include:?value@?$is_member_function_pointer_impl@$$CBX@detail@boost@@2_NB")
#pragma comment(linker, "/include:?_Pop_back_n@?$vector@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@QAEXI@Z")
#pragma comment(linker, "/include:?stride_h@ConvolutionParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?MVN@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??$_Buynode_if_nil@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@PAU21@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@@Z")
#pragma comment(linker, "/include:?set_has_bias_filler@InnerProductParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$MemoryDataLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@U?$pair@MH@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??1HDF5DataParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?not_eof@?$char_traits@D@std@@SAHABH@Z")
#pragma comment(linker, "/include:?num@?$ratio@$00$0DLJKMKAA@@boost@@2_JB")
#pragma comment(linker, "/include:??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@QAEAAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$WindowDataLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@0@AAU10@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@VLayerParameter@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@VLayerParameter@caffe@@@1@PAVLayerParameter@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$DropoutLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?DataParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?coeff@ReductionParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?set_alpha@LRNParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?InitAsDefaultInstance@ArgMaxParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?Backward_gpu@?$ConcatLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?SoftmaxParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?InternalSwap@NetParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?value@?$int_@$0N@@mpl@boost@@2HB")
#pragma comment(linker, "/include:??1?$DataLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$_Move@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@@Z")
#pragma comment(linker, "/include:??_R4PReLUParameter@caffe@@6B@")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ")
#pragma comment(linker, "/include:??_C@_0CO@GCCGAIGE@Timer?5has?5never?5been?5run?5before?5@")
#pragma comment(linker, "/include:?Clear@ReshapeParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??1SoftmaxParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$?0V?$ImageDataLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$ImageDataLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?SetCachedSize@TanHParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$Net@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$Net@M@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?Reshape@?$Blob@M@caffe@@QAEXHHHH@Z")
#pragma comment(linker, "/include:??0?$bernoulli_distribution@N@random@boost@@QAE@ABN@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAM0AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?UnsafeArenaSwap@?$RepeatedPtrField@VBlobShape@caffe@@@protobuf@google@@QAEXPAV123@@Z")
#pragma comment(linker, "/include:??1error_category@std@@UAE@XZ")
#pragma comment(linker, "/include:??_R4?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??1?$MSRAFiller@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?kernel_size@PoolingParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??_R2bad_exception_@exception_detail@boost@@8")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@VLayerParameter@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$SigmoidLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??0?$vector@HV?$allocator@H@std@@@std@@QAE@IABH@Z")
#pragma comment(linker, "/include:??_C@_08EJGNKGHL@end?5?$DO?$DN?50?$AA@")
#pragma comment(linker, "/include:??$_Umove@PAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@@?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@IAEPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@PAV23@00@Z")
#pragma comment(linker, "/include:?size@?$RepeatedPtrField@VParamSpec@caffe@@@protobuf@google@@QBEHXZ")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Net@M@caffe@@@boost@@$$$V@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Net@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??_R4?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@6Btoo_few_args@io@2@@")
#pragma comment(linker, "/include:?New@PoolingParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?Start@CPUTimer@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$WindowDataLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??0?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z")
#pragma comment(linker, "/include:?CopyFrom@HDF5DataParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??0out_of_range@std@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?str@?$basic_format@DU?$char_traits@D@std@@V?$allocator@D@2@@boost@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?value@error_code@system@boost@@QBEHXZ")
#pragma comment(linker, "/include:?_Rrotate@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?get@?$shared_ptr@V?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@@boost@@QBEPAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@2@XZ")
#pragma comment(linker, "/include:?New@TransformationParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@InnerProductParameter@caffe@@8")
#pragma comment(linker, "/include:?TANH@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$DummyDataLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$_Unchecked@PAU?$pair@NH@std@@@std@@YAPAU?$pair@NH@0@PAU10@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??0?$uniform_real_distribution@M@random@boost@@QAE@MM@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$BilinearFiller@M@caffe@@8")
#pragma comment(linker, "/include:??0?$group1@ABN@detail@io@boost@@QAE@ABN@Z")
#pragma comment(linker, "/include:?push_back@?$vector@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@QAEX$$QAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??_C@_06BNJCAIGJ@double?$AA@")
#pragma comment(linker, "/include:??1RNG@Caffe@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@2@@std@@IBEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@2@0@Z")
#pragma comment(linker, "/include:??_R3ReLUParameter@caffe@@8")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$Blob@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$SoftmaxLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?default_instance@SolverState@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$SplitLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$SplitLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?SetCachedSize@TransformationParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?LEVELDB@DataParameter@caffe@@2W4DataParameter_DB@2@B")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VParamSpec@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVParamSpec@caffe@@@Z")
#pragma comment(linker, "/include:??_R2?$ThresholdLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_R3?$BilinearFiller@M@caffe@@8")
#pragma comment(linker, "/include:??$caffe_add@N@caffe@@YAXHPBN0PAN@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@out_of_range@std@@8")
#pragma comment(linker, "/include:??_G?$InfogainLossLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$FlattenLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@WindowDataParameter@caffe@@8")
#pragma comment(linker, "/include:?_Mask@?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@IBEIXZ")
#pragma comment(linker, "/include:??_C@_0FE@FGLKIMKI@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??_R2?$SplitLayer@M@caffe@@8")
#pragma comment(linker, "/include:?set_pad@ConvolutionParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??0?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?mirror@TransformationParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?Test@?$Solver@M@caffe@@IAEXH@Z")
#pragma comment(linker, "/include:?ByteSize@SolverParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$vector@HV?$allocator@H@std@@@std@@PAV12@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@V12@@std@@YAPAV?$vector@HV?$allocator@H@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??_R4?$SplitLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@$$QAV23@@Z")
#pragma comment(linker, "/include:?ReadFileToDatum@caffe@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVDatum@1@@Z")
#pragma comment(linker, "/include:??_C@_0BB@GIFMEOCB@input_num?5?$DM?$DN?5num?$AA@")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$LossLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$Clear@VTypeHandler@?$RepeatedPtrField@VBlobShape@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXXZ")
#pragma comment(linker, "/include:?PrefetchRand@?$WindowDataLayer@M@caffe@@MAEIXZ")
#pragma comment(linker, "/include:??_B?1???$get_static_exception_object@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@YA?AVexception_ptr@1@XZ@51")
#pragma comment(linker, "/include:?Reshape@?$Blob@M@caffe@@QAEXABVBlobShape@2@@Z")
#pragma comment(linker, "/include:?_Tidy@?$vector@VNetParameter@caffe@@V?$allocator@VNetParameter@caffe@@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:?has_root_folder@ImageDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R3DummyDataParameter@caffe@@8")
#pragma comment(linker, "/include:?has_file_name@HDF5OutputParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??A?$vector@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@QAEAAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@1@I@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@VDB@db@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?value@?$is_pointer_helper@F@detail@boost@@2_NB")
#pragma comment(linker, "/include:?push_back@?$vector@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@QAEX$$QAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@Z")
#pragma comment(linker, "/include:?clear@?$vector@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:?set_has_bias_filler@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@SliceParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??0?$uniform_01@MN@random@boost@@QAE@XZ")
#pragma comment(linker, "/include:?set_has_mean_file@ImageDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R3V0LayerParameter@caffe@@8")
#pragma comment(linker, "/include:??_G?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_C@_0DC@DIPOMKKL@produced?5negative?5result?$DL?5slice_@")
#pragma comment(linker, "/include:??$?0AAPAVcondition_variable@boost@@AAPAVmutex@1@X@?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@QAE@AAPAVcondition_variable@boost@@AAPAVmutex@3@@Z")
#pragma comment(linker, "/include:?max_size@?$vector@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?engine@?$variate_generator@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@V?$bernoulli_distribution@M@23@@random@boost@@QAEAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@23@XZ")
#pragma comment(linker, "/include:?BufferSize@CodedInputStream@io@protobuf@google@@ABEHXZ")
#pragma comment(linker, "/include:?inner_product_param@V1LayerParameter@caffe@@QBEABVInnerProductParameter@2@XZ")
#pragma comment(linker, "/include:?snapshot_prefix@SolverParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?NormRegion_MAX@LRNParameter@caffe@@2W4LRNParameter_NormRegion@2@B")
#pragma comment(linker, "/include:??_C@_0DJ@IDDHPIDB@Check?5failed?3?5this_blob?9?$DOshape?$CI?$CJ@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_pd@PAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@VNo_Op@?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@23@@detail@boost@@8")
#pragma comment(linker, "/include:?size@?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$FilterLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??$caffe_rng_bernoulli@N@caffe@@YAXHNPAI@Z")
#pragma comment(linker, "/include:?set_new_channels@V0LayerParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?set_has_accuracy_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@QAE@ABU012@@Z")
#pragma comment(linker, "/include:??_R3LayerParameter@caffe@@8")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@VDB@db@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$OwnInternal@VParamSpec@caffe@@@Arena@protobuf@google@@AAEXPAVParamSpec@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?is_signed@_Num_base@std@@2_NB")
#pragma comment(linker, "/include:??0_Generic_error_category@std@@QAE@XZ")
#pragma comment(linker, "/include:??1?$basic_fstream@DU?$char_traits@D@std@@@std@@UAE@XZ")
#pragma comment(linker, "/include:??1?$ThresholdLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?set_debug_info@?$Net@N@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$SilenceLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?data_filler@DummyDataParameter@caffe@@QBEABVFillerParameter@2@H@Z")
#pragma comment(linker, "/include:??0?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@QAE@ABU012@@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$SliceLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?set_rand_skip@DataParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??$swap@PAV?$PoolingLayer@M@caffe@@@std@@YAXAAPAV?$PoolingLayer@M@caffe@@0@Z")
#pragma comment(linker, "/include:??$min@I@std@@YAABIABI0@Z")
#pragma comment(linker, "/include:?local_time@?$microsec_clock@Vptime@posix_time@boost@@@date_time@boost@@SA?AVptime@posix_time@3@XZ")
#pragma comment(linker, "/include:?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?source@HDF5DataParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??$_Umove@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@2@@std@@IAEPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@1@PAU21@00@Z")
#pragma comment(linker, "/include:?swap@?$shared_ptr@V?$DataTransformer@N@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$MemoryDataLayer@N@caffe@@@detail@boost@@QAE@PAV?$MemoryDataLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PAV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@PAV12@PAV12@@std@@YAPAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?kStrideFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R3Closure@protobuf@google@@8")
#pragma comment(linker, "/include:??_R0?AVMessageLite@protobuf@google@@@8")
#pragma comment(linker, "/include:??_R2?$PowerLayer@N@caffe@@8")
#pragma comment(linker, "/include:?construct@?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@QAEXPAV?$vector@MV?$allocator@M@std@@@2@ABV32@@Z")
#pragma comment(linker, "/include:??$_Insert_hint@AAU?$pair@$$CBHH@std@@PAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@1@AAU?$pair@$$CBHH@1@PAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??_G?$ContrastiveLossLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??0time_duration@posix_time@boost@@QAE@ABV012@@Z")
#pragma comment(linker, "/include:??_E?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@$4PPPPPPPM@DA@AEPAXI@Z")
#pragma comment(linker, "/include:??$_Uninit_move@PAIPAIU?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@YAPAIPAI00AAU?$_Wrap_alloc@V?$allocator@I@std@@@0@@Z")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:?mutable_gpu_diff@?$Blob@I@caffe@@QAEPAIXZ")
#pragma comment(linker, "/include:??C?$shared_ptr@VSyncedMemory@caffe@@@boost@@QBEPAVSyncedMemory@caffe@@XZ")
#pragma comment(linker, "/include:?Backward_cpu@?$SigmoidLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@detail@boost@@8")
#pragma comment(linker, "/include:?has_run_at_least_once@Timer@caffe@@QAE_NXZ")
#pragma comment(linker, "/include:?GetMetadata@PReLUParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R4SolverState@caffe@@6B@")
#pragma comment(linker, "/include:?kRandSkipFieldNumber@ImageDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$DeconvolutionLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?GetArenaNoVirtual@?$RepeatedField@M@protobuf@google@@ABEPAVArena@23@XZ")
#pragma comment(linker, "/include:??_R3?$FilterLayer@M@caffe@@8")
#pragma comment(linker, "/include:?value@?$int_@$07@mpl@boost@@2HB")
#pragma comment(linker, "/include:?set_operation@ReductionParameter@caffe@@QAEXW4ReductionParameter_ReductionOp@2@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$ImageDataLayer@N@caffe@@@boost@@YAXPAV?$ImageDataLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?LegacyShape@?$Blob@H@caffe@@QBEHH@Z")
#pragma comment(linker, "/include:??_G?$NesterovSolver@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?GlobalInit@caffe@@YAXPAHPAPAPAD@Z")
#pragma comment(linker, "/include:?MergeFrom@BlobProtoVector@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$forward@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@YA$$QAV?$vector@_NV?$allocator@_N@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$TanHLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?kIsExtensionFieldNumber@UninterpretedOption_NamePart@protobuf@google@@2HB")
#pragma comment(linker, "/include:?Add@?$RepeatedPtrField@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@protobuf@google@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??_R3ThresholdParameter@caffe@@8")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@VDB@db@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??1?$_Tree@V?$_Tmap_traits@PBXUtss_data_node@detail@boost@@U?$less@PBX@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@5@$0A@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z")
#pragma comment(linker, "/include:?_Inc@?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$ConcatLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_R3?$XavierFiller@M@caffe@@8")
#pragma comment(linker, "/include:??1V1LayerParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?V1LayerParameter_LayerType_descriptor@caffe@@YAPBVEnumDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$Creator_DataLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??0?$SPPLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?kUninterpretedOptionFieldNumber@FieldOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:?_Pop_back_n@?$vector@NV?$allocator@N@std@@@std@@QAEXI@Z")
#pragma comment(linker, "/include:?GetMetadata@FlattenParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?SharedCtor@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$swap@PAVContrastiveLossParameter@caffe@@@std@@YAXAAPAVContrastiveLossParameter@caffe@@0@Z")
#pragma comment(linker, "/include:?MergeFrom@BlobProtoVector@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@exception@std@@8")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$SoftmaxLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?Backward_cpu@?$ThresholdLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$_Ptr_cat@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@0@0@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$AccuracyLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$AbsValLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$FilterLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?set_has_rand_skip@ImageDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?type@?$SigmoidCrossEntropyLossLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?has_data_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_0BD@NCCBMGFP@?5out?5of?5range?5for?5?$AA@")
#pragma comment(linker, "/include:?BlobProtoVector_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?width@?$MemoryDataLayer@M@caffe@@QAEHXZ")
#pragma comment(linker, "/include:??_R4?$NeuronLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?LayerSetUp@?$InnerProductLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?_Erase@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBHH@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@1@PAU?$pair@$$CBHH@1@@Z")
#pragma comment(linker, "/include:?Reshape@?$EuclideanLossLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R4?$NeuronLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??_R2BlobShape@caffe@@8")
#pragma comment(linker, "/include:??$_Val_type@PAV?$vector@HV?$allocator@H@std@@@std@@@std@@YAPAV?$vector@HV?$allocator@H@std@@@0@PAV10@@Z")
#pragma comment(linker, "/include:?construct@?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?set_has_root_folder@WindowDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?vdAdd@@YAXHPBN0PAN@Z")
#pragma comment(linker, "/include:??_C@_0EA@OCFHNIAE@e?4g?4?0?5if?5label?5axis?5?$DN?$DN?51?5and?5pre@")
#pragma comment(linker, "/include:?normalize_state@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@AAEXXZ")
#pragma comment(linker, "/include:?Reshape@?$ConcatLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?has_convolution_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_GLayerParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0BF@OPPCGHKN@Window?5file?5is?5empty?$AA@")
#pragma comment(linker, "/include:??$Check_NEImpl@HH@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH0PBD@Z")
#pragma comment(linker, "/include:?exceptions@?$basic_format@DU?$char_traits@D@std@@V?$allocator@D@2@@boost@@QBEEXZ")
#pragma comment(linker, "/include:??_C@_0DB@PMBAJHNI@Shared?5parameter?5blobs?5must?5have@")
#pragma comment(linker, "/include:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z")
#pragma comment(linker, "/include:?kBlobsFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??0NetState@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$AbsValLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?kShiftFieldNumber@PowerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$DummyDataLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_C@_02KCKGHPCA@?$CJ?5?$AA@")
#pragma comment(linker, "/include:??0ExpParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0L@HIGPBKPD@n?5?$DM?$DN?5num?$CI?$CJ?$AA@")
#pragma comment(linker, "/include:?mean_value@TransformationParameter@caffe@@QBEMH@Z")
#pragma comment(linker, "/include:?kHdf5OutputParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?type@?$SoftmaxLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?net@?$Solver@N@caffe@@QAE?AV?$shared_ptr@V?$Net@N@caffe@@@boost@@XZ")
#pragma comment(linker, "/include:?default_instance_@WindowDataParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?_Getcomp@?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ")
#pragma comment(linker, "/include:??0HDF5OutputParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:?singleton_@Caffe@caffe@@1V?$shared_ptr@VCaffe@caffe@@@boost@@A")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:??_R2MessageLite@protobuf@google@@8")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VPoolingParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVPoolingParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0CD@NDBHMJFC@this?9?$DOfiller_param_?4sparse?$CI?$CJ?5?$DN?$DN?5@")
#pragma comment(linker, "/include:??0?$vector@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?_Reallocate@?$vector@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?shape_string@?$Blob@M@caffe@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??1?$MSRAFiller@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?Reshape@?$PReLULayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$ReductionLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R0?AV?$Layer@M@caffe@@@8")
#pragma comment(linker, "/include:?clear_layer@NetParameter@caffe@@QAEXXZ")
#pragma comment(linker, "/include:?Backward_gpu@?$PoolingLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QAE@PANPBU_Container_base0@1@@Z")
#pragma comment(linker, "/include:?max_digits10@?$numeric_limits@M@std@@2HB")
#pragma comment(linker, "/include:?kReluParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$?0V?$SplitLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$SplitLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_7?$SliceLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?cpu_diff@?$Blob@I@caffe@@QBEPBIXZ")
#pragma comment(linker, "/include:??_C@_0FH@NMCFKLKC@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?has_blob@?$Net@M@caffe@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$ReductionLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$checked_delete@V?$DropoutLayer@N@caffe@@@boost@@YAXPAV?$DropoutLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@1@$$QA_N@Z")
#pragma comment(linker, "/include:??$forward@AAPAVcondition_variable@boost@@@std@@YAAAPAVcondition_variable@boost@@AAPAV12@@Z")
#pragma comment(linker, "/include:?kLayerFieldNumber@PythonParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$swap@PAV?$Layer@M@caffe@@@std@@YAXAAPAV?$Layer@M@caffe@@0@Z")
#pragma comment(linker, "/include:?UpgradeV1LayerType@caffe@@YAPBDW4V1LayerParameter_LayerType@1@@Z")
#pragma comment(linker, "/include:??_R3AccuracyParameter@caffe@@8")
#pragma comment(linker, "/include:??$float_prior@MU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@math@boost@@@math@boost@@YAMABMABU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@01@@Z")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PAV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:??$_Uninit_copy@PBMPAMU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAPAMPBM0PAMAAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z")
#pragma comment(linker, "/include:?GetMaybeArenaPointer@MessageLite@protobuf@google@@UBEPAXXZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$ConvolutionLayer@N@caffe@@@detail@boost@@QAE@PAV?$ConvolutionLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?args@?$function0@X@boost@@2HB")
#pragma comment(linker, "/include:??_R3InnerProductParameter@caffe@@8")
#pragma comment(linker, "/include:?nan@?$br_mul@$00$0GE@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:?set_height@MemoryDataParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?axis@ReshapeParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?pbackfail@?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@MAEHH@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$Net@M@caffe@@8")
#pragma comment(linker, "/include:??$ReadPackedPrimitive@I$0N@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAV?$RepeatedField@I@23@@Z")
#pragma comment(linker, "/include:?clone@?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@I@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@AAPAU21@@Z")
#pragma comment(linker, "/include:?output_l@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@2IB")
#pragma comment(linker, "/include:?ByteSize@DummyDataParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?MergeFrom@?$RepeatedPtrField@VFillerParameter@caffe@@@protobuf@google@@QAEXABV123@@Z")
#pragma comment(linker, "/include:??1?$_Tree_buy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R4ParamSpec@caffe@@6B@")
#pragma comment(linker, "/include:?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z")
#pragma comment(linker, "/include:?CopyFrom@MemoryDataParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?zero@?$is_unsigned_values@F@detail@boost@@2FB")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$FilterLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?clear_data@BlobProto@caffe@@QAEXXZ")
#pragma comment(linker, "/include:?value@?$is_pod_impl@Ua8@tt_align_ns@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??0?$stream_format_state@DU?$char_traits@D@std@@@detail@io@boost@@QAE@D@Z")
#pragma comment(linker, "/include:??_C@_0O@OACMAFEL@bottom_w_?5?$DO?50?$AA@")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:??0SoftmaxParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?InfogainLossParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?quiet_NaN@?$numeric_limits@N@std@@SANXZ")
#pragma comment(linker, "/include:?mutable_accuracy_param@LayerParameter@caffe@@QAEPAVAccuracyParameter@2@XZ")
#pragma comment(linker, "/include:?type@?$ArgMaxLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?Engine_MAX@TanHParameter@caffe@@2W4TanHParameter_Engine@2@B")
#pragma comment(linker, "/include:?CopyFrom@ImageDataParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@QAEPAV?$shared_ptr@V?$Net@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAV?$Blob@N@caffe@@@std@@@2@XZ")
#pragma comment(linker, "/include:?Get@?$RepeatedPtrField@VLayerParameter@caffe@@@protobuf@google@@QBEABVLayerParameter@caffe@@H@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$AccuracyLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$shared_ptr@V?$Net@N@caffe@@@boost@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@@std@@YAPAV?$shared_ptr@V?$Net@N@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_7V1LayerParameter@caffe@@6B@")
#pragma comment(linker, "/include:??$forward@ABQAV?$Blob@M@caffe@@@std@@YAABQAV?$Blob@M@caffe@@ABQAV12@@Z")
#pragma comment(linker, "/include:?InternalSwap@BlobShape@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VFillerParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVFillerParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ")
#pragma comment(linker, "/include:??$generate_uniform_real@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@M@detail@random@boost@@YAMAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@MMU?$bool_@$00@mpl@2@@Z")
#pragma comment(linker, "/include:??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0DN@HDPOONCM@Input?5NetParameter?5to?5be?5upgrade@")
#pragma comment(linker, "/include:?descriptor@ReLUParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?clone@?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$SilenceLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??$?0V?$EltwiseLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$EltwiseLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?value@?$is_reference_impl@Vlocale@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??1Caffe@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8")
#pragma comment(linker, "/include:?mutable_relu_param@LayerParameter@caffe@@QAEPAVReLUParameter@2@XZ")
#pragma comment(linker, "/include:?kernel_w@ConvolutionParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?SetCachedSize@ContrastiveLossParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?Update@?$Net@M@caffe@@QAEXXZ")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@@std@@YAXPAV?$vector@MV?$allocator@M@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:?NewFromPrototype@?$GenericTypeHandler@VBlobProto@caffe@@@internal@protobuf@google@@SAPAVBlobProto@caffe@@PBV56@PAVArena@34@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$AccuracyLayer@M@caffe@@@boost@@YAXPAV?$AccuracyLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$Own@VPowerParameter@caffe@@@Arena@protobuf@google@@QAEXPAVPowerParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0CI@JOBANGKK@Year?5is?5out?5of?5valid?5range?3?51400@")
#pragma comment(linker, "/include:?default_instance_@Datum@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??_R3SoftmaxParameter@caffe@@8")
#pragma comment(linker, "/include:?Forward_gpu@?$SoftmaxWithLossLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?count@?$Blob@N@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?gInstantiationGuardEuclideanLossLayer@caffe@@3DA")
#pragma comment(linker, "/include:??1tss_data_node@detail@boost@@QAE@XZ")
#pragma comment(linker, "/include:?PreSolve@?$SGDSolver@M@caffe@@IAEXXZ")
#pragma comment(linker, "/include:?InitTestNets@?$Solver@M@caffe@@QAEXXZ")
#pragma comment(linker, "/include:?set_has_engine@PoolingParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_C@_0FF@CDPDIFHB@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?_Root@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??_R3?$LRNLayer@M@caffe@@8")
#pragma comment(linker, "/include:?MergeFrom@BlobShape@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@FillerParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??_C@_0CJ@EBBLEBPD@Unknown?5parameter?5source?5for?5lay@")
#pragma comment(linker, "/include:?set_random_seed@SolverParameter@caffe@@QAEX_J@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@VRNG@Caffe@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?GetCachedSize@InfogainLossParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??$CreateInternal@VBlobProto@caffe@@@Arena@protobuf@google@@AAEPAVBlobProto@caffe@@_N@Z")
#pragma comment(linker, "/include:??_7clone_base@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:??$checked_delete@V?$FilterLayer@M@caffe@@@boost@@YAXPAV?$FilterLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?set_legacy_version@ContrastiveLossParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:?SolverType_ARRAYSIZE@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:?FilterNet@?$Net@N@caffe@@SAXABVNetParameter@2@PAV32@@Z")
#pragma comment(linker, "/include:?LITE_RUNTIME@FileOptions@protobuf@google@@2W4FileOptions_OptimizeMode@23@B")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@QAEPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@I@Z")
#pragma comment(linker, "/include:??$ReadPrimitive@H$04@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAH@Z")
#pragma comment(linker, "/include:??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?SharedCtor@SliceParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?SharedCtor@WindowDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?Reshape@?$MultinomialLogisticLossLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R2FlattenParameter@caffe@@8")
#pragma comment(linker, "/include:?Transform@?$DataTransformer@M@caffe@@QAEXABVMat@cv@@PAV?$Blob@M@2@@Z")
#pragma comment(linker, "/include:??$Check_GTImpl@NH@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABNABHPBD@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBU?$pair@HH@std@@M@std@@ABUpiecewise_construct_t@2@V?$tuple@ABU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBU?$pair@HH@std@@M@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?MergeFrom@?$RepeatedField@_N@protobuf@google@@QAEXABV123@@Z")
#pragma comment(linker, "/include:??G?$base_time@Vptime@posix_time@boost@@V?$counted_time_system@U?$counted_time_rep@Vmillisec_posix_time_system_config@posix_time@boost@@@date_time@boost@@@date_time@3@@date_time@boost@@QBE?AVtime_duration@posix_time@2@ABVptime@42@@Z")
#pragma comment(linker, "/include:?construct@?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@QAEXPAV?$vector@HV?$allocator@H@std@@@2@@Z")
#pragma comment(linker, "/include:??$GetReLULayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??_G?$Layer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?deallocate@?$allocator@VNetParameter@caffe@@@std@@QAEXPAVNetParameter@caffe@@I@Z")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@QAEXPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@2@I@Z")
#pragma comment(linker, "/include:??_R4?$WindowDataLayer@N@caffe@@6B?$BaseDataLayer@N@1@@")
#pragma comment(linker, "/include:??$make_pair@ABHABH@std@@YA?AU?$pair@HH@0@ABH0@Z")
#pragma comment(linker, "/include:??1?$BNLLLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R0?AV_InputArray@cv@@@8")
#pragma comment(linker, "/include:??_7?$SigmoidCrossEntropyLossLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??_R4?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$BNLLLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QBEAAMXZ")
#pragma comment(linker, "/include:??$Creator_SPPLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?Get@?$RepeatedField@_J@protobuf@google@@QBEAB_JH@Z")
#pragma comment(linker, "/include:??_R3?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$ConvolutionLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?ABS_D@?$ratio@$0GE@$00@boost@@0_JB")
#pragma comment(linker, "/include:?kShuffleImagesFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?Clear@?$GenericTypeHandler@VBlobProto@caffe@@@internal@protobuf@google@@SAXPAVBlobProto@caffe@@@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$SplitLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$DummyDataLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?set_has_debug_info@NetParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?bit_count@?$low_bits_mask_t@$0EA@@boost@@2IB")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@1@@Z")
#pragma comment(linker, "/include:??_G?$ContrastiveLossLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?mode@Caffe@caffe@@SA?AW4Brew@12@XZ")
#pragma comment(linker, "/include:?kShiftFieldNumber@ExpParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$?0V?$Im2colLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$Im2colLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?twist@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@AAEXXZ")
#pragma comment(linker, "/include:??$?0V?$SigmoidLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$SigmoidLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@BlobShape@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?MAX@EltwiseParameter@caffe@@2W4EltwiseParameter_EltwiseOp@2@B")
#pragma comment(linker, "/include:??0?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?value@?$is_function_impl@Uinput_iterator_tag@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$DataTransformer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?clear@?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:?Forward_cpu@?$LRNLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VFlattenParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVFlattenParameter@caffe@@@Z")
#pragma comment(linker, "/include:??$forward@AAH@std@@YAAAHAAH@Z")
#pragma comment(linker, "/include:??1?$SigmoidCrossEntropyLossLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$Blob@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VPoolingParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVPoolingParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0BD@HGGLNNPH@0?5?$DM?$DN?5concat_dim?5?$DM?5?$AA@")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$ExpLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?value@?$is_function_impl@U?$thread_move_t@V?$shared_ptr@Uimpl_base@?$nullary_function@$$A6AIXZ@detail@boost@@@std@@@detail@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?has_sparse@FillerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$Im2colLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?kMirrorFieldNumber@DataParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R0?AV?$ConcatLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??$enable_error_info@Vthread_resource_error@boost@@@boost@@YA?AU?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@0@ABVthread_resource_error@0@@Z")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@QAEPAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?MergeFrom@?$RepeatedField@H@protobuf@google@@QAEXABV123@@Z")
#pragma comment(linker, "/include:??_R3?$Net@N@caffe@@8")
#pragma comment(linker, "/include:??$checked_delete@V?$InfogainLossLayer@M@caffe@@@boost@@YAXPAV?$InfogainLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$DeconvolutionLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$BasePrefetchingDataLayer@N@caffe@@8")
#pragma comment(linker, "/include:??0?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QAE@PBIIPBU_Container_base0@1@@Z")
#pragma comment(linker, "/include:??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?kStrideHFieldNumber@ConvolutionParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$UniformFiller@N@caffe@@8")
#pragma comment(linker, "/include:?const_min@?$integer_traits_base@H$0?IAAAAAAA@$0HPPPPPPP@@detail@boost@@2HB")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$AbsValLayer@M@caffe@@@detail@boost@@QAE@PAV?$AbsValLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?SharedDtor@SliceParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?STRICT@V1LayerParameter@caffe@@2W4V1LayerParameter_DimCheckMode@2@B")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$LossLayer@M@caffe@@8")
#pragma comment(linker, "/include:??$_Rechecked@PAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@PAU12@@std@@YAAAPAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@0@AAPAU10@PAU10@@Z")
#pragma comment(linker, "/include:?concat_dim@V0LayerParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@AAPAU31@@Z")
#pragma comment(linker, "/include:?threshold@ThresholdParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?_Reallocate@?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$SliceLayer@M@caffe@@@boost@@YAXPAV?$SliceLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$EltwiseLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$_Move@AAPAV?$SplitLayer@N@caffe@@@std@@YA$$QAPAV?$SplitLayer@N@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?mutable_dummy_data_param@V1LayerParameter@caffe@@QAEPAVDummyDataParameter@2@XZ")
#pragma comment(linker, "/include:??0_Iostream_error_category@std@@QAE@XZ")
#pragma comment(linker, "/include:??$file_time_to_microseconds@UFILETIME@winapi@date_time@boost@@@winapi@date_time@boost@@YA_KABUFILETIME@012@@Z")
#pragma comment(linker, "/include:??$destroy@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@?$allocator_traits@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@1@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@@Z")
#pragma comment(linker, "/include:??1?$RepeatedPtrField@VNetStateRule@caffe@@@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:?CreatePrefetchThread@?$BasePrefetchingDataLayer@N@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PAUbad_year@gregorian@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??0BlobShape@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??0?$tuple@ABH@std@@QAE@ABH@Z")
#pragma comment(linker, "/include:??$_Move@AAPAVContrastiveLossParameter@caffe@@@std@@YA$$QAPAVContrastiveLossParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?_Pop_back_n@?$vector@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@QAEXI@Z")
#pragma comment(linker, "/include:?allocate@?$allocator@H@std@@QAEPAHI@Z")
#pragma comment(linker, "/include:?kDefaultStartBlockSize@ArenaOptions@protobuf@google@@0IB")
#pragma comment(linker, "/include:?value@?$int_@$0A@@mpl@boost@@2HB")
#pragma comment(linker, "/include:?denorm_min@?$numeric_limits@M@std@@SAMXZ")
#pragma comment(linker, "/include:?Clear@LayerParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??0V1LayerParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??_7?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??$construct@V?$vector@_NV?$allocator@_N@std@@@std@@V12@@?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEXPAV?$vector@_NV?$allocator@_N@std@@@1@$$QAV21@@Z")
#pragma comment(linker, "/include:?_Reserve@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??_G?$LossLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?BackwardFrom@?$Net@M@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$InfogainLossLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?CopyFrom@V1LayerParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$PoolingLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_R2exception@std@@8")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?_Reallocate@?$vector@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@2@0@Z")
#pragma comment(linker, "/include:??_R3?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?Reshape@?$MultinomialLogisticLossLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R3?$InnerProductLayer@M@caffe@@8")
#pragma comment(linker, "/include:?has_mirror@DataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z")
#pragma comment(linker, "/include:??_R0?AVruntime_error@std@@@8")
#pragma comment(linker, "/include:?_Tidy@?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:?set_has_context_pad@WindowDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R0?AV?$PowerLayer@M@caffe@@@8")
#pragma comment(linker, "/include:??$forward@ABV?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@YAABV?$shared_ptr@V?$Blob@M@caffe@@@boost@@ABV12@@Z")
#pragma comment(linker, "/include:?_Tidy@?$vector@U?$pair@MH@std@@V?$allocator@U?$pair@MH@std@@@2@@std@@IAEXXZ")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VPoolingParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVPoolingParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??$Creator_ContrastiveLossLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??$swap@PAV?$EltwiseLayer@N@caffe@@@std@@YAXAAPAV?$EltwiseLayer@N@caffe@@0@Z")
#pragma comment(linker, "/include:?InternalSwap@LossParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?Clear@NetStateRule@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?default_instance_@MVNParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@@Z")
#pragma comment(linker, "/include:??$Own@VBlobShape@caffe@@@Arena@protobuf@google@@QAEXPAVBlobShape@caffe@@@Z")
#pragma comment(linker, "/include:??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8")
#pragma comment(linker, "/include:??$caffe_log@N@caffe@@YAXHPBNPAN@Z")
#pragma comment(linker, "/include:?set_has_weight_filler@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?value@?$operator_exists@V?$basic_istream@DU?$char_traits@D@std@@@std@@_J@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:?Type_MAX@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Type@23@B")
#pragma comment(linker, "/include:?set_new_width@ImageDataParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$AbsValLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?has_scale@WindowDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?has_dropout_ratio@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$?0HHX@?$pair@HH@std@@QAE@$$QAU01@@Z")
#pragma comment(linker, "/include:??$_Kfn@$$CBU?$pair@HH@std@@H@?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@SAABU?$pair@HH@1@ABU?$pair@$$CBU?$pair@HH@std@@H@1@@Z")
#pragma comment(linker, "/include:?clone@?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:?height@?$Blob@M@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??_7?$BaseDataLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??_7?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??_C@_0P@KFCEEKMG@Overflow?5Error?$AA@")
#pragma comment(linker, "/include:??_7bad_year@gregorian@boost@@6B@")
#pragma comment(linker, "/include:??$ReadRepeatedPrimitive@M$01@WireFormatLite@internal@protobuf@google@@SA_NHIPAVCodedInputStream@io@23@PAV?$RepeatedField@M@23@@Z")
#pragma comment(linker, "/include:?GetCachedSize@NetParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?has_operation@EltwiseParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?SharedDtor@InnerProductParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?max_size@?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??_7_System_error_category@std@@6B@")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$?0V?$FilterLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$FilterLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$construct@MABM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAEXPAMABM@Z")
#pragma comment(linker, "/include:??_G?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$_Copy_impl@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z")
#pragma comment(linker, "/include:??_C@_0BA@BJHEAJCP@Creating?5Layer?5?$AA@")
#pragma comment(linker, "/include:??1?$PowerLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:__CT??_R0?AU?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@8??0?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@QAE@ABU012@@Z32")
#pragma comment(linker, "/include:??$move@AAV?$tuple@ABH@std@@@std@@YA$$QAV?$tuple@ABH@0@AAV10@@Z")
#pragma comment(linker, "/include:??0?$InfogainLossLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@6Bbad_alloc@std@@@")
#pragma comment(linker, "/include:??_C@_09DHCDHNKA@index?5?$DM?54?$AA@")
#pragma comment(linker, "/include:??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@XZ")
#pragma comment(linker, "/include:?clone@?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@VDB@db@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$?0V?$SilenceLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$SilenceLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_G?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?SGD@SolverParameter@caffe@@2W4SolverParameter_SolverType@2@B")
#pragma comment(linker, "/include:??_C@_0CF@FGNHMEJ@Check?5failed?3?5StartInternalThrea@")
#pragma comment(linker, "/include:?Acquire_Load@internal@protobuf@google@@YAHPDH@Z")
#pragma comment(linker, "/include:??_G?$PowerLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R3?$SigmoidLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_R0?AV?$MVNLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??1NetStateRule@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$_Ptr_cat@U?$pair@NH@std@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$pair@NH@0@0@Z")
#pragma comment(linker, "/include:?IsInitialized@SigmoidParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$ImageDataLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??0LRNParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12")
#pragma comment(linker, "/include:??_R3?$Im2colLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VHDF5DataParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVHDF5DataParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?digits10@?$numeric_limits@K@std@@2HB")
#pragma comment(linker, "/include:?LayerSetUp@?$ConcatLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?set_axis@SliceParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?apply_on@?$stream_format_state@DU?$char_traits@D@std@@@detail@io@boost@@QBEXAAV?$basic_ios@DU?$char_traits@D@std@@@std@@PAVlocale@6@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$MVNLayer@N@caffe@@8")
#pragma comment(linker, "/include:?kGlobalPoolingFieldNumber@PoolingParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R4?$DropoutLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??_C@_0DD@BIKNMLI@param_?4test_state_size?$CI?$CJ?5?$DN?$DN?5num_@")
#pragma comment(linker, "/include:??_R0?AVMessage@protobuf@google@@@8")
#pragma comment(linker, "/include:??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@?$allocator_traits@V?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABV31@@Z")
#pragma comment(linker, "/include:?force_encoded_color@DataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R3bad_format_string@io@boost@@8")
#pragma comment(linker, "/include:?kNewNumFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_C@_0CD@PKCLKNOP@Check?5failed?3?5?$CBisnan?$CIbase_scale_@")
#pragma comment(linker, "/include:?value@?$alignment_of_impl@_J@detail@boost@@2IB")
#pragma comment(linker, "/include:?weight_filler@InnerProductParameter@caffe@@QBEABVFillerParameter@2@XZ")
#pragma comment(linker, "/include:?kChannelsFieldNumber@BlobProto@caffe@@2HB")
#pragma comment(linker, "/include:?value@?$choose_initial_n@$0BA@@static_log2_impl@detail@boost@@2HB")
#pragma comment(linker, "/include:??_R0?AV_System_error_category@std@@@8")
#pragma comment(linker, "/include:?Forward_gpu@?$DeconvolutionLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?default_instance@ConcatParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??$?6V?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@Uthrow_function_@2@PBD@boost@@YAABV?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@0@ABV120@ABV?$error_info@Uthrow_function_@boost@@PBD@0@@Z")
#pragma comment(linker, "/include:?_Reallocate@?$vector@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??_R0?AVHDF5OutputParameter@caffe@@@8")
#pragma comment(linker, "/include:?LayerSetUp@?$LRNLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@ParamSpec@caffe@@8")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@?$allocator_traits@V?$allocator@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@1@PAV?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@Z")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@1@@Z")
#pragma comment(linker, "/include:?InnerProductParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?set_cpu_data@?$Blob@H@caffe@@QAEXPAH@Z")
#pragma comment(linker, "/include:??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??$?0V?$AbsValLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$AbsValLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?value@?$is_arithmetic_impl@G@detail@boost@@2_NB")
#pragma comment(linker, "/include:?type@?$ConcatLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??$destroy@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@@std@@QAEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@1@@Z")
#pragma comment(linker, "/include:?has_group@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R4DataParameter@caffe@@6B@")
#pragma comment(linker, "/include:??_7?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@6Bthread_resource_error@2@@")
#pragma comment(linker, "/include:?has_crop_size@ImageDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z")
#pragma comment(linker, "/include:?const_max@?$integer_traits_base@J$0?IAAAAAAA@$0HPPPPPPP@@detail@boost@@2JB")
#pragma comment(linker, "/include:?value@?$operator_returns_void@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@G@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:?set_has_python_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?add_blob_share_mode@V1LayerParameter@caffe@@QAEXW4V1LayerParameter_DimCheckMode@2@@Z")
#pragma comment(linker, "/include:??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PAHU?$_Wrap_alloc@V?$allocator@H@std@@@2@@std@@YAPAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0PAHAAU?$_Wrap_alloc@V?$allocator@H@std@@@0@@Z")
#pragma comment(linker, "/include:??$MakeCheckOpValueString@M@google@@YAXPAV?$basic_ostream@DU?$char_traits@D@std@@@std@@ABM@Z")
#pragma comment(linker, "/include:?vsSqr@@YAXHPBMPAM@Z")
#pragma comment(linker, "/include:?kLayersFieldNumber@NetParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_C@_09NGIEMPAN@?8?0?5param?5?$AA@")
#pragma comment(linker, "/include:??0?$Filler@N@caffe@@QAE@ABVFillerParameter@1@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$InfogainLossLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_7format_error@io@boost@@6B@")
#pragma comment(linker, "/include:?set_batch_size@DataParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VReLUParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVReLUParameter@caffe@@@Z")
#pragma comment(linker, "/include:?MinTopBlobs@?$SplitLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??$construct@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V12@@?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@QAEXPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@1@$$QAV21@@Z")
#pragma comment(linker, "/include:??_C@_0DE@HPMIPGFI@Cannot?5use?5legacy?5accessors?5on?5B@")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$BNLLLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??1?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$DataLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$?0H@?$_Tuple_val@$$QAH@std@@QAE@$$QAH@Z")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@SAIABV?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@Z")
#pragma comment(linker, "/include:?SetCachedSize@LayerParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$DataLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?Add@?$RepeatedPtrField@VNetParameter@caffe@@@protobuf@google@@QAEPAVNetParameter@caffe@@XZ")
#pragma comment(linker, "/include:?cpu_diff@?$Blob@H@caffe@@QBEPBHXZ")
#pragma comment(linker, "/include:??0?$LayerRegisterer@M@caffe@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@1@@Z@Z")
#pragma comment(linker, "/include:?has_concat_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_0BN@MLMCFPGK@Inputs?5must?5have?5same?5width?4?$AA@")
#pragma comment(linker, "/include:??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MH@std@@@std@@@std@@@std@@QAE@PAU?$pair@MH@1@PBU_Container_base0@1@@Z")
#pragma comment(linker, "/include:?set_has_solver_mode@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Pop_heap@PAU?$pair@MH@std@@U?$greater@U?$pair@MH@std@@@2@@std@@YAXPAU?$pair@MH@0@0U?$greater@U?$pair@MH@std@@@0@@Z")
#pragma comment(linker, "/include:??$CreateInternal@VNetStateRule@caffe@@@Arena@protobuf@google@@AAEPAVNetStateRule@caffe@@_N@Z")
#pragma comment(linker, "/include:??E?$back_insert_iterator@V?$vector@HV?$allocator@H@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??$_Umove@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@2@@std@@IAEPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@1@PAU21@00@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$ExpLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$Creator_PowerLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?GetDB@db@caffe@@YAPAVDB@12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?erase@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@2@0@Z")
#pragma comment(linker, "/include:?kKFieldNumber@LRNParameter@caffe@@2HB")
#pragma comment(linker, "/include:??1?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?value@?$is_error_code_enum@Verror_code@system@boost@@@system@boost@@2_NB")
#pragma comment(linker, "/include:?min@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@SAIXZ")
#pragma comment(linker, "/include:??_R2?$Layer@M@caffe@@8")
#pragma comment(linker, "/include:?ABS_N@?$ratio@$00$0JIJGIA@@boost@@0_JB")
#pragma comment(linker, "/include:??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@$$QAH@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAH@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ")
#pragma comment(linker, "/include:??$_Rechecked@PAIPAI@std@@YAAAPAIAAPAIPAI@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$ReductionLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?MergeFrom@HDF5OutputParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$ReLULayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$ReLULayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?set_has_file_name@HDF5OutputParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?SharedDtor@ConvolutionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?day_number@date@gregorian@boost@@QBEIXZ")
#pragma comment(linker, "/include:?forward_cpu_gemm@?$BaseConvolutionLayer@N@caffe@@IAEXPBN0PAN_N@Z")
#pragma comment(linker, "/include:?Type_MIN@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Type@23@B")
#pragma comment(linker, "/include:?Forward_cpu@?$AbsValLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$_Uninitialized_default_fill_n@PAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@IU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@IAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_R0?AVTimer@caffe@@@8")
#pragma comment(linker, "/include:??$_Uninitialized_default_fill_n@PAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@IU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@IAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_G?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?set_ignore_label@AccuracyParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:??_C@_0CA@DFHKCBOK@base?5must?5be?5strictly?5positive?4?$AA@")
#pragma comment(linker, "/include:??$apply@I@?$integer_log2_impl@$00@detail@random@boost@@SAHIH@Z")
#pragma comment(linker, "/include:??$?0V?$PoolingLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$PoolingLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_7?$InnerProductLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??$_Ptr_cat@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:?kHingeLossParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@LossParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??_R4?$XavierFiller@N@caffe@@6B@")
#pragma comment(linker, "/include:?_Tidy@?$vector@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:?max_size@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?InternalSwap@DropoutParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:??$caffe_cpu_gemv@M@caffe@@YAXW4CBLAS_TRANSPOSE@@HHMPBM1MPAM@Z")
#pragma comment(linker, "/include:?mutable_type@FillerParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??_R3?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?set_mirror@WindowDataParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:??1?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?ToProto@?$Layer@M@caffe@@UAEXPAVLayerParameter@2@_N@Z")
#pragma comment(linker, "/include:?set_has_num_output@ConvolutionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$throw_exception@Ubad_year@gregorian@boost@@@boost@@YAXABUbad_year@gregorian@0@@Z")
#pragma comment(linker, "/include:?mutable_meanfile@V0LayerParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?ep@?1???$get_static_exception_object@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@YA?AVexception_ptr@2@XZ@4V32@A")
#pragma comment(linker, "/include:??1?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??$?0V?$FilterLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$FilterLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?set_norm@HingeLossParameter@caffe@@QAEXW4HingeLossParameter_Norm@2@@Z")
#pragma comment(linker, "/include:?set_has_bias_term@ConvolutionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Uninitialized_move@PANPANU?$_Wrap_alloc@V?$allocator@N@std@@@std@@@std@@YAPANPAN00AAU?$_Wrap_alloc@V?$allocator@N@std@@@0@@Z")
#pragma comment(linker, "/include:??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@0@AAPAU10@@Z")
#pragma comment(linker, "/include:??A?$vector@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@QAEAAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$SigmoidLayer@N@caffe@@@detail@boost@@QAE@PAV?$SigmoidLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0O@NAIHABP@?5data?5points?4?$AA@")
#pragma comment(linker, "/include:?Reshape@?$Blob@N@caffe@@QAEXABVBlobShape@2@@Z")
#pragma comment(linker, "/include:??$?0V?$DummyDataLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$DummyDataLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??1HingeLossParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R0?AV?$GaussianFiller@N@caffe@@@8")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$FlattenLayer@M@caffe@@@detail@boost@@QAE@PAV?$FlattenLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??0?$HingeLossLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$DropoutLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$LRNLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?_Rmost@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?value@?$operator_returns_void@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@F@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@SAAAU?$pair@$$CBU?$pair@HH@std@@H@2@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?has_iter_size@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:__xmm@80000001800000018000000180000001")
#pragma comment(linker, "/include:??$fpclassify@N@math@boost@@YAHN@Z")
#pragma comment(linker, "/include:?gInstantiationGuardArgMaxLayer@caffe@@3DA")
#pragma comment(linker, "/include:??$forward@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@0@AAU10@@Z")
#pragma comment(linker, "/include:?has_shift@ExpParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?LayerType_MAX@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??$construct@MABM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAAV?$allocator@M@1@PAMABM@Z")
#pragma comment(linker, "/include:??$_Ptr_cat@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:??_R2MemoryDataParameter@caffe@@8")
#pragma comment(linker, "/include:??_R2?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??$distance@V?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@std@@@std@@YAHV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@0@0@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$ReLULayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R0?AUbad_year@gregorian@boost@@@8")
#pragma comment(linker, "/include:??1ArgMaxParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??_R0?AV?$TanHLayer@M@caffe@@@8")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@@std@@YAXPAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??_7?$DummyDataLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$ReductionLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??$?0V?$ReLULayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$ReLULayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@I@std@@@std@@SAIABV?$allocator@I@2@@Z")
#pragma comment(linker, "/include:??_7?$BasePrefetchingDataLayer@N@caffe@@6BInternalThread@1@@")
#pragma comment(linker, "/include:??_R0?AV?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@@8")
#pragma comment(linker, "/include:?kIncludeFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?Engine_ARRAYSIZE@SigmoidParameter@caffe@@2HB")
#pragma comment(linker, "/include:?HingeLossParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??0?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@QAE@ABVthread_resource_error@2@@Z")
#pragma comment(linker, "/include:?New@Datum@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$ConvolutionLayer@N@caffe@@@boost@@YAXPAV?$ConvolutionLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?value@?$integral_constant@_N$00@internal@protobuf@google@@2_NB")
#pragma comment(linker, "/include:??_C@_0O@NEFGBKNP@h?5?$DM?$DN?5height?$CI?$CJ?$AA@")
#pragma comment(linker, "/include:??_C@_0DI@DEMJLJEH@bottom?$FLselector_index?$FN?9?$DOshape?$CI0?$CJ@")
#pragma comment(linker, "/include:?value@?$ice_eq@$0BI@$03@type_traits@boost@@2_NB")
#pragma comment(linker, "/include:?ShapeEquals@?$Blob@N@caffe@@QAE_NABVBlobProto@2@@Z")
#pragma comment(linker, "/include:??$OwnInternal@VEltwiseParameter@caffe@@@Arena@protobuf@google@@AAEXPAVEltwiseParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?mutable_mvn_param@LayerParameter@caffe@@QAEPAVMVNParameter@2@XZ")
#pragma comment(linker, "/include:??$?0V?$ImageDataLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$ImageDataLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?CUDNN@PoolingParameter@caffe@@2W4PoolingParameter_Engine@2@B")
#pragma comment(linker, "/include:??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z")
#pragma comment(linker, "/include:?CopyFrom@BlobProto@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_GNetState@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?value@?$ice_or@$00$0A@$0A@$0A@$0A@$0A@$0A@@type_traits@boost@@2_NB")
#pragma comment(linker, "/include:??A?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@QAEAAPAV?$Blob@M@caffe@@I@Z")
#pragma comment(linker, "/include:??_C@_0CB@PCIKECIB@?5?5foreground?5sampling?5fraction?3?5@")
#pragma comment(linker, "/include:?value@?$is_error_condition_enum@W4errc_t@errc@system@boost@@@system@boost@@2_NB")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?kTypeFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?shape@?$Blob@H@caffe@@QBEABV?$vector@HV?$allocator@H@std@@@std@@XZ")
#pragma comment(linker, "/include:??0?$_Tree_buy@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@1@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$ArgMaxLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$ArgMaxLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?ShareDiff@?$Blob@I@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$_Move@AAPAVSigmoidParameter@caffe@@@std@@YA$$QAPAVSigmoidParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??1?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$ContrastiveLossLayer@N@caffe@@8")
#pragma comment(linker, "/include:??0?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?InternalSwap@V1LayerParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:??0?$uniform_real_distribution@N@random@boost@@QAE@NN@Z")
#pragma comment(linker, "/include:?is_not_a_date@?$date@V0gregorian@boost@@Vgregorian_calendar@12@Vdate_duration@12@@date_time@boost@@QBE_NXZ")
#pragma comment(linker, "/include:??0?$basic_fstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z")
#pragma comment(linker, "/include:??$move@AAM@std@@YA$$QAMAAM@Z")
#pragma comment(linker, "/include:?Reshape@?$SigmoidCrossEntropyLossLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_E?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@WM@AEPAXI@Z")
#pragma comment(linker, "/include:??0SyncedMemory@caffe@@QAE@I@Z")
#pragma comment(linker, "/include:??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?has_crop_size@DataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?ShapeEquals@?$Blob@H@caffe@@QAE_NABVBlobProto@2@@Z")
#pragma comment(linker, "/include:?set_has_threshold_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_C@_03KHJOGHMM@exp?$AA@")
#pragma comment(linker, "/include:?kSliceParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?set_std@FillerParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??$?ONH@std@@YA_NABU?$pair@NH@0@0@Z")
#pragma comment(linker, "/include:??_C@_06HPNLBHBC@Im2col?$AA@")
#pragma comment(linker, "/include:?Forward_cpu@?$DropoutLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?has_shuffle_images@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?Forward_cpu@?$SliceLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?SharedCtor@ConcatParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$destroy@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@QAEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@1@@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VLRNParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVLRNParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?Reshape@?$AccuracyLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R2exception@boost@@8")
#pragma comment(linker, "/include:??_R3?$SPPLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??$destroy@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@QAEXPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@1@@Z")
#pragma comment(linker, "/include:?has_height@Datum@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@VRNG@Caffe@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?output_t@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@2IB")
#pragma comment(linker, "/include:??0?$EltwiseLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?ComputeUpdateValue@?$NesterovSolver@M@caffe@@MAEXHM@Z")
#pragma comment(linker, "/include:??$_Uninitialized_copy@V?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@PANU?$_Wrap_alloc@V?$allocator@N@std@@@2@@std@@YAPANV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@0@0PANAAU?$_Wrap_alloc@V?$allocator@N@std@@@0@@Z")
#pragma comment(linker, "/include:??$swap@PAV?$Filler@M@caffe@@@std@@YAXAAPAV?$Filler@M@caffe@@0@Z")
#pragma comment(linker, "/include:??$Check_GTImpl@IH@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABIABHPBD@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$Net@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:__xmm@80000000800000008000000080000000")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$AccuracyLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@?$uniform_real_distribution@M@random@boost@@QBEMAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@@Z")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@EBEXXZ")
#pragma comment(linker, "/include:??_R4?$PReLULayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?net@?$Solver@M@caffe@@QAE?AV?$shared_ptr@V?$Net@M@caffe@@@boost@@XZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$EuclideanLossLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??_R2NetStateRule@caffe@@8")
#pragma comment(linker, "/include:??_R2?$Layer@N@caffe@@8")
#pragma comment(linker, "/include:?value@?$is_base_and_derived_impl@Vexception@std@@Ubad_month@gregorian@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?size@?$vector@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?mutable_blobs_lr@V0LayerParameter@caffe@@QAEPAV?$RepeatedField@M@protobuf@google@@XZ")
#pragma comment(linker, "/include:?size@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$PoolingLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?accuracy_param@V1LayerParameter@caffe@@QBEABVAccuracyParameter@2@XZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$SliceLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?_Tidy@?$vector@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@2@@std@@IAEXXZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$ReadMessageNoVirtualNoRecursionDepth@VV1LayerParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVV1LayerParameter@caffe@@@Z")
#pragma comment(linker, "/include:?New@StringTypeHandlerBase@internal@protobuf@google@@SAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVArena@34@@Z")
#pragma comment(linker, "/include:??$?0V?$SilenceLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$SilenceLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?TYPE_SINT64@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Type@23@B")
#pragma comment(linker, "/include:?CopyFrom@EltwiseParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?MilliSeconds@Timer@caffe@@UAEMXZ")
#pragma comment(linker, "/include:?digits@?$numeric_limits@_W@std@@2HB")
#pragma comment(linker, "/include:?LayerSetUp@?$BaseDataLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0CO@EPBNIFNG@Unknown?5parameter?5bias_filler?5fo@")
#pragma comment(linker, "/include:??_C@_03MFPIGDOF@?5?$DO?5?$AA@")
#pragma comment(linker, "/include:??_C@_0CG@DJGJHCH@Unknown?5parameter?5pad?5for?5layer?5@")
#pragma comment(linker, "/include:??$construct@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@U12@@?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@QAEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@1@$$QAU21@@Z")
#pragma comment(linker, "/include:??$?0V?$WindowDataLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$WindowDataLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$ConvolutionLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?set_shift@PowerParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?pad_w@PoolingParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??$?0V?$Layer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$Layer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$?0I@?$allocator@_N@std@@QAE@ABV?$allocator@I@1@@Z")
#pragma comment(linker, "/include:??_R2clone_base@exception_detail@boost@@8")
#pragma comment(linker, "/include:?allocate_raw_heap_memory@detail@boost@@YAPAXI@Z")
#pragma comment(linker, "/include:??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8")
#pragma comment(linker, "/include:?CanonicalAxisIndex@?$Blob@N@caffe@@QBEHH@Z")
#pragma comment(linker, "/include:??$_Unchecked@PAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@PAV12@@Z")
#pragma comment(linker, "/include:??_Gsystem_error@system@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R2?$thread_data@V?$bind_t@XV?$mf0@XVInternalThread@caffe@@@_mfi@boost@@V?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@3@@_bi@boost@@@detail@boost@@8")
#pragma comment(linker, "/include:?average_loss@SolverParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??$put_head@DU?$char_traits@D@std@@@detail@io@boost@@YAXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@ABU?$put_holder@DU?$char_traits@D@std@@@012@@Z")
#pragma comment(linker, "/include:?kTopFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@")
#pragma comment(linker, "/include:?set_group@ConvolutionParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??$_Rechecked@PAPAV?$Blob@N@caffe@@PAPAV12@@std@@YAAAPAPAV?$Blob@N@caffe@@AAPAPAV12@PAPAV12@@Z")
#pragma comment(linker, "/include:?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?prelu_param@LayerParameter@caffe@@QBEABVPReLUParameter@2@XZ")
#pragma comment(linker, "/include:??1SyncedMemory@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?Swap@LayerParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@1@$$QA_N@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$Im2colLayer@N@caffe@@@detail@boost@@QAE@PAV?$Im2colLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@1@0@Z")
#pragma comment(linker, "/include:?value@?$is_const_rvalue_filter@_K@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$Layer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$Check_NEImpl@PAV?$Blob@M@caffe@@PAV12@@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABQAV?$Blob@M@caffe@@0PBD@Z")
#pragma comment(linker, "/include:?kPyGenericServicesFieldNumber@FileOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:?type@?$LogLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:??_C@_0BF@LEFLBFJ@Check?5failed?3?5count?5?$AA@")
#pragma comment(linker, "/include:?kNormRegionFieldNumber@LRNParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_C@_0EH@ODMMHDBB@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@@std@@QAEAAU?$pair@HH@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z")
#pragma comment(linker, "/include:?type@V1LayerParameter@caffe@@QBE?AW4V1LayerParameter_LayerType@2@XZ")
#pragma comment(linker, "/include:??_R2too_few_args@io@boost@@8")
#pragma comment(linker, "/include:?set_axis@AccuracyParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?gInstantiationGuardFlattenLayer@caffe@@3DA")
#pragma comment(linker, "/include:??_R4?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@6Btoo_many_args@io@2@@")
#pragma comment(linker, "/include:??$_Unchecked@PAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@PAV12@@Z")
#pragma comment(linker, "/include:??$swap@PAVConvolutionParameter@caffe@@@std@@YAXAAPAVConvolutionParameter@caffe@@0@Z")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$EltwiseLayer@N@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??$?0V?$Net@N@caffe@@@?$shared_ptr@V?$Net@N@caffe@@@boost@@QAE@PAV?$Net@N@caffe@@@Z")
#pragma comment(linker, "/include:??1?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?function@?1???$float_next_imp@NU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@math@boost@@@detail@math@boost@@YANABNABU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@23@@Z@4PBDB")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBU?$pair@HH@std@@M@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBU?$pair@HH@std@@M@1@@Z")
#pragma comment(linker, "/include:??0?$NesterovSolver@N@caffe@@QAE@ABVSolverParameter@1@@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$EltwiseLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_C@_0BI@NOAFIKAC@batch_size_?5?$CK?5size_?5?$DO?50?$AA@")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@1@@Z")
#pragma comment(linker, "/include:?mutable_cpu_diff@?$Blob@H@caffe@@QAEPAHXZ")
#pragma comment(linker, "/include:??B?$fpos@H@std@@QBE_JXZ")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VMVNParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVMVNParameter@caffe@@@Z")
#pragma comment(linker, "/include:??9?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:?add_test_net_param@SolverParameter@caffe@@QAEPAVNetParameter@2@XZ")
#pragma comment(linker, "/include:??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z")
#pragma comment(linker, "/include:?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z")
#pragma comment(linker, "/include:??$OwnInternal@VConvolutionParameter@caffe@@@Arena@protobuf@google@@AAEXPAVConvolutionParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?size@?$vector@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$addressof@V?$vector@HV?$allocator@H@std@@@std@@@std@@YAPAV?$vector@HV?$allocator@H@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??_R2?$BasePrefetchingDataLayer@M@caffe@@8")
#pragma comment(linker, "/include:??$Creator_DropoutLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??$_Distance@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@0@0AAI@Z")
#pragma comment(linker, "/include:??$_Move@AA_J@std@@YA$$QA_JAA_J@Z")
#pragma comment(linker, "/include:?base@LogParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:??$forward@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@0@AAU10@@Z")
#pragma comment(linker, "/include:??$?0V?$MVNLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$MVNLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?has_base@ExpParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_0FM@PCDADFGB@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?_Destroy@?$vector@V?$shared_ptr@V?$Net@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@IAEXPAV?$shared_ptr@V?$Net@M@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:??$Create@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Arena@protobuf@google@@SAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV012@@Z")
#pragma comment(linker, "/include:??$addressof@U?$pair@HH@std@@@std@@YAPAU?$pair@HH@0@AAU10@@Z")
#pragma comment(linker, "/include:??_C@_0BF@GAFJJLAC@input_width?5?$DN?$DN?5width?$AA@")
#pragma comment(linker, "/include:?Forward_cpu@?$Im2colLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?kPowerFieldNumber@PowerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VPReLUParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVPReLUParameter@caffe@@@Z")
#pragma comment(linker, "/include:?value@?$is_function_impl@U?$thread_move_t@Uvoid_fct_ptr_barrier_reseter@thread_detail@boost@@@detail@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??1WindowDataParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_7system_error@system@boost@@6B@")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@MH@std@@@std@@@std@@@std@@YAXPAU?$pair@MH@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@MH@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??_7?$MVNLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?GetCachedSize@LogParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R3?$LRNLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??$caffe_sqr@N@caffe@@YAXHPBNPAN@Z")
#pragma comment(linker, "/include:??_C@_07DCLBNMLN@generic?$AA@")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$SigmoidLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$SigmoidLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?has_snapshot_after_train@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?kClientStreamingFieldNumber@MethodDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$MVNLayer@N@caffe@@@detail@boost@@QAE@PAV?$MVNLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$_Move@AAPAVPoolingParameter@caffe@@@std@@YA$$QAPAVPoolingParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?mask_bits@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@2IB")
#pragma comment(linker, "/include:??0?$ImageDataLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VLossParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVLossParameter@caffe@@@Z")
#pragma comment(linker, "/include:?value@?$operator_returns_Ret@V?$basic_istream@DU?$char_traits@D@std@@@std@@HUdont_care@has_right_shift_impl@detail@boost@@$0A@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?mutable_unknown_fields@NetParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z")
#pragma comment(linker, "/include:??$_Umove@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@IAEPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@PAU21@00@Z")
#pragma comment(linker, "/include:??$addressof@$$CBM@std@@YAPBMABM@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$AbsValLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?value@?$length@Unull_type@tuples@boost@@@tuples@boost@@2HB")
#pragma comment(linker, "/include:?kInitialSize@?$RepeatedField@H@protobuf@google@@0HB")
#pragma comment(linker, "/include:??_R3?$ThresholdLayer@N@caffe@@8")
#pragma comment(linker, "/include:??0?$_Tree_comp@$0A@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHH@std@@@1@@Z")
#pragma comment(linker, "/include:?pointer_to@?$pointer_traits@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@SAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@2@AAU32@@Z")
#pragma comment(linker, "/include:??0?$Layer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??_C@_0CG@BLIDKODB@bottom?$FLselector_index?$FN?9?$DOshape?$CIi?$CJ@")
#pragma comment(linker, "/include:??0?$_Tree_comp@$0A@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z")
#pragma comment(linker, "/include:??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBU?$pair@HH@std@@U12@@1@XZ")
#pragma comment(linker, "/include:?set_has_iter_size@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$Solver@N@caffe@@8")
#pragma comment(linker, "/include:??$_Move@AAPAVReLUParameter@caffe@@@std@@YA$$QAPAVReLUParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$FilterLayer@N@caffe@@@detail@boost@@QAE@PAV?$FilterLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0BG@FDFBENDD@Filter?5must?5be?5square?$AA@")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$?0V?$DeconvolutionLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$DeconvolutionLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?InitAsDefaultInstance@NetStateRule@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?value@?$operator_returns_Ret@V?$basic_istream@DU?$char_traits@D@std@@@std@@_JUdont_care@has_right_shift_impl@detail@boost@@$0A@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$GetTanHLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??_R4?$ConstantFiller@M@caffe@@6B@")
#pragma comment(linker, "/include:?value@?$is_pod_impl@Ua32@tt_align_ns@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??$?0V?$ReductionLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$ReductionLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$ReductionLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@@std@@YAPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$HingeLossLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?GetLearningRate@?$SGDSolver@N@caffe@@IAENXZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$BNLLLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$ArgMaxLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??_R2?$SilenceLayer@N@caffe@@8")
#pragma comment(linker, "/include:?SharedCtor@ImageDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?UpgradeV0PaddingLayers@caffe@@YAXABVNetParameter@1@PAV21@@Z")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_C@_04LPCGNKHA@conv?$AA@")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$DataTransformer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?kTestIntervalFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@@8")
#pragma comment(linker, "/include:?value@?$ice_or@$0A@$0A@$0A@$0A@$0A@$0A@$0A@@type_traits@boost@@2_NB")
#pragma comment(linker, "/include:?clear_has_mirror@ImageDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?kNewChannelsFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@1@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$LogLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?stride_w@PoolingParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:__TI8?AV?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$LRNLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$caffe_copy@N@caffe@@YAXHPBNPAN@Z")
#pragma comment(linker, "/include:?Reshape@?$ReductionLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?vdExp@@YAXHPBNPAN@Z")
#pragma comment(linker, "/include:?clear@?$vector@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@QAEXXZ")
#pragma comment(linker, "/include:??$checked_delete@V?$Filler@M@caffe@@@boost@@YAXPAV?$Filler@M@caffe@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@ReLUParameter@caffe@@8")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$DeconvolutionLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?_Tidy@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:??1?$BaseConvolutionLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?set_has_contrastive_loss_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?GetCachedSize@SPPParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?to_special@?$int_adapter@_J@date_time@boost@@SA?AW4special_values@23@_J@Z")
#pragma comment(linker, "/include:??_R2SigmoidParameter@caffe@@8")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:?LayerSetUp@?$Layer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?clone@?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:??1?$shared_ptr@VRNG@Caffe@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??_R2?$PositiveUnitballFiller@M@caffe@@8")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@InnerProductParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:?mutable_gpu_diff@?$Blob@H@caffe@@QAEPAHXZ")
#pragma comment(linker, "/include:??_R4InternalThread@caffe@@6B@")
#pragma comment(linker, "/include:??$OwnInternal@VArgMaxParameter@caffe@@@Arena@protobuf@google@@AAEXPAVArgMaxParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QBEPBHXZ")
#pragma comment(linker, "/include:??0SPPParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?Get@?$RepeatedField@H@protobuf@google@@QBEABHH@Z")
#pragma comment(linker, "/include:??_R4MemoryDataParameter@caffe@@6B@")
#pragma comment(linker, "/include:??1?$SigmoidLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?kMeanFileFieldNumber@DataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?set_has_group@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?mutable_hdf5_output_param@V0LayerParameter@caffe@@QAEPAVHDF5OutputParameter@2@XZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?gInstantiationGuardSPPLayer@caffe@@3DA")
#pragma comment(linker, "/include:??$Creator_FilterLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??1?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@ConcatParameter@caffe@@8")
#pragma comment(linker, "/include:??_R4V1LayerParameter@caffe@@6B@")
#pragma comment(linker, "/include:??1?$RepeatedField@I@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:??$Clear@VTypeHandler@?$RepeatedPtrField@VNetParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXXZ")
#pragma comment(linker, "/include:?New@DropoutParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??$?0V?$Filler@M@caffe@@@?$shared_ptr@V?$Filler@M@caffe@@@boost@@QAE@PAV?$Filler@M@caffe@@@Z")
#pragma comment(linker, "/include:?allocate@?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@QAEPAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@2@I@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$PowerLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@1@$$QA_N@Z")
#pragma comment(linker, "/include:?zero@?$is_unsigned_values@_K@detail@boost@@2_KB")
#pragma comment(linker, "/include:??_R2?$ConcatLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$checked_delete@V?$AccuracyLayer@N@caffe@@@boost@@YAXPAV?$AccuracyLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?Swap@FillerParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:?blob_loss_weights@?$Net@M@caffe@@QBEABV?$vector@MV?$allocator@M@std@@@std@@XZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$Blob@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??$_Allocate@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Net@M@caffe@@@boost@@IPAV12@@Z")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$Blob@M@caffe@@PAV12@PAV12@@std@@YAPAPAV?$Blob@M@caffe@@PAPAV12@00AAU?$_Wrap_alloc@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$OwnInternal@VSolverParameter@caffe@@@Arena@protobuf@google@@AAEXPAVSolverParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:??$GetConvolutionLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@")
#pragma comment(linker, "/include:?SharedCtor@BlobShape@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?is_integer@_Num_float_base@std@@2_NB")
#pragma comment(linker, "/include:?MinTopBlobs@?$PoolingLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?Normalize@?$SGDSolver@M@caffe@@MAEXH@Z")
#pragma comment(linker, "/include:??$construct@V?$vector@_NV?$allocator@_N@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@1@PAV?$vector@_NV?$allocator@_N@std@@@1@$$QAV31@@Z")
#pragma comment(linker, "/include:??$_Allocate@PAV?$Blob@N@caffe@@@std@@YAPAPAV?$Blob@N@caffe@@IPAPAV12@@Z")
#pragma comment(linker, "/include:??1?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R2ImageDataParameter@caffe@@8")
#pragma comment(linker, "/include:??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@@?$uniform_int_distribution@H@rand@boost@@QBEHAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$WindowDataLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?descriptor@AccuracyParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$_Fill@PAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@U1234@@std@@YAXPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@0ABU1234@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$SoftmaxLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?_Grow_to@?$vector@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@IBEII@Z")
#pragma comment(linker, "/include:?ToProto@?$Blob@M@caffe@@QBEXPAVBlobProto@2@_N@Z")
#pragma comment(linker, "/include:??$Check_GTImpl@II@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI0PBD@Z")
#pragma comment(linker, "/include:??$str2int@HV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$ctype@D@2@@detail@io@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV34@0AAHABV?$ctype@D@4@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$MVNLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?capacity@?$vector@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?has_axis@AccuracyParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$?6V?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@Uthrow_file_@2@PBD@boost@@YAABV?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@0@ABV120@ABV?$error_info@Uthrow_file_@boost@@PBD@0@@Z")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??R?$less@U?$pair@HH@std@@@std@@QBE_NABU?$pair@HH@1@0@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$Im2colLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$SplitLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_G?$thread_data@V?$bind_t@XV?$mf0@XVInternalThread@caffe@@@_mfi@boost@@V?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@3@@_bi@boost@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z")
#pragma comment(linker, "/include:?_Xlen@?$vector@DV?$allocator@D@std@@@std@@IBEXXZ")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVReductionParameter@caffe@@@internal@protobuf@google@@YAPBVReductionParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?_Reserve@?$vector@IV?$allocator@_N@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?set_clip_gradients@SolverParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??$caffe_abs@N@caffe@@YAXHPBNPAN@Z")
#pragma comment(linker, "/include:?NewFromPrototype@?$GenericTypeHandler@VFillerParameter@caffe@@@internal@protobuf@google@@SAPAVFillerParameter@caffe@@PBV56@PAVArena@34@@Z")
#pragma comment(linker, "/include:??1?$TanHLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?construct@?$allocator@H@std@@QAEXPAHABH@Z")
#pragma comment(linker, "/include:??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QAE?AV01@H@Z")
#pragma comment(linker, "/include:??_C@_07HIAOBKCE@uniform?$AA@")
#pragma comment(linker, "/include:??$_Unchecked@PAV?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Net@M@caffe@@@boost@@PAV12@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$PReLULayer@N@caffe@@8")
#pragma comment(linker, "/include:??$_Move@AAPAVInfogainLossParameter@caffe@@@std@@YA$$QAPAVInfogainLossParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?tanh@@YAMM@Z")
#pragma comment(linker, "/include:??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?value@?$integral_c@I$00@mpl@boost@@2IB")
#pragma comment(linker, "/include:?set_num_output@ConvolutionParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??_C@_03KDLJKADA@inv?$AA@")
#pragma comment(linker, "/include:?solver_mode@SolverParameter@caffe@@QBE?AW4SolverParameter_SolverMode@2@XZ")
#pragma comment(linker, "/include:?has_width@BlobProto@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??0?$vector@V?$shared_ptr@V?$Net@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$SPPLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??1?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R0?AV?$Solver@M@caffe@@@8")
#pragma comment(linker, "/include:??0?$DataLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?minus_one@?$is_unsigned_values@I@detail@boost@@2IB")
#pragma comment(linker, "/include:?_Key@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@IBEABU?$pair@HH@2@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?AllowForceBackward@?$EuclideanLossLayer@N@caffe@@UBE_NH@Z")
#pragma comment(linker, "/include:??$MakeCheckOpString@HI@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABHABIPBD@Z")
#pragma comment(linker, "/include:?IsInitialized@BlobProto@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$InnerProductLayer@M@caffe@@@detail@boost@@QAE@PAV?$InnerProductLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?Add@?$RepeatedPtrField@VNetStateRule@caffe@@@protobuf@google@@QAEPAVNetStateRule@caffe@@XZ")
#pragma comment(linker, "/include:?value@?$is_function_impl@E@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$ReductionLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$_Insert_at@AAU?$pair@$$CBU?$pair@HH@std@@M@std@@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@1@AAU?$pair@$$CBU?$pair@HH@std@@M@1@1@Z")
#pragma comment(linker, "/include:??4?$pair@MH@std@@QAEAAU01@$$QAU01@@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$EltwiseLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?Backward_cpu@?$SliceLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$BNLLLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@ArgMaxParameter@caffe@@8")
#pragma comment(linker, "/include:?Clear@SliceParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@ParamSpec@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?kMemoryDataParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$ExpLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?UnsafeArenaSwap@?$RepeatedField@I@protobuf@google@@QAEXPAV123@@Z")
#pragma comment(linker, "/include:?DimCheckMode_MIN@V1LayerParameter@caffe@@2W4V1LayerParameter_DimCheckMode@2@B")
#pragma comment(linker, "/include:??0bad_format_string@io@boost@@QAE@II@Z")
#pragma comment(linker, "/include:?CopyFrom@LossParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?cpu_diff@?$Blob@N@caffe@@QBEPBNXZ")
#pragma comment(linker, "/include:?New@PReLUParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_C@_0BB@ODMAEKCK@?$DL?5you?5specified?5?$AA@")
#pragma comment(linker, "/include:?set_base@ExpParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??0?$InnerProductLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?value@?$integral_c@_J$0GE@@mpl@boost@@2_JB")
#pragma comment(linker, "/include:?Backward_gpu@?$ContrastiveLossLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?MergeFrom@DropoutParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?Clear@?$RepeatedPtrField@VV1LayerParameter@caffe@@@protobuf@google@@QAEXXZ")
#pragma comment(linker, "/include:__CTA7?AV?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:??$caffe_scal@M@caffe@@YAXHMPAM@Z")
#pragma comment(linker, "/include:?MaxBottomBlobs@?$Layer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?SetCachedSize@PythonParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$ReductionLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$ReductionLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??0?$RepeatedPtrField@VNetStateRule@caffe@@@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:?size@?$basic_format@DU?$char_traits@D@std@@V?$allocator@D@2@@boost@@QBEIXZ")
#pragma comment(linker, "/include:??_R2?$Solver@N@caffe@@8")
#pragma comment(linker, "/include:??$checked_delete@V?$WindowDataLayer@M@caffe@@@boost@@YAXPAV?$WindowDataLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_R0?AVNo_Op@?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@@8")
#pragma comment(linker, "/include:?LayerSetUp@?$DummyDataLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$Blob@N@caffe@@@boost@@YAXPAV?$Blob@N@caffe@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$Net@N@caffe@@8")
#pragma comment(linker, "/include:??_C@_0CK@DIFHEKMG@Infogain?5matrix?5source?5must?5be?5s@")
#pragma comment(linker, "/include:??$?0V?$SigmoidLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$SigmoidLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?ReductionOp_MIN@ReductionParameter@caffe@@2W4ReductionParameter_ReductionOp@2@B")
#pragma comment(linker, "/include:?MutableNoArena@ArenaStringPtr@internal@protobuf@google@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBV56@@Z")
#pragma comment(linker, "/include:??$_Rechecked@PAV?$shared_ptr@V?$Net@N@caffe@@@boost@@PAV12@@std@@YAAAPAV?$shared_ptr@V?$Net@N@caffe@@@boost@@AAPAV12@PAV12@@Z")
#pragma comment(linker, "/include:?clear_has_scale@ImageDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Val_type@PAPAV?$FlattenLayer@N@caffe@@@std@@YAPAPAV?$FlattenLayer@N@caffe@@PAPAV12@@Z")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@1@AAPAU31@@Z")
#pragma comment(linker, "/include:?New@?$GenericTypeHandler@VNetParameter@caffe@@@internal@protobuf@google@@SAPAVNetParameter@caffe@@PAVArena@34@@Z")
#pragma comment(linker, "/include:?SetUp@?$Layer@M@caffe@@QAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?_Reallocate@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$Blob@N@caffe@@@boost@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@QAEPAXI@Z")
#pragma comment(linker, "/include:?kHdf5OutputParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@HH@std@@@std@@@std@@@std@@YAXPAU?$pair@HH@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@HH@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?kFixed32Size@WireFormatLite@internal@protobuf@google@@2HB")
#pragma comment(linker, "/include:?kPoolFieldNumber@SPPParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R2LogParameter@caffe@@8")
#pragma comment(linker, "/include:?_Reserve@?$vector@U?$pair@NH@std@@V?$allocator@U?$pair@NH@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??_C@_0DB@IPNKGMLL@target_blobs?4size?$CI?$CJ?5?$DN?$DN?5source_la@")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$AccuracyLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?value@?$is_function_impl@$$CBV?$optional@Vlocale@std@@@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?mpl_assertion_in_line_10@?$facade_iterator_category_impl@Uforward_traversal_tag@iterators@boost@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV45@@detail@iterators@boost@@2IB")
#pragma comment(linker, "/include:??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base0@1@@Z")
#pragma comment(linker, "/include:?set_has_loss_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?has_engine@ReLUParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ")
#pragma comment(linker, "/include:??_7?$SplitLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??$_Move@AAPAVInnerProductParameter@caffe@@@std@@YA$$QAPAVInnerProductParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?MaxTopBlobs@?$DataLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?_Tidy@?$vector@DV?$allocator@D@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:?value@?$is_pod_impl@$$CDX@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$SPPLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_R4?$ImageDataLayer@N@caffe@@6BInternalThread@1@@")
#pragma comment(linker, "/include:??_C@_0CL@FOENIGPP@channels_?5?$DN?$DN?5bottom?$FLbottom_id?$FN?9?$DO@")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$DataLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??0?$arg@$01@boost@@QAE@XZ")
#pragma comment(linker, "/include:??$ReadPrimitive@I$0N@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAI@Z")
#pragma comment(linker, "/include:??$_Allocate@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@YAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@IPAV10@@Z")
#pragma comment(linker, "/include:??_R3MessageLite@protobuf@google@@8")
#pragma comment(linker, "/include:?end@?$vector@IV?$allocator@_N@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@VCursor@db@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?CopyFrom@PythonParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@@std@@QAEAAV01@H@Z")
#pragma comment(linker, "/include:??$?0V?$SPPLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$SPPLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?set_has_reduction_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_C@_0EP@LKAAJEIC@boost?3?3too_few_args?3?5format?9stri@")
#pragma comment(linker, "/include:?set_has_axis@FlattenParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Move@AAPAURep@RepeatedPtrFieldBase@internal@protobuf@google@@@std@@YA$$QAPAURep@RepeatedPtrFieldBase@internal@protobuf@google@@AAPAU12345@@Z")
#pragma comment(linker, "/include:??_C@_0BE@MNDFHGBK@?9D?5Blob?5with?5shape?5?$AA@")
#pragma comment(linker, "/include:??G?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QBEHABV01@@Z")
#pragma comment(linker, "/include:?kEltwiseParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?den@?$ratio@$00$0CHBA@@boost@@2_JB")
#pragma comment(linker, "/include:??$max@M@std@@YAABMABM0@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$SilenceLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?kWeightFillerFieldNumber@InnerProductParameter@caffe@@2HB")
#pragma comment(linker, "/include:?set_has_end_axis@FlattenParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?allocate@?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@QAEPAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:??_C@_08OCFPCPNO@?5samples?$AA@")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@BlobShape@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??_C@_06BNBFNNGL@xavier?$AA@")
#pragma comment(linker, "/include:??_C@_0P@LJAPHFC@hashtag?5?$DN?$DN?5?$CC?$CD?$CC?$AA@")
#pragma comment(linker, "/include:??$construct@V?$vector@MV?$allocator@M@std@@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@1@PAV?$vector@MV?$allocator@M@std@@@1@ABV31@@Z")
#pragma comment(linker, "/include:??$Creator_SigmoidCrossEntropyLossLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?push_back@?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@QAEX$$QAPAV?$Blob@M@caffe@@@Z")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$vector@MV?$allocator@M@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@2@@std@@YAPAV?$vector@MV?$allocator@M@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$DataTransformer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$SliceLayer@N@caffe@@8")
#pragma comment(linker, "/include:__xmm@7fffffffffffffff7fffffffffffffff")
#pragma comment(linker, "/include:?mutable_channels@DummyDataParameter@caffe@@QAEPAV?$RepeatedField@I@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R4?$PowerLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?set_momentum@SolverParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?set_det_fg_fraction@V0LayerParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?mutable_width@DummyDataParameter@caffe@@QAEPAV?$RepeatedField@I@protobuf@google@@XZ")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$Net@M@caffe@@@boost@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$DataLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$SilenceLayer@M@caffe@@@detail@boost@@QAE@PAV?$SilenceLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?kInfogainLossParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?mvn_param@V1LayerParameter@caffe@@QBEABVMVNParameter@2@XZ")
#pragma comment(linker, "/include:??$Creator_SoftmaxWithLossLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?Capacity@?$RepeatedField@_N@protobuf@google@@QBEHXZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$TanHLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??0?$DataLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?test_net_size@SolverParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@2@@Z")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@ABV?$allocator@H@1@@Z")
#pragma comment(linker, "/include:?tanh_param@V1LayerParameter@caffe@@QBEABVTanHParameter@2@XZ")
#pragma comment(linker, "/include:?value@?$enable_binary_hash@N$0BI@$0IA@@hash_detail@boost@@2_NB")
#pragma comment(linker, "/include:??0?$Net@M@caffe@@QAE@ABVNetParameter@1@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$ConcatLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:?clear_has_scale@WindowDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??1?$_Tree_buy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@@2@@std@@YAPAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?default_instance@TanHParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$addressof@M@std@@YAPAMAAM@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$InnerProductLayer@N@caffe@@@boost@@YAXPAV?$InnerProductLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??0?$Blob@H@caffe@@QAE@ABV?$vector@HV?$allocator@H@std@@@std@@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$Layer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??_R4?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:?CAFFE@ConvolutionParameter@caffe@@2W4ConvolutionParameter_Engine@2@B")
#pragma comment(linker, "/include:??_R4?$FilterLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?resize@?$vector@V?$shared_ptr@V?$Net@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@QAEXI@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$DropoutLayer@M@caffe@@8")
#pragma comment(linker, "/include:??0too_few_args@io@boost@@QAE@ABV012@@Z")
#pragma comment(linker, "/include:?engine@ReLUParameter@caffe@@QBE?AW4ReLUParameter_Engine@2@XZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$ImageDataLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$Own@VReductionParameter@caffe@@@Arena@protobuf@google@@QAEXPAVReductionParameter@caffe@@@Z")
#pragma comment(linker, "/include:?value@?$is_arithmetic_impl@_K@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??_7?$TanHLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?sparse@FillerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??0LossParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??$?0V?$DataTransformer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$DataTransformer@M@caffe@@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$ReductionLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$_Move@AAPAVExpParameter@caffe@@@std@@YA$$QAPAVExpParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?has_mean_file@TransformationParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?set_has_pooling_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$caffe_cpu_hamming_distance@N@caffe@@YAHHPBN0@Z")
#pragma comment(linker, "/include:??_R3?$BaseConvolutionLayer@N@caffe@@8")
#pragma comment(linker, "/include:?Backward_gpu@?$LogLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$ThresholdLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$ThresholdLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?kDataParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@SigmoidParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?caffe_memset@caffe@@YAXIHPAX@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$SigmoidLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?mutable_unknown_fields@WindowDataParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_7?$ReshapeLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?pointer_to@?$pointer_traits@PAU?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@SAPAU?$pair@$$CBU?$pair@HH@std@@H@2@AAU32@@Z")
#pragma comment(linker, "/include:?GetMetadata@ReLUParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?bottom_vecs@?$Net@N@caffe@@QBEABV?$vector@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@XZ")
#pragma comment(linker, "/include:?digits10@?$numeric_limits@_W@std@@2HB")
#pragma comment(linker, "/include:??$generate_int_float_pair@M$07V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@detail@random@boost@@YA?AU?$pair@MH@std@@AAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@@Z")
#pragma comment(linker, "/include:?BackwardDebugInfo@?$Net@N@caffe@@IAEXH@Z")
#pragma comment(linker, "/include:?value@?$is_ununsigned_helper@H@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$_Uninit_def_fill_n@MIM@std@@YAXPAMIAAU?$_Wrap_alloc@V?$allocator@M@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$DropoutLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?value@?$integral_c@I$0A@@mpl@boost@@2IB")
#pragma comment(linker, "/include:??$swap@PAVExpParameter@caffe@@@std@@YAXAAPAVExpParameter@caffe@@0@Z")
#pragma comment(linker, "/include:??_R2?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$TanHLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$TanHLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??$Own@VConcatParameter@caffe@@@Arena@protobuf@google@@QAEXPAVConcatParameter@caffe@@@Z")
#pragma comment(linker, "/include:??Bgreg_day@gregorian@boost@@QBEGXZ")
#pragma comment(linker, "/include:??_GBlobShape@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$DataTransformer@N@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBHH@std@@ABUpiecewise_construct_t@2@V?$tuple@ABH@2@V?$tuple@$$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBHH@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABH@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?kSourceFieldNumber@InfogainLossParameter@caffe@@2HB")
#pragma comment(linker, "/include:??1?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$Creator_EuclideanLossLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?CAFFE@ReLUParameter@caffe@@2W4ReLUParameter_Engine@2@B")
#pragma comment(linker, "/include:?descriptor@FillerParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?kPoolFieldNumber@PoolingParameter@caffe@@2HB")
#pragma comment(linker, "/include:?SharedCtor@BlobProtoVector@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Unchecked@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@YAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@0@PAU10@@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$DropoutLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?width@?$Blob@N@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?UpgradeV0Net@caffe@@YA_NABVNetParameter@1@PAV21@@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VInfogainLossParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVInfogainLossParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:??$_Insert_at@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@1@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@1@Z")
#pragma comment(linker, "/include:??_G?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@QAEPAXI@Z")
#pragma comment(linker, "/include:?_Tidy@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@2@@std@@IAEXXZ")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@WindowDataParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$WindowDataLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$WindowDataLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?CType_MAX@FieldOptions@protobuf@google@@2W4FieldOptions_CType@23@B")
#pragma comment(linker, "/include:?ForwardFromTo@?$Net@N@caffe@@QAENHH@Z")
#pragma comment(linker, "/include:?Engine_MIN@TanHParameter@caffe@@2W4TanHParameter_Engine@2@B")
#pragma comment(linker, "/include:??$swap@PAVthread@boost@@@std@@YAXAAPAVthread@boost@@0@Z")
#pragma comment(linker, "/include:?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z")
#pragma comment(linker, "/include:??1?$Solver@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?set_has_scale@WindowDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?Engine_MIN@ReLUParameter@caffe@@2W4ReLUParameter_Engine@2@B")
#pragma comment(linker, "/include:??_R3?$GaussianFiller@M@caffe@@8")
#pragma comment(linker, "/include:??_R4_Iostream_error_category@std@@6B@")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVWindowDataParameter@caffe@@@internal@protobuf@google@@YAPBVWindowDataParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:??_R4?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:?Fill@?$GaussianFiller@M@caffe@@UAEXPAV?$Blob@M@2@@Z")
#pragma comment(linker, "/include:?channels_size@DummyDataParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?_Lrotate@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?Type_ARRAYSIZE@FieldDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_C@_0FH@DGPGKIGN@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??$Own@VPythonParameter@caffe@@@Arena@protobuf@google@@QAEXPAVPythonParameter@caffe@@@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$PoolingLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$SPPLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$SPPLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?kernel_h@PoolingParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??_GRNG@Caffe@caffe@@QAEPAXI@Z")
#pragma comment(linker, "/include:??_R0?AVPoolingParameter@caffe@@@8")
#pragma comment(linker, "/include:??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@1@$$QA_N@Z")
#pragma comment(linker, "/include:?_Reallocate@?$vector@NV?$allocator@N@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VSigmoidParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVSigmoidParameter@caffe@@@Z")
#pragma comment(linker, "/include:?kBiasFillerFieldNumber@InnerProductParameter@caffe@@2HB")
#pragma comment(linker, "/include:?kInitialSize@?$RepeatedField@_J@protobuf@google@@0HB")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??$swap@PAVAccuracyParameter@caffe@@@std@@YAXAAPAVAccuracyParameter@caffe@@0@Z")
#pragma comment(linker, "/include:??_7MemoryDataParameter@caffe@@6B@")
#pragma comment(linker, "/include:?num@?$Blob@H@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?value@?$abs_wknd@_J$00@aux@mpl@boost@@2_JB")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@ConvolutionParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?kRandomSeedFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_C@_0BC@OGOPMKDC@0?5?$DM?$DN?5slice_dim?5?$DM?5?$AA@")
#pragma comment(linker, "/include:?InternalSwap@ReshapeParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$SilenceLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?has_scale@PowerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@VCaffe@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@VCursor@db@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAV?$shared_ptr@V?$Net@N@caffe@@@boost@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@@std@@YAPAV?$shared_ptr@V?$Net@N@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_C@_0EJ@HJDGDPC@The?5size?5of?5datum_vector?5must?5be@")
#pragma comment(linker, "/include:??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ")
#pragma comment(linker, "/include:??$destroy@VNetParameter@caffe@@@?$_Wrap_alloc@V?$allocator@VNetParameter@caffe@@@std@@@std@@QAEXPAVNetParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_R2HingeLossParameter@caffe@@8")
#pragma comment(linker, "/include:?_Buy@?$vector@DV?$allocator@D@std@@@std@@IAE_NI@Z")
#pragma comment(linker, "/include:?kTestNetFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:?construct@?$allocator@N@std@@QAEXPANABN@Z")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$SPPLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?bottom@LayerParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@ReshapeParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$WindowDataLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?InternalSwap@PReLUParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:??_R2SliceParameter@caffe@@8")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$ThresholdLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Voverflow_error@std@@@12@@Z")
#pragma comment(linker, "/include:??_C@_0P@OKNKBGC@?0?5bottom?5blob?5?$AA@")
#pragma comment(linker, "/include:?channels@DummyDataParameter@caffe@@QBEIH@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$AccuracyLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??0?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R2?$LogLayer@M@caffe@@8")
#pragma comment(linker, "/include:?kEnumTypeFieldNumber@DescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?offset@?$Blob@M@caffe@@QBEHHHHH@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?set_has_convolution_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?EltwiseParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$SilenceLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??_G?$Solver@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$_Val_type@PAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@PAV12@@Z")
#pragma comment(linker, "/include:??_C@_0O@MIDOBMMD@crop_size?5?$DO?50?$AA@")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@TanHParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:?height@?$Blob@I@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??_R3ReductionParameter@caffe@@8")
#pragma comment(linker, "/include:??$_Unchecked@PA_J@std@@YAPA_JPA_J@Z")
#pragma comment(linker, "/include:?type@?$ReshapeLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??_C@_0BF@NOKEADDI@n?5?$CF?5batch_size_?5?$DN?$DN?50?$AA@")
#pragma comment(linker, "/include:??_R2?$BaseDataLayer@M@caffe@@8")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$Net@N@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??_7?$DataLayer@M@caffe@@6B?$BaseDataLayer@M@1@@")
#pragma comment(linker, "/include:?_Root@?$_Tree@V?$_Tmap_traits@PBXUtss_data_node@detail@boost@@U?$less@PBX@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@5@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?LayerSetUp@?$SoftmaxWithLossLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@QAE@H@Z")
#pragma comment(linker, "/include:??0MStep@Mat@cv@@QAE@XZ")
#pragma comment(linker, "/include:?SILENCE@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:?kBatchSizeFieldNumber@DataParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$_Rechecked@PAU?$pair@HH@std@@PAU12@@std@@YAAAPAU?$pair@HH@0@AAPAU10@PAU10@@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$BNLLLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??$generate_uniform_int@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@H@detail@rand@boost@@YAHAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@HHU?$bool_@$00@mpl@2@@Z")
#pragma comment(linker, "/include:?set_has_bias_filler@ConvolutionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0bad_alloc_@exception_detail@boost@@QAE@ABU012@@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$WindowDataLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?max_size@?$allocator@U?$pair@MH@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?AccuracyParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?SetCachedSize@PowerParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?DecodeDatumToCVMat@caffe@@YA?AVMat@cv@@ABVDatum@1@_N@Z")
#pragma comment(linker, "/include:?set_device_id@SolverParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$EltwiseLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$SliceLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?has_stepsize@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@IBEXPAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:??D?$shared_ptr@VRNG@Caffe@caffe@@@boost@@QBEAAVRNG@Caffe@caffe@@XZ")
#pragma comment(linker, "/include:?ignore_label@LossParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@PAMPBU_Container_base0@1@@Z")
#pragma comment(linker, "/include:?a_y@?$br_mul@$00$0CHBA@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:??$forward@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??$addressof@PAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@0@AAPAU10@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$ConcatLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_R4?$LogLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??$Creator_ArgMaxLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??0LogParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?value@?$is_function_impl@Ubidirectional_iterator_tag@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??0AccuracyParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??_D?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@QAEXXZ")
#pragma comment(linker, "/include:??_G?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$_Uninit_move@PAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@PAU1234@U?$_Wrap_alloc@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@@std@@YAPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@PAU1234@00AAU?$_Wrap_alloc@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:??0?$allocator@U?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?default_instance_@NetState@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?value@?$abs_wknd@_J$0JIJGIA@@aux@mpl@boost@@2_JB")
#pragma comment(linker, "/include:??0SigmoidParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QBEXABV12@@Z")
#pragma comment(linker, "/include:?gInstantiationGuardAbsValLayer@caffe@@3DA")
#pragma comment(linker, "/include:?SetCachedSize@BlobShape@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVParamSpec@caffe@@@internal@protobuf@google@@YAPBVParamSpec@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$MultinomialLogisticLossLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$FilterLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_G?$BilinearFiller@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R3format_error@io@boost@@8")
#pragma comment(linker, "/include:??$reset@VRNG@Caffe@caffe@@@?$shared_ptr@VRNG@Caffe@caffe@@@boost@@QAEXPAVRNG@Caffe@caffe@@@Z")
#pragma comment(linker, "/include:?MergeFrom@V0LayerParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?Transform@?$DataTransformer@M@caffe@@QAEXABV?$vector@VDatum@caffe@@V?$allocator@VDatum@caffe@@@std@@@std@@PAV?$Blob@M@2@@Z")
#pragma comment(linker, "/include:?ComputeUpdateValue@?$SGDSolver@N@caffe@@MAEXHN@Z")
#pragma comment(linker, "/include:?size@?$vector@IV?$allocator@_N@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?kForceColorFieldNumber@TransformationParameter@caffe@@2HB")
#pragma comment(linker, "/include:?CopyFrom@LogParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?MergeFrom@ReLUParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@SPPParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$DeconvolutionLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??0?$NesterovSolver@M@caffe@@QAE@ABVSolverParameter@1@@Z")
#pragma comment(linker, "/include:?Check_GEImpl@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HHPBD@Z")
#pragma comment(linker, "/include:?construct@?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@QAEXPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@2@@Z")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$ArgMaxLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$?0V?$ExpLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$ExpLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?FAN_IN@FillerParameter@caffe@@2W4FillerParameter_VarianceNorm@2@B")
#pragma comment(linker, "/include:??_C@_0DF@HOHJINEC@Eltwise?5layer?5only?5takes?5coeffic@")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_7NetStateRule@caffe@@6B@")
#pragma comment(linker, "/include:??_R4ReductionParameter@caffe@@6B@")
#pragma comment(linker, "/include:?contrastive_loss_param@V1LayerParameter@caffe@@QBEABVContrastiveLossParameter@2@XZ")
#pragma comment(linker, "/include:?spp_param@LayerParameter@caffe@@QBEABVSPPParameter@2@XZ")
#pragma comment(linker, "/include:??A?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@2@@std@@QAEAAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@1@I@Z")
#pragma comment(linker, "/include:??1?$SPPLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?InternalSwap@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXPAV1234@@Z")
#pragma comment(linker, "/include:??$swap@PAVSoftmaxParameter@caffe@@@std@@YAXAAPAVSoftmaxParameter@caffe@@0@Z")
#pragma comment(linker, "/include:??_C@_0CJ@EBIHDCBA@param_?4test_iter_size?$CI?$CJ?5?$DN?$DN?5num_t@")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@HDF5OutputParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??_R2?$ConvolutionLayer@M@caffe@@8")
#pragma comment(linker, "/include:??$destroy@U?$pair@MH@std@@@?$allocator_traits@V?$allocator@U?$pair@MH@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@MH@std@@@1@PAU?$pair@MH@1@@Z")
#pragma comment(linker, "/include:?has_sigmoid_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_02LMMGGCAJ@?3?5?$AA@")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$SPPLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$DataTransformer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?SharedDtor@SPPParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R2LossParameter@caffe@@8")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$Net@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_C@_0BD@KEJAFIGH@img_width?5?$DN?$DN?5width?$AA@")
#pragma comment(linker, "/include:?fpclassify@@YAHM@Z")
#pragma comment(linker, "/include:?gInstantiationGuardDataTransformer@caffe@@3DA")
#pragma comment(linker, "/include:?blobs@?$Net@N@caffe@@QBEABV?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@XZ")
#pragma comment(linker, "/include:?resize@?$vector@MV?$allocator@M@std@@@std@@QAEXIABM@Z")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@1@AAPAU21@@Z")
#pragma comment(linker, "/include:?WithinChannelBackward@?$LRNLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?set_channel_shared@PReLUParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:?begin@?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?default_instance@HingeLossParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??_C@_0BL@MODAOIBG@bottom?$FL1?$FN?9?$DOchannels?$CI?$CJ?5?$DN?$DN?51?$AA@")
#pragma comment(linker, "/include:?SetDevice@Caffe@caffe@@SAXH@Z")
#pragma comment(linker, "/include:??_8?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@7B@")
#pragma comment(linker, "/include:?kOptimizeForFieldNumber@FileOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:?const_min@?$integer_traits_base@_N$0A@$00@detail@boost@@2_NB")
#pragma comment(linker, "/include:?set_has_crop_size@ImageDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_7InnerProductParameter@caffe@@6B@")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@EltwiseParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?HINGE_LOSS@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$WindowDataLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?set_has_alpha@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R3LogParameter@caffe@@8")
#pragma comment(linker, "/include:??$_Val_type@PAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@PAV12@@Z")
#pragma comment(linker, "/include:?has_type@FillerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R0?AV?$ContrastiveLossLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??_R4?$DeconvolutionLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??$reset@V?$Filler@N@caffe@@@?$shared_ptr@V?$Filler@N@caffe@@@boost@@QAEXPAV?$Filler@N@caffe@@@Z")
#pragma comment(linker, "/include:?PoolingParameter_PoolMethod_descriptor_@?A0x5e4fc710@caffe@@3PBVEnumDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??0?$map@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?mutable_layer@PythonParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?deallocate@?$allocator@M@std@@QAEXPAMI@Z")
#pragma comment(linker, "/include:?kDetCropModeFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?New@MemoryDataParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_R3?$SGDSolver@N@caffe@@8")
#pragma comment(linker, "/include:??_R2ParamSpec@caffe@@8")
#pragma comment(linker, "/include:?mutable_dropout_param@LayerParameter@caffe@@QAEPAVDropoutParameter@2@XZ")
#pragma comment(linker, "/include:?_Reallocate@?$vector@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?base@ExpParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$ConcatLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?_Key@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IBEABHPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??0V0LayerParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??0_System_error_category@std@@QAE@XZ")
#pragma comment(linker, "/include:??0PoolingParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:??_R4?$SigmoidLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??_C@_0BA@CHEDHDCN@?5?5root_folder?3?5?$AA@")
#pragma comment(linker, "/include:??$Creator_ReductionLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??$construct@PAV?$Blob@M@caffe@@ABQAV12@@?$allocator_traits@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@SAXAAV?$allocator@PAV?$Blob@M@caffe@@@1@PAPAV?$Blob@M@caffe@@ABQAV34@@Z")
#pragma comment(linker, "/include:??$_Ptr_cat@V?$vector@MV?$allocator@M@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$vector@MV?$allocator@M@std@@@0@0@Z")
#pragma comment(linker, "/include:?GetArena@MessageLite@protobuf@google@@UBEPAVArena@23@XZ")
#pragma comment(linker, "/include:??_R0?AV?$SilenceLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??$?0V?$DropoutLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$DropoutLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?ReductionParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?num_axes@?$Blob@H@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?max@?$int_adapter@_J@date_time@boost@@SA?AV123@XZ")
#pragma comment(linker, "/include:?GetLearningRateAndWeightDecay@?$Net@N@caffe@@IAEXXZ")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VHDF5OutputParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVHDF5OutputParameter@caffe@@@Z")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$Im2colLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$PowerLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_R4?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@6Bbad_alloc@std@@@")
#pragma comment(linker, "/include:??_C@_0N@EMCDOKDB@innerproduct?$AA@")
#pragma comment(linker, "/include:??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base0@1@@Z")
#pragma comment(linker, "/include:??_C@_0CJ@OIJBPLJA@bottom?$FL0?$FN?9?$DOcount?$CI?$CJ?5?$DN?$DN?5bottom?$FL1?$FN?9@")
#pragma comment(linker, "/include:?deallocate@?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Net@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?MinTopBlobs@?$SliceLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R0?AV?$SigmoidCrossEntropyLossLayer@M@caffe@@@8")
#pragma comment(linker, "/include:??_C@_0BM@EEBMLHAD@Failed?5to?5open?5window?5file?5?$AA@")
#pragma comment(linker, "/include:?gInstantiationGuardSoftmaxWithLossLayer@caffe@@3DA")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$ThresholdLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?kSourceFieldNumber@HDF5DataParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_GReshapeParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_7?$SoftmaxLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??_R0?AV?$FilterLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??_R4?$SigmoidLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?default_instance@PReLUParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:?kFieldFieldNumber@DescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_R4bad_exception_@exception_detail@boost@@6Bbad_exception@std@@@")
#pragma comment(linker, "/include:?Swap@PythonParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@SolverState@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_C@_0BI@FILFEKCA@slice_dim?5out?5of?5range?4?$AA@")
#pragma comment(linker, "/include:?New@ReductionParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:?IsInitialized@NetStateRule@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B")
#pragma comment(linker, "/include:??$move@AAH@std@@YA$$QAHAAH@Z")
#pragma comment(linker, "/include:__xmm@3f8000003f8000003f8000003f800000")
#pragma comment(linker, "/include:??$heap_delete@Uthread_data_base@detail@boost@@@detail@boost@@YAXPAUthread_data_base@01@@Z")
#pragma comment(linker, "/include:?GetArenaNoVirtual@?$RepeatedPtrField@VLayerParameter@caffe@@@protobuf@google@@IBEPAVArena@23@XZ")
#pragma comment(linker, "/include:?InitAsDefaultInstance@PoolingParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R3bad_day_of_month@gregorian@boost@@8")
#pragma comment(linker, "/include:??_C@_0BK@JHBEJFON@axis_index?5?$DO?$DN?5?9num_axes?$CI?$CJ?$AA@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@TanHParameter@caffe@@8")
#pragma comment(linker, "/include:?GetDB@db@caffe@@YAPAVDB@12@W4DataParameter_DB@2@@Z")
#pragma comment(linker, "/include:?set_debug_info@NetParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:??$Creator_ConcatLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?set_has_engine@SoftmaxParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?descriptor@SPPParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$ReadRepeatedPrimitiveNoInline@M$01@WireFormatLite@internal@protobuf@google@@SA_NHIPAVCodedInputStream@io@23@PAV?$RepeatedField@M@23@@Z")
#pragma comment(linker, "/include:?set_across_channels@MVNParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:??_C@_0CN@HLLFAOBM@one?5of?5these?5fields?5specifying?5a@")
#pragma comment(linker, "/include:?value@?$is_pointer_impl@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?end@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?GetCachedSize@FillerParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?SharedDtor@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$FilterLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??$im2col_cpu@N@caffe@@YAXPBNHHHHHHHHHPAN@Z")
#pragma comment(linker, "/include:?value@?$operator_returns_void@V?$basic_istream@DU?$char_traits@D@std@@@std@@H@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$?0V?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@@?$shared_ptr@$$CBVclone_base@exception_detail@boost@@@boost@@QAE@PAV?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@1@@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$BasePrefetchingDataLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?IsInitialized@PythonParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??_R0?AV?$DataTransformer@M@caffe@@@8")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VMemoryDataParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVMemoryDataParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VContrastiveLossParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVContrastiveLossParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?set_learned_net@SolverState@caffe@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?SIGN_N@?$ratio@$0PECEA@$00@boost@@0_JB")
#pragma comment(linker, "/include:??$Destroy@VTypeHandler@?$RepeatedPtrField@VLayerParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXXZ")
#pragma comment(linker, "/include:??0?$_Tree_buy@U?$pair@$$CBU?$pair@HH@std@@M@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@1@@Z")
#pragma comment(linker, "/include:??_R4?$Filler@M@caffe@@6B@")
#pragma comment(linker, "/include:?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$ConcatLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??$forward@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@YA$$QAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??$swap@PAV?$DataTransformer@M@caffe@@@std@@YAXAAPAV?$DataTransformer@M@caffe@@0@Z")
#pragma comment(linker, "/include:??$forward@V?$tuple@ABU?$pair@HH@std@@@std@@@std@@YA$$QAV?$tuple@ABU?$pair@HH@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??_C@_0FO@GKLGHILJ@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??0WindowDataParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?NESTEROV@SolverParameter@caffe@@2W4SolverParameter_SolverType@2@B")
#pragma comment(linker, "/include:?kInnerProductParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$InfogainLossLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$InfogainLossLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?Update@?$Blob@H@caffe@@QAEXXZ")
#pragma comment(linker, "/include:??_8?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@7B@")
#pragma comment(linker, "/include:??$addressof@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@YAPAU?$pair@QBXUtss_data_node@detail@boost@@@0@AAU10@@Z")
#pragma comment(linker, "/include:?_Buynode0@?$_Tree_buy@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?IsInitialized@ParamSpec@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$PowerLayer@N@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@thread_data_base@detail@boost@@8")
#pragma comment(linker, "/include:?capacity@?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ")
#pragma comment(linker, "/include:?max@?$simple_exception_policy@G$0FHI@$0CHBA@Ubad_year@gregorian@boost@@@CV@boost@@SAGXZ")
#pragma comment(linker, "/include:??0?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@QAE@ABU012@@Z")
#pragma comment(linker, "/include:?AllowForceBackward@?$Layer@N@caffe@@UBE_NH@Z")
#pragma comment(linker, "/include:??$?0V?$ReLULayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$ReLULayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$construct@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@PAV12@@?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@QAEXPAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@1@$$QAPAV21@@Z")
#pragma comment(linker, "/include:??_R3?$SoftmaxLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_C@_0P@BLGLCJIH@euclidean_loss?$AA@")
#pragma comment(linker, "/include:?_Reserve@?$vector@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??$group_last@U?$_Smanip@_J@std@@ABM@detail@io@boost@@YA?AU?$group1@ABM@012@ABU?$group2@U?$_Smanip@_J@std@@ABM@012@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@Datum@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R4BlobProto@caffe@@6B@")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@LRNParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?New@LogParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:?end@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?CrossChannelBackward_gpu@?$LRNLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$Filler@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?deallocate@?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@QAEXPAPAV?$FlattenLayer@M@caffe@@I@Z")
#pragma comment(linker, "/include:??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@1@0@Z")
#pragma comment(linker, "/include:?Regularize@?$SGDSolver@M@caffe@@MAEXH@Z")
#pragma comment(linker, "/include:?value@?$is_lockable@PAV?$unique_lock@Vmutex@boost@@@boost@@@sync@boost@@2_NB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$TanHLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?set_has_batch_size@WindowDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?value@?$result_@G@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_C@_0CO@JMKDEJAE@outer_num_?5?$CK?5inner_num_?5?$DN?$DN?5botto@")
#pragma comment(linker, "/include:??0?$vector@MV?$allocator@M@std@@@std@@QAE@I@Z")
#pragma comment(linker, "/include:??_7?$FilterLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??_R3?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$BNLLLayer@N@caffe@@@detail@boost@@QAE@PAV?$BNLLLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?has_rand_skip@DataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?Reshape@?$FilterLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?value@?$is_character@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$EltwiseLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_R4?$SplitLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?size@?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_C@_0DA@NIHLDLMK@?5Layer?5cannot?5backpropagate?5to?5i@")
#pragma comment(linker, "/include:?FilterNet@?$Net@M@caffe@@SAXABVNetParameter@2@PAV32@@Z")
#pragma comment(linker, "/include:??_GHingeLossParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@")
#pragma comment(linker, "/include:?_Assign_rv@?$vector@IV?$allocator@_N@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z")
#pragma comment(linker, "/include:?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ")
#pragma comment(linker, "/include:?end@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??$construct@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@U1234@@?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@QAEXPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@$$QAU2345@@Z")
#pragma comment(linker, "/include:??$construct@MM@?$allocator@M@std@@QAEXPAM$$QAM@Z")
#pragma comment(linker, "/include:?convolution_param@V1LayerParameter@caffe@@QBEABVConvolutionParameter@2@XZ")
#pragma comment(linker, "/include:??_G?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R4?$XavierFiller@M@caffe@@6B@")
#pragma comment(linker, "/include:?Backward_gpu@?$AbsValLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:?SharedDtor@PoolingParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$Im2colLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$Im2colLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?_Grow_to@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@IBEII@Z")
#pragma comment(linker, "/include:?shape_string@?$Blob@H@caffe@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?LayerSetUp@?$LogLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$forward@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@YA$$QAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@AAV12@@Z")
#pragma comment(linker, "/include:?swap@?$shared_ptr@V?$Blob@M@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:??_7?$Net@N@caffe@@6B@")
#pragma comment(linker, "/include:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z")
#pragma comment(linker, "/include:??_G?$PositiveUnitballFiller@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$construct@V?$vector@MV?$allocator@M@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@QAEXPAV?$vector@MV?$allocator@M@std@@@1@$$QAV21@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$AbsValLayer@M@caffe@@@boost@@YAXPAV?$AbsValLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?clone@?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$WindowDataLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAV?$vector@HV?$allocator@H@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@2@@std@@YAPAV?$vector@HV?$allocator@H@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_R0?AV?$InnerProductLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??_C@_03NBAEPDEL@SPP?$AA@")
#pragma comment(linker, "/include:?event_set_flag_bit@basic_timed_mutex@detail@boost@@2EB")
#pragma comment(linker, "/include:?Clear@ConvolutionParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??$Creator_ContrastiveLossLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$ReductionLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?default_instance@ExpParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??_7?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:?SetCachedSize@HingeLossParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:??$_Allocate@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@YAPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@0@IPAU10@@Z")
#pragma comment(linker, "/include:?scale_data@?$Blob@H@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??0?$uniform_real@N@boost@@QAE@NN@Z")
#pragma comment(linker, "/include:??$Own@VSPPParameter@caffe@@@Arena@protobuf@google@@QAEXPAVSPPParameter@caffe@@@Z")
#pragma comment(linker, "/include:??$reset@VCaffe@caffe@@@?$shared_ptr@VCaffe@caffe@@@boost@@QAEXPAVCaffe@caffe@@@Z")
#pragma comment(linker, "/include:?const_max@?$integer_traits_base@F$0?IAAA@$0HPPP@@detail@boost@@2FB")
#pragma comment(linker, "/include:?PoolMethod_ARRAYSIZE@SPPParameter@caffe@@2HB")
#pragma comment(linker, "/include:?OptimizeMode_MAX@FileOptions@protobuf@google@@2W4FileOptions_OptimizeMode@23@B")
#pragma comment(linker, "/include:?set_iter@SolverState@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?params@?$Net@M@caffe@@QBEABV?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@XZ")
#pragma comment(linker, "/include:??$_Ptr_cat@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:?AddDatumVector@?$MemoryDataLayer@M@caffe@@UAEXABV?$vector@VDatum@caffe@@V?$allocator@VDatum@caffe@@@std@@@std@@@Z")
#pragma comment(linker, "/include:?InternalSwap@ExpParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?GetCachedSize@InnerProductParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_GHDF5DataParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?kNewHeightFieldNumber@ImageDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?kSigmoidParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_C@_04KFLCADIL@relu?$AA@")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$ArgMaxLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$ThresholdLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??_C@_0CN@CICBLLJG@Unknown?5parameter?5concat_dim?5for@")
#pragma comment(linker, "/include:?kContrastiveLossParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?_Color@?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAAADPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?dim@BlobShape@caffe@@QBE_JH@Z")
#pragma comment(linker, "/include:??_R3ParamSpec@caffe@@8")
#pragma comment(linker, "/include:?bottom_size@V1LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?stride_h@PoolingParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?set_local_size@V0LayerParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?descriptor@TransformationParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?construct@?$_Wrap_alloc@V?$allocator@VNetParameter@caffe@@@std@@@std@@QAEXPAVNetParameter@caffe@@@Z")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$AccuracyLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_C@_0EK@JDNJNAMF@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?LayerSetUp@?$ReshapeLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?default_instance@NetParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??_R2?$Net@N@caffe@@8")
#pragma comment(linker, "/include:??1logic_error@std@@UAE@XZ")
#pragma comment(linker, "/include:?_Tidy@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:?max_size@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?has_denorm_loss@_Num_float_base@std@@2_NB")
#pragma comment(linker, "/include:??_R0?AV?$Im2colLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?descriptor@SigmoidParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_C@_0BA@PFDHBEGM@start_axis?5?$DO?$DN?50?$AA@")
#pragma comment(linker, "/include:?value@?$is_reference_impl@F@detail@boost@@2_NB")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?InitAsDefaultInstance@LRNParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?pad_w@ConvolutionParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?kBetaFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@@std@@YAXPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?Clear@SPPParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?unknown_fields@ConvolutionParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PAN@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$construct@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@ABU1234@@?$_Wrap_alloc@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@QAEXPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@ABU2345@@Z")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??_C@_0BJ@KJMMKNJB@datum_width?5?$DO?$DN?5crop_size?$AA@")
#pragma comment(linker, "/include:??_R3?$SigmoidCrossEntropyLossLayer@M@caffe@@8")
#pragma comment(linker, "/include:?set_kernelsize@V0LayerParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?Clear@UnknownFieldSet@protobuf@google@@QAEXXZ")
#pragma comment(linker, "/include:?MergeFrom@DataParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z")
#pragma comment(linker, "/include:??$_Val_type@PAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@YAPAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@PAPAV10@@Z")
#pragma comment(linker, "/include:??_Gbad_alloc@std@@UAEPAXI@Z")
#pragma comment(linker, "/include:??1?$ThresholdLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?set_has_concat_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R4?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@6B@")
#pragma comment(linker, "/include:??$forward@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@YAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@0@AAU10@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$Im2colLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$Create@VNetState@caffe@@@Arena@protobuf@google@@SAPAVNetState@caffe@@PAV012@@Z")
#pragma comment(linker, "/include:?_Assign_rv@?$vector@NV?$allocator@N@std@@@std@@QAEX$$QAV12@@Z")
#pragma comment(linker, "/include:??$_Move@AAPAVTanHParameter@caffe@@@std@@YA$$QAPAVTanHParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$DeconvolutionLayer@M@caffe@@@detail@boost@@QAE@PAV?$DeconvolutionLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0M@GPKBABML@?5?$CIin?9place?$CJ?$AA@")
#pragma comment(linker, "/include:?TYPE_INT64@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Type@23@B")
#pragma comment(linker, "/include:?Forward_cpu@?$MultinomialLogisticLossLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R3?$EuclideanLossLayer@N@caffe@@8")
#pragma comment(linker, "/include:??0bad_year@gregorian@boost@@QAE@ABU012@@Z")
#pragma comment(linker, "/include:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z")
#pragma comment(linker, "/include:??F?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R3bad_exception_@exception_detail@boost@@8")
#pragma comment(linker, "/include:??$mk_str@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDI_JDHD_N@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??0?$AdaGradSolver@N@caffe@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$PReLULayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$PReLULayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?ByteSize@FlattenParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_C@_0BL@NFKKMGKG@channels?5?$DN?$DN?5datum_channels?$AA@")
#pragma comment(linker, "/include:??0?$RepeatedField@M@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:?SetCachedSize@FlattenParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?CopyFrom@BlobProtoVector@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$AbsValLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@YAXPAPAV?$Blob@M@caffe@@0AAU?$_Wrap_alloc@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@@Z")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$FilterLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??_7FunctionClosure0@internal@protobuf@google@@6B@")
#pragma comment(linker, "/include:??_7?$FilterLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?ate@?$_Iosb@H@std@@2W4_Openmode@12@B")
#pragma comment(linker, "/include:?exp_param@V1LayerParameter@caffe@@QBEABVExpParameter@2@XZ")
#pragma comment(linker, "/include:??_G?$Filler@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?_Inside@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@2@@std@@IBE_NPBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@2@@Z")
#pragma comment(linker, "/include:?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIPBDI@Z")
#pragma comment(linker, "/include:??1?$BilinearFiller@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@2@@std@@YAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?add_bottom@V1LayerParameter@caffe@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?kServerStreamingFieldNumber@MethodDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??$_Umove@PAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@?$vector@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@IAEPAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@1@PAPAV21@00@Z")
#pragma comment(linker, "/include:??_R2?$WindowDataLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_C@_0DH@FGOLBLIB@Successfully?5upgraded?5file?5speci@")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$ConvolutionLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?GetReferenceableValue@google@@YAII@Z")
#pragma comment(linker, "/include:??_R3?$MVNLayer@N@caffe@@8")
#pragma comment(linker, "/include:??R?$variate_generator@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@V?$normal_distribution@N@23@@random@boost@@QAENXZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$SoftmaxWithLossLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$SoftmaxWithLossLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@_Generic_error_category@std@@8")
#pragma comment(linker, "/include:??$Get@VTypeHandler@?$RepeatedPtrField@VParamSpec@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IBEABVParamSpec@caffe@@H@Z")
#pragma comment(linker, "/include:??$?0AAHHX@?$pair@HH@std@@QAE@AAH$$QAH@Z")
#pragma comment(linker, "/include:??_7?$Layer@N@caffe@@6B@")
#pragma comment(linker, "/include:?clone@?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:?set_has_scale@ImageDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?clone@?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:??$arena_destruct_object@VNetState@caffe@@@internal@protobuf@google@@YAXPAX@Z")
#pragma comment(linker, "/include:??A?$vector@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@QAEAAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@1@I@Z")
#pragma comment(linker, "/include:?has_relu_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$_Move@AAPAVTransformationParameter@caffe@@@std@@YA$$QAPAVTransformationParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??A?$map@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABH@Z")
#pragma comment(linker, "/include:?kBottomFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$?0V?$ContrastiveLossLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$ContrastiveLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$LogLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$_Move@AAPAVReductionParameter@caffe@@@std@@YA$$QAPAVReductionParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?set_width@MemoryDataParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??0?$vector@_NV?$allocator@_N@std@@@std@@QAE@IAB_N@Z")
#pragma comment(linker, "/include:??$MergeFrom@VTypeHandler@?$RepeatedPtrField@VBlobShape@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXABV0123@@Z")
#pragma comment(linker, "/include:??_C@_0EI@KOPNPJDJ@Check?5failed?3?5param?4width_size?$CI?$CJ@")
#pragma comment(linker, "/include:?New@SPPParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??$Check_EQImpl@IH@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABIABHPBD@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$HingeLossLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$_Umove@PAV?$shared_ptr@V?$Net@N@caffe@@@boost@@@?$vector@V?$shared_ptr@V?$Net@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@IAEPAV?$shared_ptr@V?$Net@N@caffe@@@boost@@PAV23@00@Z")
#pragma comment(linker, "/include:?_Inside@?$vector@PAV?$FlattenLayer@M@caffe@@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@IBE_NPBQAV?$FlattenLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$ExpLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$DropoutLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@AAPAU21@@Z")
#pragma comment(linker, "/include:??$_Push_heap@PAU?$pair@MH@std@@HU12@U?$greater@U?$pair@MH@std@@@2@@std@@YAXPAU?$pair@MH@0@HH$$QAU10@U?$greater@U?$pair@MH@std@@@0@@Z")
#pragma comment(linker, "/include:??$GetSigmoidLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?slice_dim@SliceParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??$ReadMessageNoVirtualNoRecursionDepth@VBlobProto@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVBlobProto@caffe@@@Z")
#pragma comment(linker, "/include:??_G?$DataTransformer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$Filler@M@caffe@@@detail@boost@@QAE@PAV?$Filler@M@caffe@@@Z")
#pragma comment(linker, "/include:??$?0U?$pair@HH@std@@$$$VPAPAX@?$tuple@$$QAU?$pair@HH@std@@@std@@QAE@$$QAU?$pair@HH@1@@Z")
#pragma comment(linker, "/include:?minus_one@?$is_unsigned_values@_K@detail@boost@@2_KB")
#pragma comment(linker, "/include:?Clear@NetParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?kImageDataParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??0HDF5OutputParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?ctype@?$_Locbase@H@std@@2HB")
#pragma comment(linker, "/include:??$_Unchecked@PAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@YAPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@PAU1234@@Z")
#pragma comment(linker, "/include:??_C@_0BH@DEHNNFJM@end_axis?5?$DM?$DN?5num_axes?$CI?$CJ?$AA@")
#pragma comment(linker, "/include:?parameter_a@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@2IB")
#pragma comment(linker, "/include:??1?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@VLayerParameter@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$destroy@U?$pair@HH@std@@@?$allocator_traits@V?$allocator@U?$pair@HH@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@HH@std@@@1@PAU?$pair@HH@1@@Z")
#pragma comment(linker, "/include:?kDeprecatedFieldNumber@EnumValueOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_R3clone_base@exception_detail@boost@@8")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$LRNLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@EBEXXZ")
#pragma comment(linker, "/include:??_C@_0FF@CHDGJBCM@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??$Mutable@VTypeHandler@?$RepeatedPtrField@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z")
#pragma comment(linker, "/include:?has_bias_filler@ConvolutionParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?value@?$is_arithmetic_and_not_xchars@FV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$TanHLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$TanHLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??$?0V?$PReLULayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$PReLULayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@NH@std@@@std@@@std@@QAEXPAU?$pair@NH@2@I@Z")
#pragma comment(linker, "/include:?InitAsDefaultInstance@TanHParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Distance@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@0@0AAI@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$ConvolutionLayer@N@caffe@@8")
#pragma comment(linker, "/include:?type@?$SigmoidLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?NewFromPrototype@?$GenericTypeHandler@VV1LayerParameter@caffe@@@internal@protobuf@google@@SAPAVV1LayerParameter@caffe@@PBV56@PAVArena@34@@Z")
#pragma comment(linker, "/include:?minus@?$lcast_char_constants@D@detail@boost@@2DB")
#pragma comment(linker, "/include:??_D?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@QAEXXZ")
#pragma comment(linker, "/include:?f@?$unit_normal_distribution@N@detail@random@boost@@SANN@Z")
#pragma comment(linker, "/include:?scale@DataParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:??$generate_uniform_real@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@N@detail@random@boost@@YANAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@NNU?$bool_@$00@mpl@2@@Z")
#pragma comment(linker, "/include:??_C@_0FI@GMCPIAAH@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??_R2Timer@caffe@@8")
#pragma comment(linker, "/include:??_C@_07GIJBHKCF@y1?5?$DO?5?91?$AA@")
#pragma comment(linker, "/include:??_C@_0DD@EPGHMK@test_iter?5must?5be?5specified?5for?5@")
#pragma comment(linker, "/include:??0?$_Tree_buy@U?$pair@$$CBHH@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBHH@std@@@1@@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$Net@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R0?AV?$ConcatLayer@M@caffe@@@8")
#pragma comment(linker, "/include:??_7?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:?Backward_cpu@?$ArgMaxLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEXXZ")
#pragma comment(linker, "/include:?set_has_transform_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?set_has_scale@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?exclude@LayerParameter@caffe@@QBEABVNetStateRule@2@H@Z")
#pragma comment(linker, "/include:?New@?$GenericTypeHandler@VNetStateRule@caffe@@@internal@protobuf@google@@SAPAVNetStateRule@caffe@@PAVArena@34@@Z")
#pragma comment(linker, "/include:?gInstantiationGuardBNLLLayer@caffe@@3DA")
#pragma comment(linker, "/include:??_GCaffe@caffe@@QAEPAXI@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$BNLLLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_7Timer@caffe@@6B@")
#pragma comment(linker, "/include:?_Reallocate@?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$EltwiseLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R3?$BasePrefetchingDataLayer@N@caffe@@8")
#pragma comment(linker, "/include:??C?$shared_ptr@V?$SigmoidLayer@M@caffe@@@boost@@QBEPAV?$SigmoidLayer@M@caffe@@XZ")
#pragma comment(linker, "/include:?has_legacy_version@ContrastiveLossParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?set_type@FillerParameter@caffe@@QAEXPBD@Z")
#pragma comment(linker, "/include:?capacity@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?_Reserve@?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?UnsafeArenaSwap@?$RepeatedPtrField@VV1LayerParameter@caffe@@@protobuf@google@@QAEXPAV123@@Z")
#pragma comment(linker, "/include:__real@c7efffffe0000000")
#pragma comment(linker, "/include:?Backward_gpu@?$ContrastiveLossLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_R2?$ThresholdLayer@N@caffe@@8")
#pragma comment(linker, "/include:?ReLUParameter_Engine_descriptor_@?A0x5e4fc710@caffe@@3PBVEnumDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??$caffe_cpu_strided_dot@M@caffe@@YAMHPBMH0H@Z")
#pragma comment(linker, "/include:?InternalSwap@SPPParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z")
#pragma comment(linker, "/include:?set_has_name@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?has_det_crop_mode@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?fg_fraction@WindowDataParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:??_C@_0CD@LPNPKBN@There?5is?5no?5datum?5to?5in?5the?5vect@")
#pragma comment(linker, "/include:??$_Allocate@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@YAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@0@IPAU10@@Z")
#pragma comment(linker, "/include:??$cast@VTypeHandler@?$RepeatedPtrField@VParamSpec@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@CAPAVParamSpec@caffe@@PAX@Z")
#pragma comment(linker, "/include:??0?$vector@U?$pair@MH@std@@V?$allocator@U?$pair@MH@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$reset@V?$EltwiseLayer@N@caffe@@@?$shared_ptr@V?$EltwiseLayer@N@caffe@@@boost@@QAEXPAV?$EltwiseLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?blobs@V0LayerParameter@caffe@@QBEABVBlobProto@2@H@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?set_shuffle_images@V0LayerParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:?kEngineFieldNumber@SigmoidParameter@caffe@@2HB")
#pragma comment(linker, "/include:?Swap@ParamSpec@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??$_Unchecked@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@YAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@0@PAU10@@Z")
#pragma comment(linker, "/include:?swap@?$shared_ptr@VRNG@Caffe@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:?value@?$is_arithmetic_impl@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?is_steady@steady_clock@chrono@boost@@2_NB")
#pragma comment(linker, "/include:??_7LogParameter@caffe@@6B@")
#pragma comment(linker, "/include:??$_Move@AAPAV?$EltwiseLayer@N@caffe@@@std@@YA$$QAPAV?$EltwiseLayer@N@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??0MVNParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:__real@ff7fffff")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVBlobProto@caffe@@@internal@protobuf@google@@YAPBVBlobProto@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?MinBottomBlobs@?$SilenceLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?value@?$trait_impl@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@HUdont_care@has_right_shift_impl@detail@boost@@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$OwnInternal@VBlobShape@caffe@@@Arena@protobuf@google@@AAEXPAVBlobShape@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:??$?0V?$ReshapeLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$ReshapeLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_C@_0BO@DOGFFPCM@Inputs?5must?5have?5same?5height?4?$AA@")
#pragma comment(linker, "/include:?LogParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??1?$vector@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?num@?$ratio@$00$0PECEA@@boost@@2_JB")
#pragma comment(linker, "/include:??_G?$vector@MV?$allocator@M@std@@@std@@QAEPAXI@Z")
#pragma comment(linker, "/include:?mutable_name@V1LayerParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?JoinPrefetchThread@?$BasePrefetchingDataLayer@N@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?Backward_gpu@?$MVNLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$ArgMaxLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_C@_0CB@LEMHCHCJ@Inf?5result?3?51?1log?$CIbase?$CJ?5?$DN?51?1log?$CI@")
#pragma comment(linker, "/include:??_R4SolverParameter@caffe@@6B@")
#pragma comment(linker, "/include:?CUDNN@TanHParameter@caffe@@2W4TanHParameter_Engine@2@B")
#pragma comment(linker, "/include:??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$HingeLossLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$Own@VImageDataParameter@caffe@@@Arena@protobuf@google@@QAEXPAVImageDataParameter@caffe@@@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVBlobShape@caffe@@@internal@protobuf@google@@YAPBVBlobShape@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:??_C@_0BB@COIJNIPJ@Check?5failed?3?5a?5?$AA@")
#pragma comment(linker, "/include:??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@XZ")
#pragma comment(linker, "/include:??$swap@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z")
#pragma comment(linker, "/include:??_C@_0BP@GBFDCANE@Unknown?5learning?5rate?5policy?3?5?$AA@")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$WindowDataLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?TYPE_INT32@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Type@23@B")
#pragma comment(linker, "/include:??_R2?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$DummyDataLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$DummyDataLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:__real@38d1b717")
#pragma comment(linker, "/include:?det_fg_fraction@V0LayerParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?size@?$RepeatedField@_N@protobuf@google@@QBEHXZ")
#pragma comment(linker, "/include:?kCacheImagesFieldNumber@WindowDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?MergeFrom@SolverState@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??_R0?AV?$BNLLLayer@M@caffe@@@8")
#pragma comment(linker, "/include:??1?$ReductionLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?ExpParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??$?0V?$SoftmaxWithLossLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$SoftmaxWithLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?InternalSwap@FlattenParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:??$_Val_type@PAU?$pair@MH@std@@@std@@YAPAU?$pair@MH@0@PAU10@@Z")
#pragma comment(linker, "/include:?set_has_mean_file@WindowDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$put@DU?$char_traits@D@std@@V?$allocator@D@2@ABU?$put_holder@DU?$char_traits@D@std@@@detail@io@boost@@@detail@io@boost@@YAXABU?$put_holder@DU?$char_traits@D@std@@@012@ABU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@012@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@12@PAVlocale@6@@Z")
#pragma comment(linker, "/include:??_R4?$GaussianFiller@N@caffe@@6B@")
#pragma comment(linker, "/include:??_7?$WindowDataLayer@M@caffe@@6BInternalThread@1@@")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$ExpLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?capacity@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$SoftmaxLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?New@PowerParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??_G?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?CopyFrom@SPPParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?size@?$vector@VDatum@caffe@@V?$allocator@VDatum@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?Swap@ArgMaxParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??_C@_0DO@DMPOAHIJ@Can?8t?5change?5batch_size?5until?5cu@")
#pragma comment(linker, "/include:?has_layer@?$Net@M@caffe@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:??_C@_0DF@HGKPGCEJ@bottom?$FL0?$FN?9?$DOnum_axes?$CI?$CJ?5?$DO?5start_ax@")
#pragma comment(linker, "/include:?GetEmptyStringAlreadyInited@internal@protobuf@google@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??_C@_0DB@GOBMBAAB@?5Layer?5produces?5one?5top?5blob?5as?5@")
#pragma comment(linker, "/include:?max_size@?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$InnerProductLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_R4?$MSRAFiller@M@caffe@@6B@")
#pragma comment(linker, "/include:??$?0V?$SPPLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$SPPLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?has_num@BlobProto@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBHH@1@XZ")
#pragma comment(linker, "/include:?new_width@ImageDataParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?SetCachedSize@PReLUParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?kWidthFieldNumber@DummyDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$BNLLLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?is_special@?$time_duration@V0posix_time@boost@@V?$time_resolution_traits@Utime_resolution_traits_adapted64_impl@date_time@boost@@$04$0PECEA@$05H@date_time@2@@date_time@boost@@QBE_NXZ")
#pragma comment(linker, "/include:??_R4?$ThresholdLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??_G?$MemoryDataLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@VCaffe@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$DropoutLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?add_bottom@LayerParameter@caffe@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?equal_range@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@V12@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:??$_Move@AAPAV?$PowerLayer@N@caffe@@@std@@YA$$QAPAV?$PowerLayer@N@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?AddMatVector@?$MemoryDataLayer@N@caffe@@UAEXABV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@ABV?$vector@HV?$allocator@H@std@@@4@@Z")
#pragma comment(linker, "/include:??_R3?$DropoutLayer@N@caffe@@8")
#pragma comment(linker, "/include:?gpu_data@?$Blob@N@caffe@@QBEPBNXZ")
#pragma comment(linker, "/include:??_R4?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@6Bruntime_error@std@@@")
#pragma comment(linker, "/include:?reverse_dimensions@?$DeconvolutionLayer@M@caffe@@MAE_NXZ")
#pragma comment(linker, "/include:?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B")
#pragma comment(linker, "/include:?type@?$TanHLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?type@?$FilterLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??$reset@VDB@db@caffe@@@?$shared_ptr@VDB@db@caffe@@@boost@@QAEXPAVDB@db@caffe@@@Z")
#pragma comment(linker, "/include:??$_Val_type@PAV?$vector@_NV?$allocator@_N@std@@@std@@@std@@YAPAV?$vector@_NV?$allocator@_N@std@@@0@PAV10@@Z")
#pragma comment(linker, "/include:?SIGN_N@?$ratio@$0GE@$00@boost@@0_JB")
#pragma comment(linker, "/include:??$checked_delete@V?$SoftmaxLayer@M@caffe@@@boost@@YAXPAV?$SoftmaxLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?kLossParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$?0V?$SigmoidCrossEntropyLossLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$SigmoidCrossEntropyLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??1?$UniformFiller@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z")
#pragma comment(linker, "/include:?New@V1LayerParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?ComputeUpdateValue@?$AdaGradSolver@N@caffe@@MAEXHN@Z")
#pragma comment(linker, "/include:?set_has_batch_size@MemoryDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?GetCachedSize@TanHParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$checked_delete@Vthread@boost@@@boost@@YAXPAVthread@0@@Z")
#pragma comment(linker, "/include:?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBHH@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@XZ")
#pragma comment(linker, "/include:__CT??_R0?AUbad_exception_@exception_detail@boost@@@8??0bad_exception_@exception_detail@boost@@QAE@ABU012@@Z32")
#pragma comment(linker, "/include:?what@too_few_args@io@boost@@UBEPBDXZ")
#pragma comment(linker, "/include:?ThresholdParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?set_scale@V0LayerParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVFillerParameter@caffe@@@internal@protobuf@google@@YAPBVFillerParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:??_C@_0BF@LFCPKON@Unknown?5layer?5name?3?5?$AA@")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@MH@std@@@std@@@std@@@std@@YAXPAU?$pair@MH@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@MH@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?set_height@Datum@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:??_C@_0N@DHANBLNL@InfogainLoss?$AA@")
#pragma comment(linker, "/include:?Forward_cpu@?$EltwiseLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$reset@V?$Blob@N@caffe@@@?$shared_ptr@V?$Blob@N@caffe@@@boost@@QAEXPAV?$Blob@N@caffe@@@Z")
#pragma comment(linker, "/include:??_R2HDF5OutputParameter@caffe@@8")
#pragma comment(linker, "/include:??$?0V?$HingeLossLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$HingeLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_R4Message@protobuf@google@@6B@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$HingeLossLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??0thread_resource_error@boost@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??_R0?AV?$PositiveUnitballFiller@N@caffe@@@8")
#pragma comment(linker, "/include:??$_Move@AAPAVReshapeParameter@caffe@@@std@@YA$$QAPAVReshapeParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$SliceLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_C@_0CD@GKKALAFA@Initializing?5net?5from?5parameters@")
#pragma comment(linker, "/include:??_G?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAXI@Z")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$SplitLayer@M@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@HH@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@1@@Z")
#pragma comment(linker, "/include:??$?9V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@V01@@std@@YA_NABV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@0@0@Z")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PAUbad_day_of_year@gregorian@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_C@_0O@FILCHGIB@?9D?5input?5blob?$AA@")
#pragma comment(linker, "/include:??_R4HDF5DataParameter@caffe@@6B@")
#pragma comment(linker, "/include:??_R2?$AccuracyLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_R1CM@?0A@EA@exception@boost@@8")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@HDF5OutputParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?has_height@MemoryDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??1?$vector@U?$pair@MH@std@@V?$allocator@U?$pair@MH@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?vdSub@@YAXHPBN0PAN@Z")
#pragma comment(linker, "/include:?set_has_new_num@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?_Inside@?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@IBE_NPBV?$shared_ptr@V?$Blob@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?param_names_index@?$Net@M@caffe@@QBEABV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@XZ")
#pragma comment(linker, "/include:??_R0?AVContrastiveLossParameter@caffe@@@8")
#pragma comment(linker, "/include:??1?$optional_base@Vlocale@std@@@optional_detail@boost@@IAE@XZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$LogLayer@M@caffe@@@detail@boost@@QAE@PAV?$LogLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$_Move@AAPAVRNG@Caffe@caffe@@@std@@YA$$QAPAVRNG@Caffe@caffe@@AAPAV123@@Z")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@AAV23@@Z")
#pragma comment(linker, "/include:??$CreateMaybeMessage@VParamSpec@caffe@@@Arena@protobuf@google@@CAPAVParamSpec@caffe@@PAV012@ZZ")
#pragma comment(linker, "/include:__CTA7?AV?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:??_C@_07IHOOBKHC@?5diff?3?5?$AA@")
#pragma comment(linker, "/include:??_R0?AVsystem_error@system@boost@@@8")
#pragma comment(linker, "/include:?kMirrorFieldNumber@TransformationParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@VCursor@db@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$_Rechecked@PAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@PAV12@@std@@YAAAPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@AAPAV12@PAV12@@Z")
#pragma comment(linker, "/include:?size@?$vector@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?set_has_mvn_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?mutable_net@SolverParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??_R4TransformationParameter@caffe@@6B@")
#pragma comment(linker, "/include:??$distribute@DU?$char_traits@D@std@@V?$allocator@D@2@ABU?$put_holder@DU?$char_traits@D@std@@@detail@io@boost@@@detail@io@boost@@YAXAAV?$basic_format@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$put_holder@DU?$char_traits@D@std@@@012@@Z")
#pragma comment(linker, "/include:??_G?$BaseDataLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?DataParameter_DB_descriptor@caffe@@YAPBVEnumDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?set_kernel_h@PoolingParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@LogParameter@caffe@@8")
#pragma comment(linker, "/include:?net_param@SolverParameter@caffe@@QBEABVNetParameter@2@XZ")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??_R3?$Solver@N@caffe@@8")
#pragma comment(linker, "/include:??_E?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@WBE@AEPAXI@Z")
#pragma comment(linker, "/include:??_C@_0CG@MKDBDDKP@Initializing?5solver?5from?5paramet@")
#pragma comment(linker, "/include:?has_crop_size@WindowDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?set_has_channels@MemoryDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?default_instance_@DummyDataParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??$_Move@AAPAVBlobShape@caffe@@@std@@YA$$QAPAVBlobShape@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?kStageFieldNumber@NetStateRule@caffe@@2HB")
#pragma comment(linker, "/include:?ticks_per_second@?$time_duration@V0posix_time@boost@@V?$time_resolution_traits@Utime_resolution_traits_adapted64_impl@date_time@boost@@$04$0PECEA@$05H@date_time@2@@date_time@boost@@SA_JXZ")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??0?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??1FlattenParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?mutable_unknown_fields@DataParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBHH@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBHH@1@@Z")
#pragma comment(linker, "/include:?set_has_hdf5_output_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?tempering_b@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@2IB")
#pragma comment(linker, "/include:?Backward_gpu@?$TanHLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??0?$BNLLLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?GetMetadata@PythonParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?Swap@LogParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??_C@_0CD@KOJEALBB@Check?5failed?3?5?$CBisinf?$CIbase_scale_@")
#pragma comment(linker, "/include:??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@$$QAH@2@V?$tuple@$$$V@2@@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAH@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?has_eltwise_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_0BF@CHPMJILF@img_height?5?$DN?$DN?5height?$AA@")
#pragma comment(linker, "/include:??_R0?AV?$thread_data@V?$bind_t@XV?$mf0@XVInternalThread@caffe@@@_mfi@boost@@V?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@3@@_bi@boost@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$PReLULayer@M@caffe@@@detail@boost@@QAE@PAV?$PReLULayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?set_has_sigmoid_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$PoolingLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$ReductionLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?shuffle@HDF5DataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$_Uninit_def_fill_n@PAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@IV?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@V12@@std@@YAXPAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@IAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?CopyFrom@ThresholdParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_C@_0BE@LMBHBDLG@num_train_nets?5?$DM?$DN?51?$AA@")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$DropoutLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?set_channels@MemoryDataParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?from_special@?$int_adapter@I@date_time@boost@@SA?AV123@W4special_values@23@@Z")
#pragma comment(linker, "/include:??0?$back_insert_iterator@V?$vector@HV?$allocator@H@std@@@std@@@std@@QAE@AAV?$vector@HV?$allocator@H@std@@@1@@Z")
#pragma comment(linker, "/include:??_G?$HingeLossLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?deallocate@?$allocator@H@std@@QAEXPAHI@Z")
#pragma comment(linker, "/include:?unknown_fields@LossParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R0?AV?$PoolingLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?mutable_source@WindowDataParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??$?0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??0NetParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?has_python_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?pointer_to@?$pointer_traits@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@SAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@2@AAU32@@Z")
#pragma comment(linker, "/include:?min_exponent@?$numeric_limits@O@std@@2HB")
#pragma comment(linker, "/include:?type@?$DeconvolutionLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@Vthread@boost@@@detail@boost@@8")
#pragma comment(linker, "/include:?height@?$MemoryDataLayer@N@caffe@@QAEHXZ")
#pragma comment(linker, "/include:?CopyFrom@SoftmaxParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?New@BlobProtoVector@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?kMvnParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?mutable_lr_policy@SolverParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?value@?$is_base_of_imp@Vexception@std@@Ubad_day_of_year@gregorian@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?Fill@?$ConstantFiller@N@caffe@@UAEXPAV?$Blob@N@2@@Z")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$Im2colLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:__xmm@00000001000000010000000100000001")
#pragma comment(linker, "/include:??$construct@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@1@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@1@$$QAU31@@Z")
#pragma comment(linker, "/include:?_Reserve@?$vector@NV?$allocator@N@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??_R4?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??0PythonParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??_C@_0DB@JBFANAPI@Must?5specify?5?8shape?8?5once?0?5or?5on@")
#pragma comment(linker, "/include:??_GLRNParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_C@_08FJNPIHOL@accuracy?$AA@")
#pragma comment(linker, "/include:??$_Copy_backward@PAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@PAU1234@@std@@YAPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@PAU1234@00U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VMemoryDataParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVMemoryDataParameter@caffe@@@Z")
#pragma comment(linker, "/include:??$addressof@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@YAPAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@AAPAV10@@Z")
#pragma comment(linker, "/include:??_G?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@QAEPAXI@Z")
#pragma comment(linker, "/include:??_C@_0BM@GPPBBCFG@MinTopBlobs?$CI?$CJ?5?$DM?$DN?5top?4size?$CI?$CJ?$AA@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@PoolingParameter@caffe@@8")
#pragma comment(linker, "/include:??_E?$DataLayer@N@caffe@@WBJE@AEPAXI@Z")
#pragma comment(linker, "/include:_tanhf")
#pragma comment(linker, "/include:?HingeLossParameter_Norm_descriptor_@?A0x5e4fc710@caffe@@3PBVEnumDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??_C@_0DE@MDNOHFHH@?$CIpooled_height_?5?9?51?$CJ?5?$CK?5stride_h_@")
#pragma comment(linker, "/include:?kInitialSize@?$RepeatedField@M@protobuf@google@@0HB")
#pragma comment(linker, "/include:??_R3?$AbsValLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_C@_0CI@IACNEFFC@Check?5failed?3?5cv_img?4depth?$CI?$CJ?5?$DN?$DN?5@")
#pragma comment(linker, "/include:?value@?$is_arithmetic_and_not_xchars@GV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?is_modulo@_Num_int_base@std@@2_NB")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??0?$ConvolutionLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_GFillerParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_C@_09HLCHFPPJ@Threshold?$AA@")
#pragma comment(linker, "/include:?kTrainNetFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:??1?$NeuronLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R0?AVPythonParameter@caffe@@@8")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$WindowDataLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?num@?$Blob@M@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??_C@_07HALMFNJG@softmax?$AA@")
#pragma comment(linker, "/include:?has_engine@TanHParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$SplitLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?get_allocator@?$vector@MV?$allocator@M@std@@@std@@QBE?AV?$allocator@M@2@XZ")
#pragma comment(linker, "/include:??$swap@PAVDataParameter@caffe@@@std@@YAXAAPAVDataParameter@caffe@@0@Z")
#pragma comment(linker, "/include:?gInstantiationGuardReshapeLayer@caffe@@3DA")
#pragma comment(linker, "/include:?default_instance@MemoryDataParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??_R0?AVV1LayerParameter@caffe@@@8")
#pragma comment(linker, "/include:??_R4?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@6Bbad_day_of_month@gregorian@2@@")
#pragma comment(linker, "/include:?set_has_lr_mult@ParamSpec@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?mutable_infogain_loss_param@V1LayerParameter@caffe@@QAEPAVInfogainLossParameter@2@XZ")
#pragma comment(linker, "/include:?flag@?$fp_traits_non_native@NUdouble_precision@detail@math@boost@@@detail@math@boost@@2_KB")
#pragma comment(linker, "/include:??_R2?$MSRAFiller@M@caffe@@8")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@1@AAPAU21@@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VLogParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVLogParameter@caffe@@@Z")
#pragma comment(linker, "/include:?kEngineFieldNumber@SoftmaxParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$?0V?$Im2colLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$Im2colLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?value@?$operator_returns_void@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@H@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAIABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z")
#pragma comment(linker, "/include:?GetMetadata@NetParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@VCaffe@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?set_beta@LRNParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?value@error_condition@std@@QBEHXZ")
#pragma comment(linker, "/include:?Swap@ReLUParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??$_Move@AAU?$pair@NH@std@@@std@@YA$$QAU?$pair@NH@0@AAU10@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@VCaffe@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?const_max@?$integer_traits_base@_K$0A@$0?0@detail@boost@@2_KB")
#pragma comment(linker, "/include:?mutable_concat_param@V1LayerParameter@caffe@@QAEPAVConcatParameter@2@XZ")
#pragma comment(linker, "/include:??_7?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??$_Insert_nohint@AAU?$pair@$$CBHH@std@@PAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBHH@1@PAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??_8?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@7B@")
#pragma comment(linker, "/include:?GetCachedSize@LossParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_C@_0DC@EOEKDKLE@top_k_?5?$DM?$DN?5bottom?$FL0?$FN?9?$DOcount?$CI?$CJ?5?1?5b@")
#pragma comment(linker, "/include:?default_instance_@DropoutParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??0?$normal_distribution@N@random@boost@@QAE@ABN0@Z")
#pragma comment(linker, "/include:??BCheckOpString@google@@QBE_NXZ")
#pragma comment(linker, "/include:??_G_Iostream_error_category@std@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_C@_0DN@KCEMLBNF@Attempting?5to?5upgrade?5input?5file@")
#pragma comment(linker, "/include:??$checked_delete@V?$PoolingLayer@M@caffe@@@boost@@YAXPAV?$PoolingLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$swap@PAVReductionParameter@caffe@@@std@@YAXAAPAVReductionParameter@caffe@@0@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?kMaxLevelFieldNumber@NetStateRule@caffe@@2HB")
#pragma comment(linker, "/include:??_R2_System_error_category@std@@8")
#pragma comment(linker, "/include:??_R3BlobProto@caffe@@8")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@E@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??A?$vector@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@QBEABV?$shared_ptr@V?$Layer@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?type@?$WindowDataLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@D@std@@@std@@@std@@YAXPAD0AAU?$_Wrap_alloc@V?$allocator@D@std@@@0@@Z")
#pragma comment(linker, "/include:?SPLIT@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??_R0?AV?$ConvolutionLayer@N@caffe@@@8")
#pragma comment(linker, "/include:?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??1?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0BK@JBHMPFCE@infogain?9?$DOchannels?$CI?$CJ?5?$DN?$DN?51?$AA@")
#pragma comment(linker, "/include:??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$DeconvolutionLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_7?$ConcatLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??_R0?AV?$LogLayer@N@caffe@@@8")
#pragma comment(linker, "/include:?descriptor@ConcatParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$Destroy@VTypeHandler@?$RepeatedPtrField@VNetState@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXXZ")
#pragma comment(linker, "/include:?InternalSwap@ThresholdParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?CopyFrom@MVNParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?is_iec559@_Num_float_base@std@@2_NB")
#pragma comment(linker, "/include:??_R0?AVsp_counted_base@detail@boost@@@8")
#pragma comment(linker, "/include:?construct@?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@QAEXPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@2@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V12@@?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@$$QAV23@@Z")
#pragma comment(linker, "/include:?has_rand_skip@ImageDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?set_has_debug_info@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$destroy@M@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAEXPAM@Z")
#pragma comment(linker, "/include:??_R0?AV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@@8")
#pragma comment(linker, "/include:?MergeFrom@PoolingParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$_Unchecked@PAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@PAV12@@Z")
#pragma comment(linker, "/include:?value@?$is_pointer_helper@G@detail@boost@@2_NB")
#pragma comment(linker, "/include:??1?$MultinomialLogisticLossLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?STOCHASTIC@V0LayerParameter@caffe@@2W4V0LayerParameter_PoolMethod@2@B")
#pragma comment(linker, "/include:??_7?$PowerLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??_R3?$FlattenLayer@M@caffe@@8")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$ContrastiveLossLayer@M@caffe@@@detail@boost@@QAE@PAV?$ContrastiveLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$shuffle@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@@caffe@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@0PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@@Z")
#pragma comment(linker, "/include:?InitAsDefaultInstance@ReshapeParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:?dummy_data_param@V1LayerParameter@caffe@@QBEABVDummyDataParameter@2@XZ")
#pragma comment(linker, "/include:?kStageFieldNumber@NetState@caffe@@2HB")
#pragma comment(linker, "/include:?set_scale@WindowDataParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12")
#pragma comment(linker, "/include:?LayerSetUp@?$ConcatLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@thread_exception@boost@@8")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$EltwiseLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$Net@M@caffe@@@boost@@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:?ReductionOp_ARRAYSIZE@ReductionParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$_Make_heap@PAU?$pair@MH@std@@HU12@U?$greater@U?$pair@MH@std@@@2@@std@@YAXPAU?$pair@MH@0@0U?$greater@U?$pair@MH@std@@@0@PAH0@Z")
#pragma comment(linker, "/include:??_C@_0BB@GNBKCDOO@Snapshotting?5to?5?$AA@")
#pragma comment(linker, "/include:?kSourceCodeInfoFieldNumber@FileDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?IsInitialized@AccuracyParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?module@PythonParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??0?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@QAE@ABU012@@Z")
#pragma comment(linker, "/include:??$_Ptr_cat@MM@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBMPAM@Z")
#pragma comment(linker, "/include:?CopyFrom@ReLUParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?type@?$PowerLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??$_Distance2@PBDH@std@@YAXPBD0AAHUrandom_access_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?app@?$_Iosb@H@std@@2W4_Openmode@12@B")
#pragma comment(linker, "/include:??0?$mf0@XVInternalThread@caffe@@@_mfi@boost@@QAE@P8InternalThread@caffe@@AEXXZ@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$MVNLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?crop_mode@WindowDataParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?shape@?$Blob@I@caffe@@QBEHH@Z")
#pragma comment(linker, "/include:?DropoutParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?lower_bound@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@@std@@SAIABV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@2@@Z")
#pragma comment(linker, "/include:??1PReLUParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_C@_0BB@ENOGEDFI@datum_num?5?$DM?$DN?5num?$AA@")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??0DataParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?asum_diff@?$Blob@N@caffe@@QBENXZ")
#pragma comment(linker, "/include:?tempering_u@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@2IB")
#pragma comment(linker, "/include:?ToProto@?$Blob@H@caffe@@QBEXPAVBlobProto@2@_N@Z")
#pragma comment(linker, "/include:??4?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAEAAV01@$$QAV01@@Z")
#pragma comment(linker, "/include:??_C@_0BC@MAIPEPCF@concat_axis_?5?$DO?$DN?50?$AA@")
#pragma comment(linker, "/include:?New@SliceParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??_C@_0CH@NHFFIILD@Unknown?5function?5operating?5on?5ty@")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAPAV?$FlattenLayer@N@caffe@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@@std@@YAPAPAV?$FlattenLayer@N@caffe@@PAPAV12@00AAU?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@0@@Z")
#pragma comment(linker, "/include:?has_stride@ConvolutionParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_0O@NHBICBAI@kernel_w_?5?$DO?50?$AA@")
#pragma comment(linker, "/include:?set_rand_skip@ImageDataParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?param_propagate_down@?$Layer@N@caffe@@QAE_NH@Z")
#pragma comment(linker, "/include:??$?0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAX@?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@$$QAV01@@Z")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@QAEPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@2@I@Z")
#pragma comment(linker, "/include:??$CreateInternal@VFillerParameter@caffe@@@Arena@protobuf@google@@AAEPAVFillerParameter@caffe@@_N@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$SoftmaxLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$?0V?$EuclideanLossLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$EuclideanLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$_Val_type@PAV?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Net@N@caffe@@@boost@@PAV12@@Z")
#pragma comment(linker, "/include:??1?$ConvolutionLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$EltwiseLayer@N@caffe@@@detail@boost@@QAE@PAV?$EltwiseLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?set_det_bg_threshold@V0LayerParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?gInstantiationGuardMemoryDataLayer@caffe@@3DA")
#pragma comment(linker, "/include:?kScaleFieldNumber@LogParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$Net@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$_Val_type@PAN@std@@YAPANPAN@Z")
#pragma comment(linker, "/include:?traversal_i@?$pure_iterator_traversal@PBD@iterator_range_detail@boost@@2IB")
#pragma comment(linker, "/include:?set_base_lr@SolverParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?has_out_max_val@ArgMaxParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Blob@N@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@V?$Blob@N@caffe@@@1@PAV?$Blob@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAV?$Blob@M@caffe@@@std@@@2@XZ")
#pragma comment(linker, "/include:??_R0?AV?$MemoryDataLayer@M@caffe@@@8")
#pragma comment(linker, "/include:??0system_error@system@boost@@QAE@Verror_code@12@PBD@Z")
#pragma comment(linker, "/include:?Capacity@?$RepeatedField@M@protobuf@google@@QBEHXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@DataParameter@caffe@@8")
#pragma comment(linker, "/include:??$raise_overflow_error@NU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@math@boost@@@policies@math@boost@@YANPBD0ABU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@012@@Z")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Vdomain_error@std@@@12@@Z")
#pragma comment(linker, "/include:??C?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@QBEPAV?$PoolingLayer@M@caffe@@XZ")
#pragma comment(linker, "/include:?set_has_stepsize@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$forward@VDatum@caffe@@@std@@YA$$QAVDatum@caffe@@AAV12@@Z")
#pragma comment(linker, "/include:?value@?$is_base_and_derived_impl@Vexception@std@@Ubad_day_of_year@gregorian@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$caffe_copy@M@caffe@@YAXHPBMPAM@Z")
#pragma comment(linker, "/include:?UnsafeSetDefault@ArenaStringPtr@internal@protobuf@google@@QAEXPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?PERMISSIVE@ParamSpec@caffe@@2W4ParamSpec_DimCheckMode@2@B")
#pragma comment(linker, "/include:??$?0V?$Layer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$Layer@M@caffe@@@Z")
#pragma comment(linker, "/include:?has_quiet_NaN@_Num_base@std@@2_NB")
#pragma comment(linker, "/include:??0ConcatParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?offset@?$Blob@N@caffe@@QBEHHHHH@Z")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PAI@detail@boost@@2_NB")
#pragma comment(linker, "/include:?default_instance_@LossParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?beta@V0LayerParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?SetCachedSize@LogParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?MoveArray@?$RepeatedField@H@protobuf@google@@AAEXPAH0H@Z")
#pragma comment(linker, "/include:__xmm@7ffffffe7ffffffe7ffffffe7ffffffe")
#pragma comment(linker, "/include:??_R4HingeLossParameter@caffe@@6B@")
#pragma comment(linker, "/include:?MinTopBlobs@?$Layer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?CopyFrom@PowerParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$_Val_type@PAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@YAPAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@PAPAV10@@Z")
#pragma comment(linker, "/include:?MinTopBlobs@?$BaseConvolutionLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?SigmoidParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??1?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?SolverParameter_SolverType_IsValid@caffe@@YA_NH@Z")
#pragma comment(linker, "/include:??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R4?$ReshapeLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??_R4Closure@protobuf@google@@6B@")
#pragma comment(linker, "/include:?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?max@?$br_mul@$00$0GE@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:??$_Uninit_fill_n@PAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@IU1234@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@U1234@@std@@YAXPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@IPBU1234@AAU?$_Wrap_alloc@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?is_pos_inf@?$int_adapter@I@date_time@boost@@SA_NI@Z")
#pragma comment(linker, "/include:??0?$AdaGradSolver@M@caffe@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:??_C@_0DO@KFAOHONB@Filter?5size?5is?5kernel_size?5OR?5ke@")
#pragma comment(linker, "/include:?default_instance_@ConvolutionParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:??_R4bad_year@gregorian@boost@@6B@")
#pragma comment(linker, "/include:?Forward@?$Layer@N@caffe@@QAENABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:??G?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QBEHABV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:?Swap@ExpParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@0@Z")
#pragma comment(linker, "/include:??$Creator_BNLLLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?power@SolverParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?allocate@?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@QAEPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@ConvolutionParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$set_info@V?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@@exception_detail@boost@@YAABV?$clone_impl@Ubad_alloc_@exception_detail@boost@@@01@ABV201@ABV?$error_info@Uthrow_line_@boost@@H@1@@Z")
#pragma comment(linker, "/include:??$MakeCheckOpString@HM@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABHABMPBD@Z")
#pragma comment(linker, "/include:??_R4overflow_error@std@@6B@")
#pragma comment(linker, "/include:?New@LayerParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?set_engine@PoolingParameter@caffe@@QAEXW4PoolingParameter_Engine@2@@Z")
#pragma comment(linker, "/include:??$get@$0A@$$QAU?$pair@HH@std@@@std@@YA$$QAU?$pair@HH@0@$$QAV?$tuple@$$QAU?$pair@HH@std@@@0@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$MVNLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?BackwardTo@?$Net@M@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?Delete@?$GenericTypeHandler@VBlobProto@caffe@@@internal@protobuf@google@@SAXPAVBlobProto@caffe@@PAVArena@34@@Z")
#pragma comment(linker, "/include:??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z")
#pragma comment(linker, "/include:?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z")
#pragma comment(linker, "/include:??$OwnInternal@VNetStateRule@caffe@@@Arena@protobuf@google@@AAEXPAVNetStateRule@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?ByteSize@BlobProtoVector@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$AccuracyLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VFillerParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVFillerParameter@caffe@@@Z")
#pragma comment(linker, "/include:?size@?$RepeatedPtrField@VNetState@caffe@@@protobuf@google@@QBEHXZ")
#pragma comment(linker, "/include:?_Ufill@?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@IAEPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@PAU3456@IPBU3456@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@ParamSpec@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:?PoolingParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?Clear@LRNParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??$addressof@U?$pair@MH@std@@@std@@YAPAU?$pair@MH@0@AAU10@@Z")
#pragma comment(linker, "/include:??_GImageDataParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$addressof@PAV?$FlattenLayer@M@caffe@@@std@@YAPAPAV?$FlattenLayer@M@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VReLUParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVReLUParameter@caffe@@@Z")
#pragma comment(linker, "/include:??$_Move@AAPAV?$Net@N@caffe@@@std@@YA$$QAPAV?$Net@N@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??_C@_0CP@JJODFJIG@Number?5of?5output?5should?5be?5multi@")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$LRNLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$_Allocate@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@YAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@0@IPAU10@@Z")
#pragma comment(linker, "/include:??$_Uninit_move@PAU?$pair@HH@std@@PAU12@V?$allocator@U?$pair@HH@std@@@2@U12@@std@@YAPAU?$pair@HH@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@HH@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?found@?$type_with_alignment_imp@$03@detail@boost@@0IB")
#pragma comment(linker, "/include:??_C@_0BA@IBIMIJPM@test_net?5file?3?5?$AA@")
#pragma comment(linker, "/include:??_R3?$DropoutLayer@M@caffe@@8")
#pragma comment(linker, "/include:?SharedDtor@TanHParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$DataLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?LRNParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8")
#pragma comment(linker, "/include:?InternalSwap@MemoryDataParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:??_GNetStateRule@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?Clear@PythonParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?push_back@?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@QAEXABV?$shared_ptr@V?$Blob@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?add_diff@BlobProto@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?value@?$is_const_rvalue_filter@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?_Pop_back_n@?$vector@V?$shared_ptr@V?$Net@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@QAEXI@Z")
#pragma comment(linker, "/include:?channels@Mat@cv@@QBEHXZ")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:?has_weight_decay@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$EltwiseLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$SoftmaxLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABU?$error_info_injector@Vbad_format_string@io@boost@@@12@@Z")
#pragma comment(linker, "/include:?Transform@?$DataTransformer@M@caffe@@QAEXABVDatum@2@PAV?$Blob@M@2@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$ExpLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@HingeLossParameter@caffe@@8")
#pragma comment(linker, "/include:?STRING@FieldOptions@protobuf@google@@2W4FieldOptions_CType@23@B")
#pragma comment(linker, "/include:?value@?$alignment_of_impl@V?$unique_future@X@boost@@@detail@boost@@2IB")
#pragma comment(linker, "/include:?set_phase@NetState@caffe@@QAEXW4Phase@2@@Z")
#pragma comment(linker, "/include:??0Mat@cv@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??_R2WindowDataParameter@caffe@@8")
#pragma comment(linker, "/include:??_C@_0BF@GFPBODKD@width?5?$DM?$DN?5datum_width?$AA@")
#pragma comment(linker, "/include:??$Check_GEImpl@NH@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABNABHPBD@Z")
#pragma comment(linker, "/include:??R?$less@H@std@@QBE_NABH0@Z")
#pragma comment(linker, "/include:?_Destroy@?$vector@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@IAEXPAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@2@0@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VLossParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVLossParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@@boost@@YAXPAV?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@0@@Z")
#pragma comment(linker, "/include:??_C@_0FK@DDOGPDAL@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$BNLLLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXID@Z")
#pragma comment(linker, "/include:?owns_lock@?$unique_lock@Vmutex@boost@@@boost@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_0FN@HBILBIOK@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??_Gbad_alloc_@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIABV12@II@Z")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@1@AAPAU21@@Z")
#pragma comment(linker, "/include:?kPublicDependencyFieldNumber@FileDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?set_shuffle@ImageDataParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:??_C@_06EBOIFINI@a?5?$DM?$DN?5b?$AA@")
#pragma comment(linker, "/include:?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A")
#pragma comment(linker, "/include:??$forward@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@YA$$QAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@AAV12@@Z")
#pragma comment(linker, "/include:??$_Move@PAIPAI@std@@YAPAIPAI00U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$_Allocate@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@IPAV12@@Z")
#pragma comment(linker, "/include:??_R2ReshapeParameter@caffe@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$BaseDataLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_R2SPPParameter@caffe@@8")
#pragma comment(linker, "/include:??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z")
#pragma comment(linker, "/include:?InternalSwap@SliceParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$SPPLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_G?$AccuracyLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_C@_0BG@EDPHDHGE@Incorrect?5input?5size?4?$AA@")
#pragma comment(linker, "/include:??$partial_sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MH@std@@@std@@@std@@@std@@U?$greater@U?$pair@MH@std@@@2@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MH@std@@@std@@@std@@@0@00U?$greater@U?$pair@MH@std@@@0@@Z")
#pragma comment(linker, "/include:?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R2bad_year@gregorian@boost@@8")
#pragma comment(linker, "/include:??$sigmoid@M@caffe@@YAMM@Z")
#pragma comment(linker, "/include:?gcd_d1_d2@?$ratio_divide@V?$ratio@$00$0DLJKMKAA@@boost@@V?$ratio@$00$0DOI@@2@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:?transform_param@V1LayerParameter@caffe@@QBEABVTransformationParameter@2@XZ")
#pragma comment(linker, "/include:??0FillerParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?set_stride_w@ConvolutionParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@1@@Z")
#pragma comment(linker, "/include:??_R3?$UniformFiller@N@caffe@@8")
#pragma comment(linker, "/include:??_7?$SliceLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??_R2TanHParameter@caffe@@8")
#pragma comment(linker, "/include:??_G?$Filler@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_7FlattenParameter@caffe@@6B@")
#pragma comment(linker, "/include:??$construct@V?$vector@MV?$allocator@M@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@1@PAV?$vector@MV?$allocator@M@std@@@1@$$QAV31@@Z")
#pragma comment(linker, "/include:??1?$AccuracyLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$Creator_EltwiseLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$InfogainLossLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$SliceLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_C@_0CA@LONCOKNJ@?$CJ?5specified?5by?5a?5rule?5in?5layer?5?$AA@")
#pragma comment(linker, "/include:?input@NetParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z")
#pragma comment(linker, "/include:?_Reallocate@?$vector@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??_C@_0DA@LINMDEMB@Unknown?5parameter?5det_crop_mode?5@")
#pragma comment(linker, "/include:??$reset@V?$Layer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAEXPAV?$Layer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_R4?$SigmoidCrossEntropyLossLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?log_param@LayerParameter@caffe@@QBEABVLogParameter@2@XZ")
#pragma comment(linker, "/include:?digits@?$numeric_limits@K@std@@2HB")
#pragma comment(linker, "/include:??_R3?$HingeLossLayer@M@caffe@@8")
#pragma comment(linker, "/include:?SharedDtor@ImageDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@1@@Z")
#pragma comment(linker, "/include:??$make_pair@AAHH@std@@YA?AU?$pair@HH@0@AAH$$QAH@Z")
#pragma comment(linker, "/include:??0?$Blob@N@caffe@@QAE@ABV?$vector@HV?$allocator@H@std@@@std@@@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??$_Fill@PAMM@std@@YAXPAM0ABM@Z")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?InternalSwap@BlobProto@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?conv_col2im_cpu@?$BaseConvolutionLayer@M@caffe@@AAEXPBMPAM@Z")
#pragma comment(linker, "/include:?Clear@V0LayerParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?Clear@InnerProductParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?UnsafeArenaSwap@?$RepeatedPtrField@VFillerParameter@caffe@@@protobuf@google@@QAEXPAV123@@Z")
#pragma comment(linker, "/include:?kEngineFieldNumber@PoolingParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_C@_0CD@PAENHCBE@n?5must?5be?5a?5multiple?5of?5batch?5si@")
#pragma comment(linker, "/include:??_R4?$MSRAFiller@N@caffe@@6B@")
#pragma comment(linker, "/include:?margin@ContrastiveLossParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?has_dropout_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?default_instance@BlobProtoVector@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:?swap@?$shared_ptr@V?$Filler@N@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:??1?$ReductionLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_G?$ConvolutionLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$_Move@AAPAV?$PoolingLayer@M@caffe@@@std@@YA$$QAPAV?$PoolingLayer@M@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?blobs_size@BlobProtoVector@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?layer@V1LayerParameter@caffe@@QBEABVV0LayerParameter@2@XZ")
#pragma comment(linker, "/include:??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@?$vector@HV?$allocator@H@std@@@std@@IAEPAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0PAH@Z")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@EltwiseParameter@caffe@@8")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$PowerLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??1?$Net@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?TestAll@?$Solver@M@caffe@@IAEXXZ")
#pragma comment(linker, "/include:?Forward_gpu@?$PowerLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$MakeCheckOpValueString@$$BY01$$CBD@google@@YAXPAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAY01$$CBD@Z")
#pragma comment(linker, "/include:?New@ParamSpec@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAU?$pair@NH@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@NH@std@@@std@@@2@@std@@YAPAU?$pair@NH@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@NH@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?value@?$enable_binary_hash@O$0DF@$0EAA@@hash_detail@boost@@2_NB")
#pragma comment(linker, "/include:??$caffe_cpu_sign@M@caffe@@YAXHPBMPAM@Z")
#pragma comment(linker, "/include:??_E?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@WM@AEPAXI@Z")
#pragma comment(linker, "/include:??1?$GaussianFiller@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@std@@QAE?AV01@H@Z")
#pragma comment(linker, "/include:??$min@_J@std@@YAAB_JAB_J0@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$DeconvolutionLayer@N@caffe@@@detail@boost@@QAE@PAV?$DeconvolutionLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?default_instance_@SolverState@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?Merge@?$GenericTypeHandler@VParamSpec@caffe@@@internal@protobuf@google@@SAXABVParamSpec@caffe@@PAV56@@Z")
#pragma comment(linker, "/include:??$forward@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@YA$$QAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@0@AAU10@@Z")
#pragma comment(linker, "/include:?scale@TransformationParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:??_R2NetParameter@caffe@@8")
#pragma comment(linker, "/include:??0?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z")
#pragma comment(linker, "/include:??$Own@VHDF5OutputParameter@caffe@@@Arena@protobuf@google@@QAEXPAVHDF5OutputParameter@caffe@@@Z")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@IBEXPAH0@Z")
#pragma comment(linker, "/include:??_G?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAEPAXI@Z")
#pragma comment(linker, "/include:??$Own@VTransformationParameter@caffe@@@Arena@protobuf@google@@QAEXPAVTransformationParameter@caffe@@@Z")
#pragma comment(linker, "/include:?SetCachedSize@HDF5OutputParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAH@2@V?$tuple@$$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAH@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?_Xlen@?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@IBEXXZ")
#pragma comment(linker, "/include:?InitAsDefaultInstance@ExpParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??E?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??$caffe_copy@H@caffe@@YAXHPBHPAH@Z")
#pragma comment(linker, "/include:?SolverMode_MAX@SolverParameter@caffe@@2W4SolverParameter_SolverMode@2@B")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?has_kernel_h@PoolingParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?Forward_gpu@?$Layer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?has_coeff@ReductionParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$CheckNotNull@V?$Net@N@caffe@@@google@@YAPAV?$Net@N@caffe@@PBDH0PAV12@@Z")
#pragma comment(linker, "/include:?mutable_bias_filler@ConvolutionParameter@caffe@@QAEPAVFillerParameter@2@XZ")
#pragma comment(linker, "/include:?MaxTopBlobs@?$SPPLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$CheckNotNull@V?$Net@M@caffe@@@google@@YAPAV?$Net@M@caffe@@PBDH0PAV12@@Z")
#pragma comment(linker, "/include:??0?$Blob@N@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$DataLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??H?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QBE?AV01@H@Z")
#pragma comment(linker, "/include:?stage@NetStateRule@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z")
#pragma comment(linker, "/include:?allocate@?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@QAEPAV?$shared_ptr@V?$Net@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@VRNG@Caffe@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$_Iter_cat@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?Swap@FlattenParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??_G?$DropoutLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?SnapshotSolverState@?$SGDSolver@M@caffe@@MAEXPAVSolverState@2@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$DeconvolutionLayer@M@caffe@@@boost@@YAXPAV?$DeconvolutionLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?_Destroy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@IAEXPAU?$pair@HH@2@0@Z")
#pragma comment(linker, "/include:?e@?$exception_ptr_static_exception_object@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@2Vexception_ptr@3@B")
#pragma comment(linker, "/include:??$raise_domain_error@MU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@math@boost@@@policies@math@boost@@YAMPBD0ABMABU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@012@@Z")
#pragma comment(linker, "/include:??$skip_asterisk@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$ctype@D@2@@detail@io@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V34@0ABV?$ctype@D@4@@Z")
#pragma comment(linker, "/include:??$?0HHX@?$pair@HH@std@@QAE@$$QAH0@Z")
#pragma comment(linker, "/include:?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?min_exponent10@?$numeric_limits@M@std@@2HB")
#pragma comment(linker, "/include:?set_stride_w@PoolingParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??$_Insert_hint@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@1@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@1@$$QA_N@Z")
#pragma comment(linker, "/include:??_E?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@WM@AEPAXI@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@VSyncedMemory@caffe@@@detail@boost@@QAE@PAVSyncedMemory@caffe@@@Z")
#pragma comment(linker, "/include:??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:?digits10@?$numeric_limits@O@std@@2HB")
#pragma comment(linker, "/include:?has_train_state@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$InnerProductLayer@N@caffe@@@detail@boost@@QAE@PAV?$InnerProductLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$DataLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?GetDirectBufferPointerInline@CodedInputStream@io@protobuf@google@@QAEXPAPBXPAH@Z")
#pragma comment(linker, "/include:?value@?$is_volatile_rval_filter@H@detail@boost@@2_NB")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@ConcatParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??_8?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@7B@")
#pragma comment(linker, "/include:??R?$bind_t@XV?$mf0@XVInternalThread@caffe@@@_mfi@boost@@V?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@3@@_bi@boost@@QAEXXZ")
#pragma comment(linker, "/include:?Registry@?$LayerRegistry@M@caffe@@SAAAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@XZ")
#pragma comment(linker, "/include:?kSFixed32Size@WireFormatLite@internal@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_C@_0EM@GGFDFJJI@Check?5failed?3?5param?4input_dim_si@")
#pragma comment(linker, "/include:??$Own@VBlobProtoVector@caffe@@@Arena@protobuf@google@@QAEXPAVBlobProtoVector@caffe@@@Z")
#pragma comment(linker, "/include:?Phase_descriptor@caffe@@YAPBVEnumDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$WindowDataLayer@N@caffe@@@detail@boost@@QAE@PAV?$WindowDataLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?has_debug_info@NetParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?power_param@LayerParameter@caffe@@QBEABVPowerParameter@2@XZ")
#pragma comment(linker, "/include:?MergeFrom@ConvolutionParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?set_force_color@TransformationParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:?_Assign_rv@?$vector@HV?$allocator@H@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$DataLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?mutable_weight_decay@V1LayerParameter@caffe@@QAEPAV?$RepeatedField@M@protobuf@google@@XZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@FlattenParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R2thread_data_base@detail@boost@@8")
#pragma comment(linker, "/include:?LayerSetUp@?$EltwiseLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?set_global_pooling@PoolingParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:??$Own@VContrastiveLossParameter@caffe@@@Arena@protobuf@google@@QAEXPAVContrastiveLossParameter@caffe@@@Z")
#pragma comment(linker, "/include:?GetArenaNoVirtual@?$RepeatedField@H@protobuf@google@@ABEPAVArena@23@XZ")
#pragma comment(linker, "/include:??_C@_0CM@MANKPDKG@Check?5failed?3?5this?9?$DOprefetch_dat@")
#pragma comment(linker, "/include:??1?$SigmoidCrossEntropyLossLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?Backward_gpu@?$EltwiseLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?UpdateDebugInfo@?$Net@M@caffe@@IAEXH@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBU?$pair@HH@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@ABU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBU?$pair@HH@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??1?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@QAE@XZ")
#pragma comment(linker, "/include:?Add@?$RepeatedField@_J@protobuf@google@@QAEXAB_J@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$Im2colLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??$ReadMessageNoVirtualNoRecursionDepth@VLayerParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVLayerParameter@caffe@@@Z")
#pragma comment(linker, "/include:??0?$shared_ptr@VRNG@Caffe@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?set_has_kernel_size@ConvolutionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0overflow_error@std@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?SPPParameter_Engine_descriptor@caffe@@YAPBVEnumDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?_Destroy@?$vector@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@IAEXPAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:?begin@?$vector@IV?$allocator@_N@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??$move@AAN@std@@YA$$QANAAN@Z")
#pragma comment(linker, "/include:??_R3too_many_args@io@boost@@8")
#pragma comment(linker, "/include:?ByteSize@SigmoidParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?_Getcomp@?$_Tree_comp@$0A@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QBE?AU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ")
#pragma comment(linker, "/include:??$forward@$$QAH@std@@YA$$QAHAAH@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$AbsValLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_C@_01ODHLEDKK@?$CI?$AA@")
#pragma comment(linker, "/include:??$digits@NU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@math@boost@@@policies@math@boost@@YAHXZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$ArgMaxLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?mutable_crop_mode@WindowDataParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??_7?$SPPLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?ADAGRAD@SolverParameter@caffe@@2W4SolverParameter_SolverType@2@B")
#pragma comment(linker, "/include:?LayerSetUp@?$ExpLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$AccuracyLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?max_size@?$vector@U?$pair@NH@std@@V?$allocator@U?$pair@NH@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$vector@MV?$allocator@M@std@@@std@@PAV12@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@V12@@std@@YAPAV?$vector@MV?$allocator@M@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?unwrap@?$unwrapper@V?$mf0@XVInternalThread@caffe@@@_mfi@boost@@@_bi@boost@@SAAAV?$mf0@XVInternalThread@caffe@@@_mfi@3@AAV453@J@Z")
#pragma comment(linker, "/include:?has_average_loss@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?IsInitialized@V0LayerParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??$?0V?$Filler@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$Filler@M@caffe@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$MemoryDataLayer@M@caffe@@8")
#pragma comment(linker, "/include:?has_threshold@ThresholdParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@Vthread@boost@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R3BlobProtoVector@caffe@@8")
#pragma comment(linker, "/include:?Start@Timer@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?has_lr_policy@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R4?$ReductionLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?has_layer@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?value@?$operator_exists@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@_J@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:?AppendBottom@?$Net@N@caffe@@IAEHABVNetParameter@2@HHPAV?$set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@5@@Z")
#pragma comment(linker, "/include:?digits10@?$numeric_limits@_K@std@@2HB")
#pragma comment(linker, "/include:?allocate@?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@QAEPAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:??_C@_04OMAJLIMI@?$CJ?5?$DN?5?$AA@")
#pragma comment(linker, "/include:??0?$_Tree@V?$_Tmap_traits@PBXUtss_data_node@detail@boost@@U?$less@PBX@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@5@$0A@@std@@@std@@QAE@ABU?$less@PBX@1@ABV?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@1@@Z")
#pragma comment(linker, "/include:??1?$RepeatedField@_N@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@H@std@@@std@@SAIABV?$allocator@H@2@@Z")
#pragma comment(linker, "/include:??_R2?$SGDSolver@N@caffe@@8")
#pragma comment(linker, "/include:?value@?$arg@$00@mpl@boost@@2HB")
#pragma comment(linker, "/include:??$get_min_shift_value@M@detail@math@boost@@YAMXZ")
#pragma comment(linker, "/include:?clear_mean_file@ImageDataParameter@caffe@@QAEXXZ")
#pragma comment(linker, "/include:?New@ExpParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?mutable_shape@BlobProto@caffe@@QAEPAVBlobShape@2@XZ")
#pragma comment(linker, "/include:?push_back@?$vector@MV?$allocator@M@std@@@std@@QAEXABM@Z")
#pragma comment(linker, "/include:??$caffe_cpu_strided_dot@N@caffe@@YANHPBNH0H@Z")
#pragma comment(linker, "/include:?_Change_alloc@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@M@std@@@2@@Z")
#pragma comment(linker, "/include:??_R3CPUTimer@caffe@@8")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?kNameFieldNumber@FileDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?has_stride_h@PoolingParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?construct@?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@QAEXPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@ABU3456@@Z")
#pragma comment(linker, "/include:?output_blobs@?$Net@N@caffe@@QBEABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@XZ")
#pragma comment(linker, "/include:??_R1A@EA@3FA@clone_base@exception_detail@boost@@8")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Net@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?kEngineFieldNumber@ReLUParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R3?$EltwiseLayer@N@caffe@@8")
#pragma comment(linker, "/include:??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@QBEAAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@XZ")
#pragma comment(linker, "/include:?axis@FlattenParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?height@?$Blob@H@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?LayerSetUp@?$Layer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$?0V?$SigmoidLayer@M@caffe@@@?$shared_ptr@V?$SigmoidLayer@M@caffe@@@boost@@QAE@PAV?$SigmoidLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@NetStateRule@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAH0@Z")
#pragma comment(linker, "/include:?source@InfogainLossParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?SolverParameter_SolverType_descriptor_@?A0x5e4fc710@caffe@@3PBVEnumDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??0?$arg@$02@boost@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0BB@DNHOEAAG@Check?5failed?3?5x?5?$AA@")
#pragma comment(linker, "/include:?set_has_normalize@LossParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$SliceLayer@N@caffe@@@detail@boost@@QAE@PAV?$SliceLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$ConcatLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?kLeadingCommentsFieldNumber@SourceCodeInfo_Location@protobuf@google@@2HB")
#pragma comment(linker, "/include:??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:??_R0?AV?$SoftmaxLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?_Eqrange@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@V12@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:??_E?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@$4PPPPPPPM@EI@AEPAXI@Z")
#pragma comment(linker, "/include:??$Creator_ReshapeLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$ContrastiveLossLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?value@?$is_function_impl@U?$thread_move_t@Udefault_barrier_reseter@thread_detail@boost@@@detail@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_G?$ArgMaxLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?value@?$is_member_function_pointer_impl@$$CCX@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$Create@VFillerParameter@caffe@@@Arena@protobuf@google@@SAPAVFillerParameter@caffe@@PAV012@@Z")
#pragma comment(linker, "/include:??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:?SetCachedSize@WindowDataParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?sigmoid_param@LayerParameter@caffe@@QBEABVSigmoidParameter@2@XZ")
#pragma comment(linker, "/include:?_Lmost@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@overflow_error@std@@8")
#pragma comment(linker, "/include:??_G?$ConcatLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?set_has_source@WindowDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R3?$PReLULayer@M@caffe@@8")
#pragma comment(linker, "/include:??_R2?$BNLLLayer@N@caffe@@8")
#pragma comment(linker, "/include:?bg_threshold@WindowDataParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?clear_has_mean_file@ImageDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Move@AAPAVPythonParameter@caffe@@@std@@YA$$QAPAVPythonParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??$OwnInternal@VSoftmaxParameter@caffe@@@Arena@protobuf@google@@AAEXPAVSoftmaxParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?clear@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:??0?$allocator@M@std@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??_R2?$BaseConvolutionLayer@N@caffe@@8")
#pragma comment(linker, "/include:?type@V0LayerParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??$_Copy_backward@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??1?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?_Xlen@?$vector@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@IBEXXZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$ImageDataLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R3ReshapeParameter@caffe@@8")
#pragma comment(linker, "/include:?STRICT@ParamSpec@caffe@@2W4ParamSpec_DimCheckMode@2@B")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??$_Unchecked@PAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@PAV12@@Z")
#pragma comment(linker, "/include:?_Xlen@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@IBEXXZ")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:?kMarginFieldNumber@ContrastiveLossParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Net@M@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@V?$Net@M@caffe@@@1@PAV?$Net@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$Blob@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@MH@std@@@std@@@std@@QAEPAU?$pair@MH@2@I@Z")
#pragma comment(linker, "/include:??4?$vector@NV?$allocator@N@std@@@std@@QAEAAV01@$$QAV01@@Z")
#pragma comment(linker, "/include:??1?$map@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_7PythonParameter@caffe@@6B@")
#pragma comment(linker, "/include:?Forward_gpu@?$ReductionLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$PReLULayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R3PowerParameter@caffe@@8")
#pragma comment(linker, "/include:?has_new_num@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?concat_param@V1LayerParameter@caffe@@QBEABVConcatParameter@2@XZ")
#pragma comment(linker, "/include:??$get_smallest_value@N@detail@math@boost@@YANABU?$bool_@$00@mpl@2@@Z")
#pragma comment(linker, "/include:??0?$exponential_distribution@N@random@boost@@QAE@N@Z")
#pragma comment(linker, "/include:??_C@_0FG@GCAAKOOO@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$Net@N@caffe@@@boost@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBHH@1@XZ")
#pragma comment(linker, "/include:??$_Ptr_cat@V?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@std@@PAM@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@0@AAPAM@Z")
#pragma comment(linker, "/include:??0?$AbsValLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??$throw_exception@Ubad_month@gregorian@boost@@@boost@@YAXABUbad_month@gregorian@0@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@SAIABV?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@2@@Z")
#pragma comment(linker, "/include:??$fill@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_N@std@@YAXV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@0AB_N@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$InfogainLossLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_C@_0FF@GBLKFBDE@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?clear_has_mirror@WindowDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Move@AAPAV?$ConcatLayer@N@caffe@@@std@@YA$$QAPAV?$ConcatLayer@N@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??$bind@XXVInternalThread@caffe@@PAV12@@boost@@YA?AV?$bind_t@XV?$mf0@XVInternalThread@caffe@@@_mfi@boost@@V?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@3@@_bi@0@U?$type@X@0@P8InternalThread@caffe@@AEXXZPAV45@@Z")
#pragma comment(linker, "/include:??$?8HV?$allocator@H@std@@@std@@YA_NABV?$vector@HV?$allocator@H@std@@@0@0@Z")
#pragma comment(linker, "/include:??$Creator_ImageDataLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$MultinomialLogisticLossLayer@N@caffe@@@boost@@YAXPAV?$MultinomialLogisticLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?pool@SPPParameter@caffe@@QBE?AW4SPPParameter_PoolMethod@2@XZ")
#pragma comment(linker, "/include:?sumsq_diff@?$Blob@M@caffe@@QBEMXZ")
#pragma comment(linker, "/include:??1?$SoftmaxWithLossLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?DataLayerSetUp@?$MemoryDataLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?type@?$ContrastiveLossLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??_GBlobProtoVector@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_C@_0BH@KFOPOCNJ@datum_height?5?$DN?$DN?5height?$AA@")
#pragma comment(linker, "/include:??3@YAXPAX0@Z")
#pragma comment(linker, "/include:??_R4?$NesterovSolver@N@caffe@@6B@")
#pragma comment(linker, "/include:?has_hinge_loss_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@2@@Z")
#pragma comment(linker, "/include:?MergeFrom@ExpParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?set_scale@TransformationParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??_R4?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@6B@")
#pragma comment(linker, "/include:?_Lrotate@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$Filler@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$InfogainLossLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:?add_ref@?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@AAEXXZ")
#pragma comment(linker, "/include:?ByteSize@PythonParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@BlobProto@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?depth@Mat@cv@@QBEHXZ")
#pragma comment(linker, "/include:??$Get@VTypeHandler@?$RepeatedPtrField@VNetState@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IBEABVNetState@caffe@@H@Z")
#pragma comment(linker, "/include:??_7?$ConstantFiller@M@caffe@@6B@")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?set_batch_size@ImageDataParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??$addressof@QAV?$Blob@N@caffe@@@std@@YAPBQAV?$Blob@N@caffe@@ABQAV12@@Z")
#pragma comment(linker, "/include:??0bad_day_of_month@gregorian@boost@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@Vthread@boost@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VNetState@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVNetState@caffe@@PAE@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:??0exception@boost@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??$distance@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z")
#pragma comment(linker, "/include:??$?0$$QAU?$pair@HH@std@@PAPAX@?$tuple@$$QAU?$pair@HH@std@@@std@@QAE@$$QAV01@@Z")
#pragma comment(linker, "/include:?Merge@?$GenericTypeHandler@VV1LayerParameter@caffe@@@internal@protobuf@google@@SAXABVV1LayerParameter@caffe@@PAV56@@Z")
#pragma comment(linker, "/include:__TI7?AV?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:?gcd_d1_d2@?$is_evenly_divisible_by@V?$ratio@$00$0JIJGIA@@boost@@V12@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:?kSnapshotDiffFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:?_Grow_to@?$vector@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@2@@std@@IBEII@Z")
#pragma comment(linker, "/include:?has_slice_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ")
#pragma comment(linker, "/include:??_R4?$MVNLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?type@?$Layer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?kNameFieldNumber@OneofDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?EqualNumBottomTopBlobs@?$Layer@N@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?SetCachedSize@LRNParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?sign@?$fp_traits_non_native@NUdouble_precision@detail@math@boost@@@detail@math@boost@@2_KB")
#pragma comment(linker, "/include:?clear_buffer@?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@QAEXXZ")
#pragma comment(linker, "/include:?mutable_unknown_fields@PowerParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R3?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??_C@_0CC@CLKBDMPI@Skipping?5parameter?5initializatio@")
#pragma comment(linker, "/include:??$_Insert_hint@AAU?$pair@$$CBU?$pair@HH@std@@M@std@@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@1@AAU?$pair@$$CBU?$pair@HH@std@@M@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@1@@Z")
#pragma comment(linker, "/include:?New@ContrastiveLossParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:?Solve@?$Solver@N@caffe@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:??$_Rechecked@PADPAD@std@@YAAAPADAAPADPAD@Z")
#pragma comment(linker, "/include:??$put_last@DU?$char_traits@D@std@@PBD@detail@io@boost@@YAXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@ABQBD@Z")
#pragma comment(linker, "/include:??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@I@Z")
#pragma comment(linker, "/include:??$_Move@AAPAV?$EltwiseLayer@M@caffe@@@std@@YA$$QAPAV?$EltwiseLayer@M@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$FlattenLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?type@?$InnerProductLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$DropoutLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_R4?$InnerProductLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$AccuracyLayer@N@caffe@@@detail@boost@@QAE@PAV?$AccuracyLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?get_time_rep@?$counted_time_system@U?$counted_time_rep@Vmillisec_posix_time_system_config@posix_time@boost@@@date_time@boost@@@date_time@boost@@SA?AU?$counted_time_rep@Vmillisec_posix_time_system_config@posix_time@boost@@@23@ABVdate@gregorian@3@ABVtime_duration@posix_time@3@W4dst_flags@23@@Z")
#pragma comment(linker, "/include:?SetCachedSize@MVNParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?max@?$constrained_value@V?$simple_exception_policy@G$0FHI@$0CHBA@Ubad_year@gregorian@boost@@@CV@boost@@@CV@boost@@SAGXZ")
#pragma comment(linker, "/include:??_R2?$FilterLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_C@_0BK@OENIPMNA@blob?5size?5exceeds?5INT_MAX?$AA@")
#pragma comment(linker, "/include:??1?$_Tree_buy@U?$pair@$$CBHH@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?kBackendFieldNumber@DataParameter@caffe@@2HB")
#pragma comment(linker, "/include:??1bad_exception_@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:__real@bf000000")
#pragma comment(linker, "/include:??$swap@I@std@@YAXAAI0@Z")
#pragma comment(linker, "/include:??_C@_0BF@ONNNNDJE@float_next?$DM?$CF1?$CF?$DO?$CI?$CF1?$CF?$CJ?$AA@")
#pragma comment(linker, "/include:?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?StateMeetsRule@?$Net@M@caffe@@SA_NABVNetState@2@ABVNetStateRule@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?DimCheckMode_ARRAYSIZE@ParamSpec@caffe@@2HB")
#pragma comment(linker, "/include:?capacity@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?New@SoftmaxParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:?_Xlen@?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@IBEXXZ")
#pragma comment(linker, "/include:??_C@_01IHBHIGKO@?0?$AA@")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@HH@std@@@std@@@std@@QAEXPAU?$pair@HH@2@I@Z")
#pragma comment(linker, "/include:??$construct@NN@?$_Wrap_alloc@V?$allocator@N@std@@@std@@QAEXPAN$$QAN@Z")
#pragma comment(linker, "/include:??$min@H@std@@YAABHABH0@Z")
#pragma comment(linker, "/include:?kHasNoDefaultInstanceField@GeneratedMessageReflection@internal@protobuf@google@@0HB")
#pragma comment(linker, "/include:?V1LayerParameter_LayerType_descriptor_@?A0x5e4fc710@caffe@@3PBVEnumDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??1?$BNLLLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?set_has_axis@InnerProductParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R3?$ReductionLayer@M@caffe@@8")
#pragma comment(linker, "/include:?set_has_hdf5_output_param@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??_C@_0BG@HALELBBG@?5?5?5?5with?5loss?5weight?5?$AA@")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$EltwiseLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?set_norm_region@LRNParameter@caffe@@QAEXW4LRNParameter_NormRegion@2@@Z")
#pragma comment(linker, "/include:??_C@_0BN@BPHMGIHI@Inf?5result?3?5log?$CIbase?$CJ?5?$DN?5log?$CI?$AA@")
#pragma comment(linker, "/include:?set_weight_decay@SolverParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??R?$ElementCopier@M$00@internal@protobuf@google@@QAEXPAMPBMH@Z")
#pragma comment(linker, "/include:?kEncodedFieldNumber@Datum@caffe@@2HB")
#pragma comment(linker, "/include:??$_Ptr_cat@HH@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBHPAH@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$ReshapeLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?Advance@CodedOutputStream@io@protobuf@google@@AAEXH@Z")
#pragma comment(linker, "/include:??_R0?AV?$ThresholdLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?kNumFieldNumber@DummyDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R3runtime_error@std@@8")
#pragma comment(linker, "/include:??$_Insert_at@AAU?$pair@$$CBHH@std@@PAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@1@AAU?$pair@$$CBHH@1@1@Z")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VHDF5DataParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVHDF5DataParameter@caffe@@@Z")
#pragma comment(linker, "/include:?DecodeDatum@caffe@@YA_NPAVDatum@1@_N@Z")
#pragma comment(linker, "/include:??_G?$EuclideanLossLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$_Kfn@$$CBHH@?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@SAABHABU?$pair@$$CBHH@1@@Z")
#pragma comment(linker, "/include:?get@?$shared_ptr@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@boost@@QBEPAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@2@XZ")
#pragma comment(linker, "/include:?set_has_snapshot@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$destroy@V?$vector@_NV?$allocator@_N@std@@@std@@@?$allocator_traits@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@1@PAV?$vector@_NV?$allocator@_N@std@@@1@@Z")
#pragma comment(linker, "/include:?has_stride@PoolingParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R2?$InnerProductLayer@N@caffe@@8")
#pragma comment(linker, "/include:?table_y@?$normal_table@N@detail@random@boost@@2QBNB")
#pragma comment(linker, "/include:??$Check_EQImpl@HI@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABHABIPBD@Z")
#pragma comment(linker, "/include:??$reset@V?$ConcatLayer@N@caffe@@@?$shared_ptr@V?$ConcatLayer@N@caffe@@@boost@@QAEXPAV?$ConcatLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?MergeFrom@?$RepeatedPtrField@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@protobuf@google@@QAEXABV123@@Z")
#pragma comment(linker, "/include:?CopyFrom@SolverState@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$_Allocate@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@YAPAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@IPAPAV10@@Z")
#pragma comment(linker, "/include:?MergeFrom@TransformationParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?_Reallocate@?$vector@PAV?$FlattenLayer@N@caffe@@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??0exception_ptr@boost@@QAE@ABV?$shared_ptr@$$CBVclone_base@exception_detail@boost@@@1@@Z")
#pragma comment(linker, "/include:??0?$Size_@H@cv@@QAE@XZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$DeconvolutionLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$SigmoidLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?kTanhParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:__real@bfe0000000000000")
#pragma comment(linker, "/include:?_Lrotate@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@2@@Z")
#pragma comment(linker, "/include:?descriptor@FlattenParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$_Buynode_if_nil@AAU?$pair@$$CBU?$pair@HH@std@@U12@@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@1@PAU21@AAU?$pair@$$CBU?$pair@HH@std@@U12@@1@@Z")
#pragma comment(linker, "/include:??_R2?$ConcatLayer@M@caffe@@8")
#pragma comment(linker, "/include:?set_has_snapshot_prefix@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$apply@I@?$integer_log2_impl@$03@detail@random@boost@@SAHIH@Z")
#pragma comment(linker, "/include:??0init@?$min_shift_initializer@N@detail@math@boost@@QAE@XZ")
#pragma comment(linker, "/include:??$MergeFromInnerLoop@VTypeHandler@?$RepeatedPtrField@VLayerParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@AAEXPAPAX0HH@Z")
#pragma comment(linker, "/include:?vdMul@@YAXHPBN0PAN@Z")
#pragma comment(linker, "/include:?ReductionParameter_ReductionOp_descriptor@caffe@@YAPBVEnumDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_C@_0BO@HACBOJDH@param_?4mean_value_size?$CI?$CJ?5?$DN?$DN?50?$AA@")
#pragma comment(linker, "/include:__CTA8?AV?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:??0EltwiseParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?LRNParameter_NormRegion_descriptor_@?A0x5e4fc710@caffe@@3PBVEnumDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??_E?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@WCM@AEPAXI@Z")
#pragma comment(linker, "/include:??_R4?$PositiveUnitballFiller@N@caffe@@6B@")
#pragma comment(linker, "/include:?sumsq_data@?$Blob@I@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??1?$vector@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@V?$allocator@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?value@?$int_@$05@mpl@boost@@2HB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@CPUTimer@caffe@@8")
#pragma comment(linker, "/include:?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?Swap@LRNParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??_R0?AV?$PowerLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z")
#pragma comment(linker, "/include:?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??$max@H@std@@YAABHABH0@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$SliceLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?_Grow_to@?$vector@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@IBEII@Z")
#pragma comment(linker, "/include:??0?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?set_has_num_output@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?has_data_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?scale@LogParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?gInstantiationGuardEltwiseLayer@caffe@@3DA")
#pragma comment(linker, "/include:?kSpanFieldNumber@SourceCodeInfo_Location@protobuf@google@@2HB")
#pragma comment(linker, "/include:??R?$ElementCopier@_J$0A@@internal@protobuf@google@@QAEXPA_JPB_JH@Z")
#pragma comment(linker, "/include:?unknown_fields@V1LayerParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$_Push_heap@PAU?$pair@NH@std@@HU12@U?$greater@U?$pair@NH@std@@@2@@std@@YAXPAU?$pair@NH@0@HH$$QAU10@U?$greater@U?$pair@NH@std@@@0@@Z")
#pragma comment(linker, "/include:?value@?$ice_not@$0A@@type_traits@boost@@2_NB")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@@std@@YAXPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@0AAU?$_Wrap_alloc@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?Swap@BlobProtoVector@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:?set_has_pad_w@PoolingParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$NeuronLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_7?$MultinomialLogisticLossLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?FillerParameter_VarianceNorm_IsValid@caffe@@YA_NH@Z")
#pragma comment(linker, "/include:?unknown_fields@NetState@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?Backward_cpu@?$DeconvolutionLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?set_has_new_height@ImageDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$Own@VDummyDataParameter@caffe@@@Arena@protobuf@google@@QAEXPAVDummyDataParameter@caffe@@@Z")
#pragma comment(linker, "/include:?Reshape@?$BaseConvolutionLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$PowerLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?has_shift@LogParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?InitAsDefaultInstance@FillerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$PtrValue@VArena@protobuf@google@@@InternalMetadataWithArena@internal@protobuf@google@@ABEPAVArena@23@XZ")
#pragma comment(linker, "/include:??_GSliceParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_C@_08KFDOCAEB@constant?$AA@")
#pragma comment(linker, "/include:??_R4?$MultinomialLogisticLossLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?MergeFrom@InfogainLossParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?significand@?$fp_traits_non_native@OUdouble_precision@detail@math@boost@@@detail@math@boost@@2_KB")
#pragma comment(linker, "/include:?allocate@?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@QAEPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@2@I@Z")
#pragma comment(linker, "/include:??$?0V?$InnerProductLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$InnerProductLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?capacity@?$vector@PAV?$FlattenLayer@N@caffe@@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?set_has_bias_term@InnerProductParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$swap@PAV?$vector@VUnknownField@protobuf@google@@V?$allocator@VUnknownField@protobuf@google@@@std@@@std@@@std@@YAXAAPAV?$vector@VUnknownField@protobuf@google@@V?$allocator@VUnknownField@protobuf@google@@@std@@@0@0@Z")
#pragma comment(linker, "/include:??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z")
#pragma comment(linker, "/include:?kBaseFieldNumber@ExpParameter@caffe@@2HB")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??$_Uninit_move@NNN@std@@YAPANPAN00AAU?$_Wrap_alloc@V?$allocator@N@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?set_pad_w@ConvolutionParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?traversal_i@?$pure_iterator_traversal@PBE@iterator_range_detail@boost@@2IB")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$EuclideanLossLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$DataLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?kDeprecatedFieldNumber@ServiceOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:?is_signed@?$numeric_limits@C@std@@2_NB")
#pragma comment(linker, "/include:__CT??_R0?AVbad_exception@std@@@8??0bad_exception@std@@QAE@ABV01@@Z1220")
#pragma comment(linker, "/include:??_7Datum@caffe@@6B@")
#pragma comment(linker, "/include:??1?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$MVNLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?ArgMaxParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??_C@_0BH@NAFEJDAL@img_width?5?$DO?$DN?5crop_size?$AA@")
#pragma comment(linker, "/include:?Int64Size@WireFormatLite@internal@protobuf@google@@SAH_J@Z")
#pragma comment(linker, "/include:?IsInitialized@SPPParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?has_denorm_loss@_Num_base@std@@2_NB")
#pragma comment(linker, "/include:??$wrap_isdigit@DV?$ctype@D@std@@@detail@io@boost@@YA_NABV?$ctype@D@std@@D@Z")
#pragma comment(linker, "/include:?set_has_kernelsize@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@QAEPAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?max_size@?$vector@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?vsDiv@@YAXHPBM0PAM@Z")
#pragma comment(linker, "/include:?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ")
#pragma comment(linker, "/include:??_R4?$MemoryDataLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?type@?$ThresholdLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?ReshapeLike@?$Blob@H@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VLossParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVLossParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_R4MVNParameter@caffe@@6B@")
#pragma comment(linker, "/include:??_R2?$DataLayer@M@caffe@@8")
#pragma comment(linker, "/include:?set_has_layer@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?_Reserve@?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??_R3V1LayerParameter@caffe@@8")
#pragma comment(linker, "/include:?has_snapshot_prefix@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?mutable_flatten_param@LayerParameter@caffe@@QAEPAVFlattenParameter@2@XZ")
#pragma comment(linker, "/include:??$?0V?$AbsValLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$AbsValLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?max@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@SAIXZ")
#pragma comment(linker, "/include:??0?$_Tree_comp@$0A@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@U?$pair@HH@std@@@1@ABV?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@1@@Z")
#pragma comment(linker, "/include:?_Tidy@?$vector@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@V?$allocator@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$AbsValLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$AbsValLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?SharedCtor@DropoutParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?set_has_concat_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?ByteSize@InnerProductParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??0BlobShape@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?_Pop_back_n@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$PReLULayer@N@caffe@@@boost@@YAXPAV?$PReLULayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??0?$BilinearFiller@M@caffe@@QAE@ABVFillerParameter@1@@Z")
#pragma comment(linker, "/include:??$?0VRNG@Caffe@caffe@@@shared_count@detail@boost@@QAE@PAVRNG@Caffe@caffe@@@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$ReductionLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?all@?$_Locbase@H@std@@2HB")
#pragma comment(linker, "/include:?Backward_cpu@?$EuclideanLossLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z")
#pragma comment(linker, "/include:??$_Move@AAPAVEltwiseParameter@caffe@@@std@@YA$$QAPAVEltwiseParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?unknown_fields@SolverState@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?max_size@?$allocator@D@std@@QBEIXZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@Vthread@boost@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z1220")
#pragma comment(linker, "/include:??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@1@$$QA_N@Z")
#pragma comment(linker, "/include:?size@?$RepeatedField@I@protobuf@google@@QBEHXZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$SplitLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?value@?$is_pointer_impl@H@detail@boost@@2_NB")
#pragma comment(linker, "/include:?erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:?_Reallocate@?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?find@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:?SplitLayerName@caffe@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@0H@Z")
#pragma comment(linker, "/include:?gInstantiationGuardBasePrefetchingDataLayer@caffe@@3DA")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??$caffe_cpu_sign@N@caffe@@YAXHPBNPAN@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?_Xlen@?$vector@PAV?$FlattenLayer@N@caffe@@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@IBEXXZ")
#pragma comment(linker, "/include:??$checked_delete@VDB@db@caffe@@@boost@@YAXPAVDB@db@caffe@@@Z")
#pragma comment(linker, "/include:?assign@?$optional_base@Vlocale@std@@@optional_detail@boost@@IAEXABV123@@Z")
#pragma comment(linker, "/include:?size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?mutable_unknown_fields@Datum@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:?type@?$MemoryDataLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??0bad_exception@std@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?value@?$trait_impl1@V?$basic_istream@DU?$char_traits@D@std@@@std@@_JUdont_care@has_right_shift_impl@detail@boost@@$0A@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$Creator_DeconvolutionLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$PReLULayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_C@_0GI@FMGNGHMM@Check?5failed?3?5pool_param?4has_ker@")
#pragma comment(linker, "/include:?Backward@?$Layer@N@caffe@@QAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?kOptionsFieldNumber@ServiceDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?mutable_cpu_diff@?$Blob@I@caffe@@QAEPAIXZ")
#pragma comment(linker, "/include:??_R4?$InfogainLossLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?mutable_softmax_param@LayerParameter@caffe@@QAEPAVSoftmaxParameter@2@XZ")
#pragma comment(linker, "/include:?has_cache_images@WindowDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_C@_0DC@PPAMBLMN@Unknown?5parameter?5det_fg_fractio@")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$ReLULayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?set_lr_mult@ParamSpec@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@MVNParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$ThresholdLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$SigmoidCrossEntropyLossLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_R4?$EltwiseLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?SIGN_N@?$ratio@$0CHBA@$00@boost@@0_JB")
#pragma comment(linker, "/include:?set_has_iter@SolverState@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$?6DU?$char_traits@D@std@@U?$_Smanip@_J@1@@detail@io@boost@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV34@ABU?$group1@U?$_Smanip@_J@std@@@012@@Z")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?end@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??_R3?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??_7HingeLossParameter@caffe@@6B@")
#pragma comment(linker, "/include:?kMinLevelFieldNumber@NetStateRule@caffe@@2HB")
#pragma comment(linker, "/include:?SPPParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??_R2?$ImageDataLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_C@_0BG@EIDCCDCM@Number?5of?5top?5blobs?5?$CI?$AA@")
#pragma comment(linker, "/include:?unknown_fields@BlobProto@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?MVNParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$Layer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?max_size@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?diff@BlobProto@caffe@@QBEMH@Z")
#pragma comment(linker, "/include:??_C@_0CF@NDEGLDJJ@Too?5many?5params?5specified?5for?5la@")
#pragma comment(linker, "/include:?Get@?$RepeatedPtrField@VBlobProto@caffe@@@protobuf@google@@QBEABVBlobProto@caffe@@H@Z")
#pragma comment(linker, "/include:?_Tidy@?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:??_E?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@WBE@AEPAXI@Z")
#pragma comment(linker, "/include:__TI6?AV?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:??0?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?set_has_batchsize@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?New@NetState@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??1?$_Tree_comp@$0A@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?_Tidy@?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z")
#pragma comment(linker, "/include:??0?$vector@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z")
#pragma comment(linker, "/include:??_C@_0DI@CBADDJKC@Stride?5is?5stride?5OR?5stride_h?5and@")
#pragma comment(linker, "/include:??$_Pow_int@M@@YAMMH@Z")
#pragma comment(linker, "/include:?begin@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?capacity@?$vector@V?$shared_ptr@V?$Net@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:__real@41efffffffe00000")
#pragma comment(linker, "/include:?gInstantiationGuardSigmoidCrossEntropyLossLayer@caffe@@3DA")
#pragma comment(linker, "/include:?GetMetadata@ThresholdParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$ThresholdLayer@M@caffe@@8")
#pragma comment(linker, "/include:?InitAsDefaultInstance@SliceParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?messages@?$_Locbase@H@std@@2HB")
#pragma comment(linker, "/include:?set_has_delta@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?clear_blobs@LayerParameter@caffe@@QAEXXZ")
#pragma comment(linker, "/include:??_G?$DataTransformer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?value@?$trait_impl1@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@FUdont_care@has_right_shift_impl@detail@boost@@$0A@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$?0V?$AbsValLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$AbsValLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_C@_0FB@KGPPMKON@Check?5failed?3?5mean_values_?4size?$CI@")
#pragma comment(linker, "/include:??$_Unchecked@PAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@YAPAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@PAPAV10@@Z")
#pragma comment(linker, "/include:?diff_size@BlobProto@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?ByteSize@ReshapeParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?SharedDtor@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?set_has_top_k@ArgMaxParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$uniform_01@NN@random@boost@@QAE@XZ")
#pragma comment(linker, "/include:?_Reallocate@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??$Own@VMemoryDataParameter@caffe@@@Arena@protobuf@google@@QAEXPAVMemoryDataParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0EI@EDJLBLOC@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?size@?$RepeatedPtrField@VV1LayerParameter@caffe@@@protobuf@google@@QBEHXZ")
#pragma comment(linker, "/include:?InternalThreadEntry@?$WindowDataLayer@N@caffe@@MAEXXZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAHPAHU?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAPAHPAH00AAU?$_Wrap_alloc@V?$allocator@H@std@@@0@@Z")
#pragma comment(linker, "/include:__real@3bc79ca100000000")
#pragma comment(linker, "/include:?kPtrValueMask@InternalMetadataWithArena@internal@protobuf@google@@0HB")
#pragma comment(linker, "/include:?has_concat_dim@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??0?$map@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?Backward_cpu@?$FlattenLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?_Freenode0@?$_Tree_buy@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??$Create@VBlobShape@caffe@@@Arena@protobuf@google@@SAPAVBlobShape@caffe@@PAV012@@Z")
#pragma comment(linker, "/include:??_R3SolverState@caffe@@8")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$Filler@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?default_instance@PythonParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?CopyFrom@DataParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?num_axes@?$Blob@M@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$EltwiseLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IAEXPAM0@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$_Iosb@H@std@@8")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$ArgMaxLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??0?$group1@U?$_Smanip@_J@std@@@detail@io@boost@@QAE@U?$_Smanip@_J@std@@@Z")
#pragma comment(linker, "/include:?MergeFrom@ParamSpec@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??0?$vector@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$AccuracyLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??_7?$LossLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??_C@_0BJ@MPBOBEDH@host?5allocation?5of?5size?5?$AA@")
#pragma comment(linker, "/include:??_R0?AV?$SoftmaxWithLossLayer@M@caffe@@@8")
#pragma comment(linker, "/include:??$Create@VLayerParameter@caffe@@@Arena@protobuf@google@@SAPAVLayerParameter@caffe@@PAV012@@Z")
#pragma comment(linker, "/include:??0?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@QAE@D@Z")
#pragma comment(linker, "/include:??_GConvolutionParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?allocate@?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@QAEPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@2@I@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$LogLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??0?$DataTransformer@M@caffe@@QAE@ABVTransformationParameter@1@W4Phase@1@@Z")
#pragma comment(linker, "/include:?insert@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@_N@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:?kMemoryDataParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?construct@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?kNestedTypeFieldNumber@DescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??$swap@H@std@@YAXAAH0@Z")
#pragma comment(linker, "/include:??_C@_0CM@EOBPOIAK@Creating?5training?5net?5from?5train@")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@$$$V@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?NewFromPrototype@?$GenericTypeHandler@VNetState@caffe@@@internal@protobuf@google@@SAPAVNetState@caffe@@PBV56@PAVArena@34@@Z")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@IBEXPAV?$vector@MV?$allocator@M@std@@@2@0@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@BlobProto@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??0bad_alloc@std@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@HDF5OutputParameter@caffe@@8")
#pragma comment(linker, "/include:??_7?$BaseConvolutionLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?LayerSetUp@?$PReLULayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$EltwiseLayer@N@caffe@@@boost@@YAXPAV?$EltwiseLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?set_has_base@LogParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$Own@VLayerParameter@caffe@@@Arena@protobuf@google@@QAEXPAVLayerParameter@caffe@@@Z")
#pragma comment(linker, "/include:??$ReadPackedPrimitiveNoInline@_N$07@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAV?$RepeatedField@_N@23@@Z")
#pragma comment(linker, "/include:??_R4?$DataTransformer@M@caffe@@6B@")
#pragma comment(linker, "/include:??$_Ptr_cat@PBIV?$back_insert_iterator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPBIAAV?$back_insert_iterator@V?$vector@HV?$allocator@H@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??$_Uninit_move@PAPAV?$Blob@N@caffe@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@YAPAPAV?$Blob@N@caffe@@PAPAV12@00AAU?$_Wrap_alloc@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$SoftmaxLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?default_instance@ParamSpec@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??_7ParamSpec@caffe@@6B@")
#pragma comment(linker, "/include:??1?$PositiveUnitballFiller@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??1?$UniformFiller@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R2?$SliceLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_C@_0BA@MDMODCDE@Could?5not?5load?5?$AA@")
#pragma comment(linker, "/include:??_B?1???$get_smallest_value@M@detail@math@boost@@YAMABU?$bool_@$00@mpl@2@@Z@51")
#pragma comment(linker, "/include:?data_at@?$Blob@I@caffe@@QBEIABV?$vector@HV?$allocator@H@std@@@std@@@Z")
#pragma comment(linker, "/include:?kUnknownFieldSetInMetadata@GeneratedMessageReflection@internal@protobuf@google@@2HB")
#pragma comment(linker, "/include:??4?$pair@HH@std@@QAEAAU01@$$QAU01@@Z")
#pragma comment(linker, "/include:?set_source@ImageDataParameter@caffe@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?kInnerProductParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$addressof@PAV?$Blob@N@caffe@@@std@@YAPAPAV?$Blob@N@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$PoolingLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?Backward_cpu@?$MVNLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_G?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@I@std@@QBEIXZ")
#pragma comment(linker, "/include:??_G?$EltwiseLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?has_bias_filler@InnerProductParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?_Tidy@?$vector@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@IAEXXZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?MergeFrom@PReLUParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$ReLULayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$PowerLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$PowerLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PAV?$basic_istream@_WU?$char_traits@_W@std@@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?Clear@BlobShape@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??0?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@QAE@$$QAV01@@Z")
#pragma comment(linker, "/include:?MergeFrom@BlobProto@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?value@?$is_base_of_imp@Vexception@std@@Ubad_month@gregorian@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??1thread_exception@boost@@UAE@XZ")
#pragma comment(linker, "/include:?kExcludeFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$ExpLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??1MVNParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R3?$Layer@M@caffe@@8")
#pragma comment(linker, "/include:?ByteSize@HingeLossParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$SilenceLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??$_Move@AAPAV?$PowerLayer@M@caffe@@@std@@YA$$QAPAV?$PowerLayer@M@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$ReductionLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@V?$shared_ptr@V?$Net@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$DeconvolutionLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??F?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??$_Val_type@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@YAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@PAV10@@Z")
#pragma comment(linker, "/include:?descriptor@DummyDataParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@bad_exception@std@@8")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$PReLULayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_E?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@WCM@AEPAXI@Z")
#pragma comment(linker, "/include:?set_stride@V0LayerParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:??_C@_0FM@GCKNCAOO@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?min_exponent10@?$numeric_limits@O@std@@2HB")
#pragma comment(linker, "/include:?shape_string@?$Blob@N@caffe@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??$reset@V?$Layer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAEXPAV?$Layer@M@caffe@@@Z")
#pragma comment(linker, "/include:?kNameFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$forward@ABV?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@YAABV?$shared_ptr@V?$Blob@N@caffe@@@boost@@ABV12@@Z")
#pragma comment(linker, "/include:?ForwardDebugInfo@?$Net@N@caffe@@IAEXH@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@ReductionParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?kBatchSizeFieldNumber@ImageDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_G?$shared_ptr@V?$Filler@N@caffe@@@boost@@QAEPAXI@Z")
#pragma comment(linker, "/include:?value@?$br_mul@$00$0CHBA@@ratio_detail@boost@@2_JB")
#pragma comment(linker, "/include:??0NetStateRule@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??$Own@VTanHParameter@caffe@@@Arena@protobuf@google@@QAEXPAVTanHParameter@caffe@@@Z")
#pragma comment(linker, "/include:?channels@?$Blob@M@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?set_has_eltwise_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?Swap@SigmoidParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:?sumsq_data@?$Blob@M@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?GetMetadata@ContrastiveLossParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$AccuracyLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??AMStep@Mat@cv@@QAEAAIH@Z")
#pragma comment(linker, "/include:?is_color@ImageDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?Rand@?$DataTransformer@M@caffe@@MAEHH@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$SliceLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z")
#pragma comment(linker, "/include:?is_specialized@_Num_base@std@@2_NB")
#pragma comment(linker, "/include:?mutable_blobs_lr@V1LayerParameter@caffe@@QAEPAV?$RepeatedField@M@protobuf@google@@XZ")
#pragma comment(linker, "/include:?value@?$is_recursive_mutex_sur_parolle@Vrecursive_timed_mutex@boost@@@sync@boost@@2_NB")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@VDB@db@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?set_iter_size@SolverParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?GCD@?$ratio@$0GE@$00@boost@@0_JB")
#pragma comment(linker, "/include:??1too_many_args@io@boost@@UAE@XZ")
#pragma comment(linker, "/include:?ForwardDebugInfo@?$Net@M@caffe@@IAEXH@Z")
#pragma comment(linker, "/include:??_R4?$DataLayer@M@caffe@@6B?$BaseDataLayer@M@1@@")
#pragma comment(linker, "/include:??_C@_03MHLONNLM@?5?$DN?5?$AA@")
#pragma comment(linker, "/include:??$?APAVInternalThread@caffe@@@list0@_bi@boost@@QBEAAPAVInternalThread@caffe@@AAV?$value@PAVInternalThread@caffe@@@12@@Z")
#pragma comment(linker, "/include:?InternalSwap@ArgMaxParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?value@?$integral_c@I$03@mpl@boost@@2IB")
#pragma comment(linker, "/include:?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??$addressof@$$CBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@YAPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@0@ABU10@@Z")
#pragma comment(linker, "/include:?has_pooling_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?width@?$Blob@M@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z")
#pragma comment(linker, "/include:??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@$$QAH@2@V?$tuple@$$$V@2@@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAH@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??_7?$SigmoidLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$DummyDataLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:__CT??_R0?AVtoo_many_args@io@boost@@@8??0too_many_args@io@boost@@QAE@ABV012@@Z20")
#pragma comment(linker, "/include:??$?0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?capacity@?$vector@IV?$allocator@_N@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??0?$group1@U?$group2@U?$_Smanip@_J@std@@ABM@detail@io@boost@@@detail@io@boost@@QAE@U?$group2@U?$_Smanip@_J@std@@ABM@123@@Z")
#pragma comment(linker, "/include:??_C@_0CA@HLBLCOKL@img_width?5?$DN?$DN?5data_mean_?4width?$CI?$CJ?$AA@")
#pragma comment(linker, "/include:?file_name@HDF5OutputParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??_R2LRNParameter@caffe@@8")
#pragma comment(linker, "/include:_sqrtf")
#pragma comment(linker, "/include:?power_param@V1LayerParameter@caffe@@QBEABVPowerParameter@2@XZ")
#pragma comment(linker, "/include:?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ")
#pragma comment(linker, "/include:??_C@_0BF@LPAJOKKI@Unknown?5layer?5type?3?5?$AA@")
#pragma comment(linker, "/include:??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@")
#pragma comment(linker, "/include:??$_Insert_at@AAU?$pair@$$CBU?$pair@HH@std@@H@std@@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@1@AAU?$pair@$$CBU?$pair@HH@std@@H@1@1@Z")
#pragma comment(linker, "/include:??0?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QAE@PAIPAU_Container_base0@1@@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VPythonParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVPythonParameter@caffe@@@Z")
#pragma comment(linker, "/include:?end@?$vector@MV?$allocator@M@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??$construct@PAV?$Blob@N@caffe@@ABQAV12@@?$allocator_traits@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@SAXAAV?$allocator@PAV?$Blob@N@caffe@@@1@PAPAV?$Blob@N@caffe@@ABQAV34@@Z")
#pragma comment(linker, "/include:?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B")
#pragma comment(linker, "/include:??_C@_0N@BEKAEAEK@softmax_loss?$AA@")
#pragma comment(linker, "/include:??_C@_0BD@LNJDNCBE@V1LayerParameter?3?5?$AA@")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBU?$pair@HH@std@@U12@@1@@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@@std@@YAXPAPAV?$FlattenLayer@N@caffe@@0AAU?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@0@@Z")
#pragma comment(linker, "/include:?SharedCtor@InnerProductParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$HingeLossLayer@M@caffe@@@detail@boost@@QAE@PAV?$HingeLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$SigmoidLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_C@_04OHPAJBOO@?5?$DM?9?5?$AA@")
#pragma comment(linker, "/include:?unknown_fields@DropoutParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABH@2@V?$tuple@$$$V@2@@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABH@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?kUninterpretedOptionFieldNumber@MessageOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$FilterLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?ReadNetParamsFromBinaryFileOrDie@caffe@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVNetParameter@1@@Z")
#pragma comment(linker, "/include:??$isinf@M@@YA_NM@Z")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@$$QAV34@@Z")
#pragma comment(linker, "/include:?gcd_d1_d2@?$ratio_divide@V?$ratio@$00$0JIJGIA@@boost@@V?$ratio@$00$0DLJKMKAA@@2@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:??0?$NeuronLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HX@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@$$QAU01@@Z")
#pragma comment(linker, "/include:?layer_size@NetParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??_C@_0BK@MLABGPLD@infogain?9?$DOheight?$CI?$CJ?5?$DN?$DN?5dim?$AA@")
#pragma comment(linker, "/include:??_R2?$NesterovSolver@N@caffe@@8")
#pragma comment(linker, "/include:?backward_cpu_bias@?$BaseConvolutionLayer@M@caffe@@IAEXPAMPBM@Z")
#pragma comment(linker, "/include:??0?$RepeatedField@_J@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:??$Creator_ThresholdLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??$forward@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@YA$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@0@AAU10@@Z")
#pragma comment(linker, "/include:?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$Im2colLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@VGenerator@RNG@Caffe@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_R0?AV?$HingeLossLayer@M@caffe@@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@8")
#pragma comment(linker, "/include:?capacity@?$vector@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$caffe_rng_uniform@N@caffe@@YAXHNNPAN@Z")
#pragma comment(linker, "/include:??$?0$$QAH$$$V@?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@Upiecewise_construct_t@1@V?$tuple@$$QAH@1@V?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$FilterLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$ConcatLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$SPPLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R2?$PowerLayer@M@caffe@@8")
#pragma comment(linker, "/include:?sign@?$fp_traits_non_native@OUdouble_precision@detail@math@boost@@@detail@math@boost@@2_KB")
#pragma comment(linker, "/include:?GCD@?$ratio@$00$0DOI@@boost@@0_JB")
#pragma comment(linker, "/include:??_R2?$MSRAFiller@N@caffe@@8")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$SoftmaxLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@VGenerator@RNG@Caffe@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@VLayerParameter@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?set_has_test_initialization@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R2ExpParameter@caffe@@8")
#pragma comment(linker, "/include:??$?0ABMAAHX@?$pair@MH@std@@QAE@ABMAAH@Z")
#pragma comment(linker, "/include:??R?$variate_generator@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@V?$bernoulli_distribution@M@23@@random@boost@@QAE_NXZ")
#pragma comment(linker, "/include:?UnsafeDecrementRecursionDepth@CodedInputStream@io@protobuf@google@@QAEXXZ")
#pragma comment(linker, "/include:??_R0?AV_Iostream_error_category@std@@@8")
#pragma comment(linker, "/include:?New@NetStateRule@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$NesterovSolver@N@caffe@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@InfogainLossParameter@caffe@@8")
#pragma comment(linker, "/include:?value@?$is_unsigned_imp@F@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$ExpLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_C@_0BO@FIPJNKO@Unknown?5regularization?5type?3?5?$AA@")
#pragma comment(linker, "/include:?Forward_cpu@?$MVNLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@VCursor@db@caffe@@V123@@detail@boost@@YAXPAV?$shared_ptr@VCursor@db@caffe@@@1@PAVCursor@db@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAEXPAMI@Z")
#pragma comment(linker, "/include:?_Xlen@?$vector@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@IBEXXZ")
#pragma comment(linker, "/include:?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B")
#pragma comment(linker, "/include:??0?$SplitLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??0?$WindowDataLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??_R3?$BaseDataLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_R4?$ContrastiveLossLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVHDF5DataParameter@caffe@@@internal@protobuf@google@@YAPBVHDF5DataParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:??$caffe_cpu_hamming_distance@M@caffe@@YAHHPBM0@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$BasePrefetchingDataLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?ReadLittleEndian32@CodedInputStream@io@protobuf@google@@QAE_NPAI@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$TanHLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_C@_05DFJCHPDH@input?$AA@")
#pragma comment(linker, "/include:??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ")
#pragma comment(linker, "/include:??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$ContrastiveLossLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?kBgThresholdFieldNumber@WindowDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R0?AUbad_day_of_month@gregorian@boost@@@8")
#pragma comment(linker, "/include:?resize@?$vector@V?$shared_ptr@V?$Net@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@QAEXI@Z")
#pragma comment(linker, "/include:?GetArenaNoVirtual@?$RepeatedPtrField@VParamSpec@caffe@@@protobuf@google@@IBEPAVArena@23@XZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$TanHLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??$Creator_AbsValLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?set_top_k@AccuracyParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?kRootFolderFieldNumber@WindowDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:??1?$shared_ptr@Utss_cleanup_function@detail@boost@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0CM@BJFMPEAF@LRN?5only?5supports?5odd?5values?5for@")
#pragma comment(linker, "/include:?ShareTrainedLayersWith@?$Net@N@caffe@@QAEXPBV12@@Z")
#pragma comment(linker, "/include:?kDecayMultFieldNumber@ParamSpec@caffe@@2HB")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$WindowDataLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??0?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@U?$pair@HH@std@@@1@ABV?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@1@@Z")
#pragma comment(linker, "/include:??_R2?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??$forward@AAPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@0@AAPAU10@@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VBlobShape@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVBlobShape@caffe@@PAE@Z")
#pragma comment(linker, "/include:?SUMSQ@ReductionParameter@caffe@@2W4ReductionParameter_ReductionOp@2@B")
#pragma comment(linker, "/include:?set_num_axes@ReshapeParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:??_C@_0FK@OCMPALJH@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?deallocate@?$allocator@D@std@@QAEXPADI@Z")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@V?$allocator@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@1@@Z")
#pragma comment(linker, "/include:??$?8MM@std@@YA_NABV?$allocator@M@0@0@Z")
#pragma comment(linker, "/include:??_C@_0BD@LGABMKIN@Check?5failed?3?5dim?5?$AA@")
#pragma comment(linker, "/include:??0?$Solver@N@caffe@@QAE@ABVSolverParameter@1@@Z")
#pragma comment(linker, "/include:??_R0?AVDummyDataParameter@caffe@@@8")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$Blob@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$_Uninit_copy@V?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@std@@PAMV?$allocator@M@2@@std@@YAPAMV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@0@0PAMAAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?Clear@?$GenericTypeHandler@VBlobShape@caffe@@@internal@protobuf@google@@SAXPAVBlobShape@caffe@@@Z")
#pragma comment(linker, "/include:?add_input_dim@NetParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:??$_Unchecked@PAPAV?$FlattenLayer@M@caffe@@@std@@YAPAPAV?$FlattenLayer@M@caffe@@PAPAV12@@Z")
#pragma comment(linker, "/include:??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:?SharedDtor@ParamSpec@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Pop_heap@PAU?$pair@NH@std@@U?$greater@U?$pair@NH@std@@@2@@std@@YAXPAU?$pair@NH@0@0U?$greater@U?$pair@NH@std@@@0@@Z")
#pragma comment(linker, "/include:?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:??$?0PAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@VNo_Op@?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@12@@shared_count@detail@boost@@QAE@PAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@2@VNo_Op@?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@42@@Z")
#pragma comment(linker, "/include:??$raise_domain_error@N@detail@policies@math@boost@@YANPBD0ABNABU?$domain_error@$0A@@123@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_pd@PAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@VNo_Op@?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@23@@detail@boost@@6B@")
#pragma comment(linker, "/include:?InitAsDefaultInstance@HingeLossParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@VCursor@db@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$_Insert_nohint@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@1@@Z")
#pragma comment(linker, "/include:?is_not_a_number@?$int_adapter@_J@date_time@boost@@SA_N_J@Z")
#pragma comment(linker, "/include:?WriteTagToArray@CodedOutputStream@io@protobuf@google@@SAPAEIPAE@Z")
#pragma comment(linker, "/include:?BytesSize@WireFormatLite@internal@protobuf@google@@SAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:??_R0?AV?$SoftmaxWithLossLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??_GPowerParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?_Kfn@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z")
#pragma comment(linker, "/include:??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@ABU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?value@?$integral_constant@I$07@std@@2IB")
#pragma comment(linker, "/include:??_R0?AV?$ReshapeLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?value@error_code@std@@QBEHXZ")
#pragma comment(linker, "/include:?is_integral@?$integer_traits_base@_J$0?IAAAAAAAAAAAAAAA@$0HPPPPPPPPPPPPPPP@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R0?AV?$Filler@M@caffe@@@8")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@1@AAPAU31@@Z")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_07LEEOKFFJ@_split_?$AA@")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@@std@@YAPAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:??0?$EltwiseLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?value@?$is_function_impl@V?$nullary_function@$$A6AXXZ@detail@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?unknown_fields@PReLUParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_C@_0CE@FBJAFPKL@boost?5thread?3?5trying?5joining?5its@")
#pragma comment(linker, "/include:?has_kernel_w@PoolingParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?MergeFrom@ArgMaxParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?deallocate@?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@QAEXPAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@2@I@Z")
#pragma comment(linker, "/include:??$Check_EQImpl@II@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI0PBD@Z")
#pragma comment(linker, "/include:?ParamSpec_DimCheckMode_descriptor_@?A0x5e4fc710@caffe@@3PBVEnumDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@@std@@SAIABV?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@2@@Z")
#pragma comment(linker, "/include:?SharedCtor@FillerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z")
#pragma comment(linker, "/include:??$?0V?$SoftmaxLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$SoftmaxLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??1ReshapeParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ")
#pragma comment(linker, "/include:?InitRand@?$DataTransformer@M@caffe@@QAEXXZ")
#pragma comment(linker, "/include:?kInfogainLossParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$construct@U?$pair@NH@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@NH@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@NH@std@@@1@PAU?$pair@NH@1@$$QAU31@@Z")
#pragma comment(linker, "/include:??_R3system_error@system@boost@@8")
#pragma comment(linker, "/include:??1?$InnerProductLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?value@?$ice_ne@$00$00@type_traits@boost@@2_NB")
#pragma comment(linker, "/include:?vsLn@@YAXHPBMPAM@Z")
#pragma comment(linker, "/include:?STRING_PIECE@FieldOptions@protobuf@google@@2W4FieldOptions_CType@23@B")
#pragma comment(linker, "/include:??0?$Rect_@H@cv@@QAE@HHHH@Z")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?_Key@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@IBEABU?$pair@HH@2@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_7?$NeuronLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:__real@0000000000000000")
#pragma comment(linker, "/include:?generic_category@std@@YAABVerror_category@1@XZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@@2@@std@@YAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$PowerLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?SharedCtor@LogParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?value@?$ice_and@$0A@$0A@$0A@$0A@$00$00$00@type_traits@boost@@2_NB")
#pragma comment(linker, "/include:?size@?$vector@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R4?$DeconvolutionLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@VSyncedMemory@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$OwnInternal@VAccuracyParameter@caffe@@@Arena@protobuf@google@@AAEXPAVAccuracyParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?gInstantiationGuardAccuracyLayer@caffe@@3DA")
#pragma comment(linker, "/include:?set_has_lrn_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?Clear@MemoryDataParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??$?0V?$PowerLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$PowerLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?WriteInt32NoTagToArray@WireFormatLite@internal@protobuf@google@@SAPAEHPAE@Z")
#pragma comment(linker, "/include:?value@?$is_const_rvalue_filter@F@detail@boost@@2_NB")
#pragma comment(linker, "/include:?mutable_layers@NetParameter@caffe@@QAEPAVV1LayerParameter@2@H@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@exception@boost@@8")
#pragma comment(linker, "/include:?force_color@TransformationParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$construct@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@PAV12@@?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@QAEXPAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@1@$$QAPAV21@@Z")
#pragma comment(linker, "/include:??1?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?kExtensionRangeFieldNumber@DescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_C@_09BLJOGHKD@?0?5loss?5?$DN?5?$AA@")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$EuclideanLossLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?type@?$ConcatLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?Forward_gpu@?$ConcatLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?set_has_min_level@NetStateRule@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?ForwardBackward@?$Net@M@caffe@@QAEMABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@Z")
#pragma comment(linker, "/include:?scale@PowerParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?has_engine@SigmoidParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@NH@std@@@std@@@std@@@std@@QAEAAV01@H@Z")
#pragma comment(linker, "/include:??1?$map@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?mutable_slice_param@LayerParameter@caffe@@QAEPAVSliceParameter@2@XZ")
#pragma comment(linker, "/include:??_C@_0EA@JJPPDNNK@For?5non?9square?5filters?5both?5kern@")
#pragma comment(linker, "/include:?force_instantiate@init@?$min_shift_initializer@M@detail@math@boost@@QBEXXZ")
#pragma comment(linker, "/include:??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:??$MergeFrom@VTypeHandler@?$RepeatedPtrField@VBlobProto@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXABV0123@@Z")
#pragma comment(linker, "/include:??$CreateMaybeMessage@VNetParameter@caffe@@@Arena@protobuf@google@@CAPAVNetParameter@caffe@@PAV012@ZZ")
#pragma comment(linker, "/include:??_GMessageLite@protobuf@google@@UAEPAXI@Z")
#pragma comment(linker, "/include:?WithinChannelForward@?$LRNLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?kNotStageFieldNumber@NetStateRule@caffe@@2HB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?resize@?$vector@NV?$allocator@N@std@@@std@@QAEXIABN@Z")
#pragma comment(linker, "/include:??$_Ucopy@V?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IAEPAMV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@1@0PAM@Z")
#pragma comment(linker, "/include:??0?$arg@$04@boost@@QAE@XZ")
#pragma comment(linker, "/include:?mutable_reshape_param@LayerParameter@caffe@@QAEPAVReshapeParameter@2@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$MultinomialLogisticLossLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$swap@PAVPReLUParameter@caffe@@@std@@YAXAAPAVPReLUParameter@caffe@@0@Z")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:__real@40000000")
#pragma comment(linker, "/include:?_Xlen@?$vector@IV?$allocator@_N@std@@@std@@IBEXXZ")
#pragma comment(linker, "/include:?value@?$ice_and@$00$0A@$00$00$00$00$00@type_traits@boost@@2_NB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$InfogainLossLayer@M@caffe@@8")
#pragma comment(linker, "/include:?has_num_output@InnerProductParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?const_min@?$integer_traits_base@E$0A@$0PP@@detail@boost@@2EB")
#pragma comment(linker, "/include:??_R0?AV?$MultinomialLogisticLossLayer@N@caffe@@@8")
#pragma comment(linker, "/include:?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ")
#pragma comment(linker, "/include:?Merge@?$GenericTypeHandler@VFillerParameter@caffe@@@internal@protobuf@google@@SAXABVFillerParameter@caffe@@PAV56@@Z")
#pragma comment(linker, "/include:??$OwnInternal@VReductionParameter@caffe@@@Arena@protobuf@google@@AAEXPAVReductionParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?test_initialization@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?SetCachedSize@FillerParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?BlobShape_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??$addressof@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@YAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@0@AAU10@@Z")
#pragma comment(linker, "/include:?set_power@SolverParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??_C@_0EC@IFFKKNEP@D?3?2outerLib?2boost_1_57_0?2boost?1e@")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$Filler@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?MergeFrom@LogParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?default_instance@FlattenParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@VGenerator@RNG@Caffe@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?Backward_gpu@?$ReshapeLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??0?$FlattenLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??_R3sp_counted_base@detail@boost@@8")
#pragma comment(linker, "/include:??1?$DropoutLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R4DropoutParameter@caffe@@6B@")
#pragma comment(linker, "/include:??_R3?$DataTransformer@N@caffe@@8")
#pragma comment(linker, "/include:??A?$vector@U?$pair@MH@std@@V?$allocator@U?$pair@MH@std@@@2@@std@@QAEAAU?$pair@MH@1@I@Z")
#pragma comment(linker, "/include:??_7LossParameter@caffe@@6B@")
#pragma comment(linker, "/include:??$?LPBD@?$basic_format@DU?$char_traits@D@std@@V?$allocator@D@2@@boost@@QAEAAV01@ABQBD@Z")
#pragma comment(linker, "/include:?width_size@DummyDataParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??_C@_0KM@ICHMCMBL@Check?5failed?3?5this?9?$DOlayer_param_@")
#pragma comment(linker, "/include:??$_Move@AAPAVHingeLossParameter@caffe@@@std@@YA$$QAPAVHingeLossParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?CAFFE@TanHParameter@caffe@@2W4TanHParameter_Engine@2@B")
#pragma comment(linker, "/include:??_R4?$PoolingLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??0?$tuple@ABU?$pair@HH@std@@@std@@QAE@ABU?$pair@HH@1@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$Layer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?ReadProtoFromBinaryFile@caffe@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?throw_exception_assert_compatibility@boost@@YAXABVexception@std@@@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$BNLLLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_C@_0CA@ILJFGDCC@blob?9?$DOwidth?$CI?$CJ?5?$DN?$DN?5blob?9?$DOheight?$CI?$CJ?$AA@")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$ArgMaxLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$ImageDataLayer@N@caffe@@@detail@boost@@QAE@PAV?$ImageDataLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@PAV?$FlattenLayer@N@caffe@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?IsInitialized@EltwiseParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??$ReadMessageNoVirtualNoRecursionDepth@VNetParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVNetParameter@caffe@@@Z")
#pragma comment(linker, "/include:??$OwnInternal@VHDF5OutputParameter@caffe@@@Arena@protobuf@google@@AAEXPAVHDF5OutputParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?blob_share_mode@V1LayerParameter@caffe@@QBE?AW4V1LayerParameter_DimCheckMode@2@H@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$DropoutLayer@N@caffe@@@detail@boost@@QAE@PAV?$DropoutLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?CopyFrom@PReLUParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?kNumOutputFieldNumber@ConvolutionParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$_Uninit_copy@V?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@std@@PAMU?$_Wrap_alloc@V?$allocator@M@std@@@2@@std@@YAPAMV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@0@0PAMAAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z")
#pragma comment(linker, "/include:??_C@_0BL@CLDFLOKD@Inputs?5must?5have?5same?5num?4?$AA@")
#pragma comment(linker, "/include:?_Destroy@?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@IAEXPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:??$_Rechecked@PAPAV?$FlattenLayer@N@caffe@@PAPAV12@@std@@YAAAPAPAV?$FlattenLayer@N@caffe@@AAPAPAV12@PAPAV12@@Z")
#pragma comment(linker, "/include:?descriptor@InnerProductParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?WriteBoolNoTagToArray@WireFormatLite@internal@protobuf@google@@SAPAE_NPAE@Z")
#pragma comment(linker, "/include:?EltwiseParameter_EltwiseOp_IsValid@caffe@@YA_NH@Z")
#pragma comment(linker, "/include:?CopyFrom@V1LayerParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$_Rechecked@PAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@PAV12@@std@@YAAAPAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@AAPAV12@PAV12@@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@V1LayerParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??0bad_exception@std@@QAE@PBD@Z")
#pragma comment(linker, "/include:?clear_crop_size@WindowDataParameter@caffe@@QAEXXZ")
#pragma comment(linker, "/include:??_R2?$BaseDataLayer@N@caffe@@8")
#pragma comment(linker, "/include:?FillerParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??$?0PAVcondition_variable@boost@@PAVmutex@1@X@?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@QAE@$$QAU01@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@bad_year@gregorian@boost@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$HingeLossLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$checked_delete@V?$FlattenLayer@N@caffe@@@boost@@YAXPAV?$FlattenLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$PowerLayer@M@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@VRNG@Caffe@caffe@@V123@@detail@boost@@YAXPAV?$shared_ptr@VRNG@Caffe@caffe@@@1@PAVRNG@Caffe@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?InternalSwap@Datum@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?V0LayerParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??$reset@V?$SplitLayer@N@caffe@@@?$shared_ptr@V?$SplitLayer@N@caffe@@@boost@@QAEXPAV?$SplitLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$_Uninit_fill_n@IIII@std@@YAXPAIIPBIAAU?$_Wrap_alloc@V?$allocator@I@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$_Allocate@I@std@@YAPAIIPAI@Z")
#pragma comment(linker, "/include:?InitAsDefaultInstance@DataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?_Kfn@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@IBEABU?$pair@HH@2@ABU?$pair@$$CBU?$pair@HH@std@@M@2@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@V0LayerParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?_Buynode0@?$_Tree_buy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??$?0VGenerator@RNG@Caffe@caffe@@@shared_count@detail@boost@@QAE@PAVGenerator@RNG@Caffe@caffe@@@Z")
#pragma comment(linker, "/include:??1?$XavierFiller@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?TanHParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??_G?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$FlattenLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?kAccuracyParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$ReductionLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?ConvolutionParameter_Engine_descriptor_@?A0x5e4fc710@caffe@@3PBVEnumDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??_C@_0EB@EDKPFPHM@weights?5upgrade?5this?5and?5any?5oth@")
#pragma comment(linker, "/include:??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?MergeFrom@?$RepeatedPtrField@VNetParameter@caffe@@@protobuf@google@@QAEXABV123@@Z")
#pragma comment(linker, "/include:?iter@SolverState@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?kMessageSetItemStartTag@WireFormatLite@internal@protobuf@google@@2HB")
#pragma comment(linker, "/include:?default_instance@PowerParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??_8?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@7B@")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$WindowDataLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?set_pad_h@PoolingParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?LMDB@DataParameter@caffe@@2W4DataParameter_DB@2@B")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$ArgMaxLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$raise_domain_error@NU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@math@boost@@@policies@math@boost@@YANPBD0ABNABU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@012@@Z")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$EltwiseLayer@N@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?width@?$Blob@H@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??1?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@1@AAPAU31@@Z")
#pragma comment(linker, "/include:?input_blob_indices@?$Net@M@caffe@@QBEABV?$vector@HV?$allocator@H@std@@@std@@XZ")
#pragma comment(linker, "/include:?set_solver_mode@SolverParameter@caffe@@QAEXW4SolverParameter_SolverMode@2@@Z")
#pragma comment(linker, "/include:?LayerParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?MinBottomBlobs@?$Layer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@1@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$SPPLayer@M@caffe@@@detail@boost@@QAE@PAV?$SPPLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?underflow@?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@MAEHXZ")
#pragma comment(linker, "/include:?deallocate@?$allocator@U?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@ContrastiveLossParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$LogLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??0HingeLossParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??_R3Timer@caffe@@8")
#pragma comment(linker, "/include:??_R4system_error@system@boost@@6B@")
#pragma comment(linker, "/include:?kCropSizeFieldNumber@TransformationParameter@caffe@@2HB")
#pragma comment(linker, "/include:?ByteSize@LossParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$DummyDataLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??$_Rechecked@PAV?$vector@_NV?$allocator@_N@std@@@std@@PAV12@@std@@YAAAPAV?$vector@_NV?$allocator@_N@std@@@0@AAPAV10@PAV10@@Z")
#pragma comment(linker, "/include:?max_size@?$vector@U?$pair@MH@std@@V?$allocator@U?$pair@MH@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?MergeFrom@AccuracyParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?kTanhParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??1?$_Tree_buy@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$Layer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$HingeLossLayer@M@caffe@@8")
#pragma comment(linker, "/include:??$_Val_type@PAI@std@@YAPAIPAI@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$DropoutLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$ContrastiveLossLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?default_instance@AccuracyParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$ConcatLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?has_new_height@ImageDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$HingeLossLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??$fpclassify_imp@N@detail@math@boost@@YAHNUieee_copy_all_bits_tag@012@@Z")
#pragma comment(linker, "/include:??$addressof@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@YAPAU?$pair@$$CBU?$pair@HH@std@@U12@@0@AAU10@@Z")
#pragma comment(linker, "/include:??$forward@H@std@@YA$$QAHAAH@Z")
#pragma comment(linker, "/include:?_Left@?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAAAPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_06CKJKILNC@ArgMax?$AA@")
#pragma comment(linker, "/include:?set_has_pad@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?stage_size@NetStateRule@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??_7?$AdaGradSolver@N@caffe@@6B@")
#pragma comment(linker, "/include:??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z")
#pragma comment(linker, "/include:?SIGMOID_CROSS_ENTROPY_LOSS@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:?_Rrotate@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?set_has_shift@LogParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:__real@405c53e2")
#pragma comment(linker, "/include:?set_has_k@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_C@_0BL@INKDAOJJ@4?5?$DN?$DN?5bottom?$FL0?$FN?9?$DOnum_axes?$CI?$CJ?$AA@")
#pragma comment(linker, "/include:?gInstantiationGuardInfogainLossLayer@caffe@@3DA")
#pragma comment(linker, "/include:?CopyFrom@SliceParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAPAV?$Blob@N@caffe@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@YAPAPAV?$Blob@N@caffe@@PAPAV12@00AAU?$_Wrap_alloc@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@@Z")
#pragma comment(linker, "/include:??0?$EuclideanLossLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?GetEmptyString@internal@protobuf@google@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$MVNLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??$?0V?$ArgMaxLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$ArgMaxLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bbad_month@gregorian@2@@")
#pragma comment(linker, "/include:?set_bias_term@ConvolutionParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QBEHABV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:?max_size@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?Check_NEImpl@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HHPBD@Z")
#pragma comment(linker, "/include:?IsInitialized@ThresholdParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??$swap@PAVGenerator@RNG@Caffe@caffe@@@std@@YAXAAPAVGenerator@RNG@Caffe@caffe@@0@Z")
#pragma comment(linker, "/include:??_C@_0FM@PKMGCAPI@batch_size?0?5channels?0?5height?0?5an@")
#pragma comment(linker, "/include:??$OwnInternal@VPoolingParameter@caffe@@@Arena@protobuf@google@@AAEXPAVPoolingParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:??_R0?AV?$TanHLayer@N@caffe@@@8")
#pragma comment(linker, "/include:?swap@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAEXAAU12@@Z")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_C@_04CJIJKHMO@pool?$AA@")
#pragma comment(linker, "/include:?set_has_dummy_data_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_C@_0N@BPLKDLBI@sparse?5?$DO?$DN?5?91?$AA@")
#pragma comment(linker, "/include:??$forward@AAU?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@YAAAU?$pair@$$CBU?$pair@HH@std@@U12@@0@AAU10@@Z")
#pragma comment(linker, "/include:?has_source@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_0BB@IFBKBKMG@?$CJ?5should?5evenly?5?$AA@")
#pragma comment(linker, "/include:??$construct@PAV?$FlattenLayer@M@caffe@@PAV12@@?$allocator_traits@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@SAXAAV?$allocator@PAV?$FlattenLayer@M@caffe@@@1@PAPAV?$FlattenLayer@M@caffe@@$$QAPAV34@@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$ReLULayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z")
#pragma comment(linker, "/include:??_R0?AVlogic_error@std@@@8")
#pragma comment(linker, "/include:??$_Allocate@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@0@IPAU10@@Z")
#pragma comment(linker, "/include:?output_s@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@2IB")
#pragma comment(linker, "/include:?get@?$shared_ptr@V?$Net@N@caffe@@@boost@@QBEPAV?$Net@N@caffe@@XZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$ArgMaxLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??$GetTanHLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??_7?$DataLayer@M@caffe@@6BInternalThread@1@@")
#pragma comment(linker, "/include:?set_test_compute_loss@SolverParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:??_R2?$BilinearFiller@N@caffe@@8")
#pragma comment(linker, "/include:??_7?$AdaGradSolver@M@caffe@@6B@")
#pragma comment(linker, "/include:?V0LayerParameter_PoolMethod_IsValid@caffe@@YA_NH@Z")
#pragma comment(linker, "/include:??_GParamSpec@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?min_exponent@_Num_base@std@@2HB")
#pragma comment(linker, "/include:?CrossChannelForward_cpu@?$LRNLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?set_operation@EltwiseParameter@caffe@@QAEXW4EltwiseParameter_EltwiseOp@2@@Z")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$EltwiseLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$SPPLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$_Adjust_heap@PAU?$pair@NH@std@@HU12@U?$greater@U?$pair@NH@std@@@2@@std@@YAXPAU?$pair@NH@0@HH$$QAU10@U?$greater@U?$pair@NH@std@@@0@@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VDataParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVDataParameter@caffe@@@Z")
#pragma comment(linker, "/include:??1?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?max_exponent@_Num_base@std@@2HB")
#pragma comment(linker, "/include:??$forward@AAPAV?$Blob@N@caffe@@@std@@YAAAPAV?$Blob@N@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??$?0V?$SoftmaxWithLossLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$SoftmaxWithLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_08NLCOAFEI@Accuracy?$AA@")
#pragma comment(linker, "/include:?IsInitialized@PowerParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAU?$pair@HH@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@HH@std@@@std@@@2@@std@@YAPAU?$pair@HH@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@HH@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?GetMetadata@AccuracyParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_C@_0BA@DNABHHO@c?5?$DM?$DN?5channels?$CI?$CJ?$AA@")
#pragma comment(linker, "/include:??$construct@V?$vector@MV?$allocator@M@std@@@std@@V12@@?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@QAEXPAV?$vector@MV?$allocator@M@std@@@1@$$QAV21@@Z")
#pragma comment(linker, "/include:??$Create@UContainer@InternalMetadataWithArena@internal@protobuf@google@@@Arena@protobuf@google@@SAPAUContainer@InternalMetadataWithArena@internal@12@PAV012@@Z")
#pragma comment(linker, "/include:?word_size@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@2IB")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?LayerTypeList@?$LayerRegistry@M@caffe@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??$_Uninitialized_default_fill_n@PAVNetParameter@caffe@@IU?$_Wrap_alloc@V?$allocator@VNetParameter@caffe@@@std@@@std@@@std@@YAXPAVNetParameter@caffe@@IAAU?$_Wrap_alloc@V?$allocator@VNetParameter@caffe@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_R2?$PReLULayer@M@caffe@@8")
#pragma comment(linker, "/include:??$?0ABU?$pair@HH@std@@@?$_Tuple_val@ABU?$pair@HH@std@@@std@@QAE@ABU?$pair@HH@1@@Z")
#pragma comment(linker, "/include:??0?$RepeatedPtrField@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:?has_inner_product_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?clear@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@HingeLossParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@$$QAV34@@Z")
#pragma comment(linker, "/include:?IsInitialized@HDF5DataParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?conv_im2col_cpu@?$BaseConvolutionLayer@M@caffe@@AAEXPBMPAM@Z")
#pragma comment(linker, "/include:?set_has_width@MemoryDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?max_size@?$vector@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@$$QAV23@@Z")
#pragma comment(linker, "/include:?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??_C@_0CC@CJAECNJK@Filter?5dimensions?5cannot?5be?5zero@")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$DeconvolutionLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??0thread_resource_error@boost@@QAE@HPBD@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VArgMaxParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVArgMaxParameter@caffe@@@Z")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@H@std@@@std@@QAEPAHI@Z")
#pragma comment(linker, "/include:?clear_history@SolverState@caffe@@QAEXXZ")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$Blob@M@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?set_alpha@V0LayerParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@ImageDataParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@@std@@QAEPAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@2@I@Z")
#pragma comment(linker, "/include:?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B")
#pragma comment(linker, "/include:??$make_move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PAUbad_day_of_month@gregorian@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$SplitLayer@N@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??$_Move@AAPAVFillerParameter@caffe@@@std@@YA$$QAPAVFillerParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:?has_spp_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?CPU@SolverParameter@caffe@@2W4SolverParameter_SolverMode@2@B")
#pragma comment(linker, "/include:?Engine_MIN@SigmoidParameter@caffe@@2W4SigmoidParameter_Engine@2@B")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$SilenceLayer@N@caffe@@8")
#pragma comment(linker, "/include:?mpl_assertion_in_line_10@?$facade_iterator_category_impl@Uforward_traversal_tag@iterators@boost@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@ABV45@@detail@iterators@boost@@2IB")
#pragma comment(linker, "/include:?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??_R4?$FilterLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?MergeFrom@?$RepeatedPtrField@VParamSpec@caffe@@@protobuf@google@@QAEXABV123@@Z")
#pragma comment(linker, "/include:??$?0V?$DataLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$DataLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$HingeLossLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??_C@_0CP@FLIJBFLL@param?4input_size?$CI?$CJ?5?$DN?$DN?5param?4inpu@")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@SolverState@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?value@?$is_member_function_pointer_impl@$$CDX@detail@boost@@2_NB")
#pragma comment(linker, "/include:?InternalSwap@HDF5DataParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:??$arena_destruct_object@VNetParameter@caffe@@@internal@protobuf@google@@YAXPAX@Z")
#pragma comment(linker, "/include:?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QAEIV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@I@Z")
#pragma comment(linker, "/include:?_Freenode0@?$_Tree_buy@U?$pair@$$CBHH@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_R2TransformationParameter@caffe@@8")
#pragma comment(linker, "/include:?mutable_concat_param@LayerParameter@caffe@@QAEPAVConcatParameter@2@XZ")
#pragma comment(linker, "/include:?min@?$br_mul@$00$0CHBA@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:__CT??_R0?AVdomain_error@std@@@8??0domain_error@std@@QAE@ABV01@@Z12")
#pragma comment(linker, "/include:??$_Rechecked@PAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@PAV12@@std@@YAAAPAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@AAPAV12@PAV12@@Z")
#pragma comment(linker, "/include:??_C@_0JD@GHFNMAHC@Check?5failed?3?5?$CI?$CBconv_param?4has_p@")
#pragma comment(linker, "/include:??1?$BaseConvolutionLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@VRNG@Caffe@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?clear_scale@ImageDataParameter@caffe@@QAEXXZ")
#pragma comment(linker, "/include:??_C@_0FI@MMJGJCNF@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?clone@?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:??0?$time_duration@V0posix_time@boost@@V?$time_resolution_traits@Utime_resolution_traits_adapted64_impl@date_time@boost@@$04$0PECEA@$05H@date_time@2@@date_time@boost@@QAE@W4special_values@12@@Z")
#pragma comment(linker, "/include:??$swap@PAVPoolingParameter@caffe@@@std@@YAXAAPAVPoolingParameter@caffe@@0@Z")
#pragma comment(linker, "/include:??_C@_0FO@GGFGODBP@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?_Xlen@?$vector@V?$shared_ptr@V?$Net@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@IBEXXZ")
#pragma comment(linker, "/include:??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@@Z")
#pragma comment(linker, "/include:?construct@?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Net@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$AccuracyLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?default_instance_@InfogainLossParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??$?0V?$LogLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$LogLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??0?$arg@$03@boost@@QAE@XZ")
#pragma comment(linker, "/include:??_R4?$AbsValLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?_Grow_to@?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@IBEII@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@@std@@YAXPAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??$_Ptr_cat@PAV?$Blob@M@caffe@@PAV12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAV?$Blob@M@caffe@@0@Z")
#pragma comment(linker, "/include:?WriteInt64ToArray@WireFormatLite@internal@protobuf@google@@SAPAEH_JPAE@Z")
#pragma comment(linker, "/include:?InternalSwap@ImageDataParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?set_new_height@V0LayerParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_pd@PAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@VNo_Op@?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@23@@detail@boost@@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$PowerLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??0?$intrusive_ptr@Uthread_data_base@detail@boost@@@boost@@QAE@PAUthread_data_base@detail@1@_N@Z")
#pragma comment(linker, "/include:??_R4bad_alloc_@exception_detail@boost@@6Bbad_alloc@std@@@")
#pragma comment(linker, "/include:??$generate_uniform_real@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@M@detail@random@boost@@YAMAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@MM@Z")
#pragma comment(linker, "/include:??_Gclone_base@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?kBiasTermFieldNumber@ConvolutionParameter@caffe@@2HB")
#pragma comment(linker, "/include:?clear_has_data@Datum@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?digits10@?$numeric_limits@F@std@@2HB")
#pragma comment(linker, "/include:?CopyFrom@SigmoidParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R0?AVFlattenParameter@caffe@@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$ReshapeLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_C@_0FG@BFEMBLGM@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?set_has_channel_shared@PReLUParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?kCsharpNamespaceFieldNumber@FileOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:?Backward_cpu@?$LogLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??1InternalThread@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$destroy@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@?$allocator_traits@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@1@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@1@@Z")
#pragma comment(linker, "/include:?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_C@_0BN@GBKFPBFD@CHECK?5failed?3?5file?5?$CB?$DN?5NULL?3?5?$AA@")
#pragma comment(linker, "/include:??$_Buynode_if_nil@AAU?$pair@$$CBU?$pair@HH@std@@M@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@1@PAU21@AAU?$pair@$$CBU?$pair@HH@std@@M@1@@Z")
#pragma comment(linker, "/include:??$Creator_MultinomialLogisticLossLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@XZ")
#pragma comment(linker, "/include:??_C@_0BL@FFLABCOG@Syncedmem?5not?5initialized?4?$AA@")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@VLayerParameter@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$FlattenLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??_R0?AVBlobProtoVector@caffe@@@8")
#pragma comment(linker, "/include:?has_test_initialization@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_0CP@LGKAGMAH@fields?$DL?5these?5will?5be?5ignored?5fo@")
#pragma comment(linker, "/include:?default_instance@Datum@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$InnerProductLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?_Xlen@?$vector@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@2@@std@@IBEXXZ")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VDropoutParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVDropoutParameter@caffe@@@Z")
#pragma comment(linker, "/include:?kBiasFillerFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ")
#pragma comment(linker, "/include:??1?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$FlattenLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?Swap@DropoutParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??_C@_0FG@ODEEDEMC@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??1overflow_error@std@@UAE@XZ")
#pragma comment(linker, "/include:?clear_loss_weight@LayerParameter@caffe@@QAEXXZ")
#pragma comment(linker, "/include:??_R1773EA@?$_Iosb@H@std@@8")
#pragma comment(linker, "/include:??0logic_error@std@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?is_signed@?$numeric_limits@_N@std@@2_NB")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$PowerLayer@N@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?kCcGenericServicesFieldNumber@FileOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:?Backward_cpu@?$DeconvolutionLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?set_has_softmax_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$ReductionLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??0error_category@std@@QAE@XZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$ThresholdLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$Net@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?kWeakFieldNumber@FieldOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:?Forward_gpu@?$PReLULayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$caffe_abs@M@caffe@@YAXHPBMPAM@Z")
#pragma comment(linker, "/include:??$_Buynode_if_nil@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@1@PAU21@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@1@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$SigmoidLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?is_bounded@_Num_base@std@@2_NB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@SolverParameter@caffe@@8")
#pragma comment(linker, "/include:??0sp_counted_base@detail@boost@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0BD@CJAKNBKI@Window?5data?5layer?3?$AA@")
#pragma comment(linker, "/include:?_Destroy@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@2@@std@@IAEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@2@0@Z")
#pragma comment(linker, "/include:??_C@_0CA@GKEDEJNE@Inputs?5must?5have?5same?5channels?4?$AA@")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@@std@@YAPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:??$?0V?$MultinomialLogisticLossLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$MultinomialLogisticLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$ConvolutionLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:?descriptor@ContrastiveLossParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?value@?$is_base_of_imp@Vexception@std@@Ubad_year@gregorian@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$TanHLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?GetMetadata@SliceParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@N@std@@@std@@@std@@YAXPAN0AAU?$_Wrap_alloc@V?$allocator@N@std@@@0@@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$EltwiseLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?value@?$abs_wknd@_J$0PECEA@@aux@mpl@boost@@2_JB")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@I@std@@@std@@QAEXPAII@Z")
#pragma comment(linker, "/include:?create_anonymous_event@win32@detail@boost@@YAPAXW4event_type@123@W4initial_event_state@123@@Z")
#pragma comment(linker, "/include:??$construct@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@1@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@1@$$QAV31@@Z")
#pragma comment(linker, "/include:??$forward@V?$vector@IV?$allocator@_N@std@@@std@@@std@@YA$$QAV?$vector@IV?$allocator@_N@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??0?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VLayerParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVLayerParameter@caffe@@@Z")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VEltwiseParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVEltwiseParameter@caffe@@@Z")
#pragma comment(linker, "/include:??1?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0CE@OEDGENAC@datum_height?5?$DN?$DN?5data_mean_?4heigh@")
#pragma comment(linker, "/include:?InternalSwap@LayerParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:??$OwnInternal@VConcatParameter@caffe@@@Arena@protobuf@google@@AAEXPAVConcatParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?kNameFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R0?AV?$SoftmaxLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??_C@_0BA@NGMJDALD@Creating?5layer?5?$AA@")
#pragma comment(linker, "/include:?kImageDataParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@DummyDataParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??_C@_0EP@FKCJMBGJ@Check?5failed?3?5mean_values_?4size?$CI@")
#pragma comment(linker, "/include:?_Kfn@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@IBEABU?$pair@HH@2@ABU?$pair@$$CBU?$pair@HH@std@@H@2@@Z")
#pragma comment(linker, "/include:?CAFFE@SPPParameter@caffe@@2W4SPPParameter_Engine@2@B")
#pragma comment(linker, "/include:?DecodeDatumNative@caffe@@YA_NPAVDatum@1@@Z")
#pragma comment(linker, "/include:?rdbuf@?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@QBEPAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@23@XZ")
#pragma comment(linker, "/include:?value@?$enable_binary_hash@O$0EA@$0EAAA@@hash_detail@boost@@2_NB")
#pragma comment(linker, "/include:??0MVNParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?gInstantiationGuardLogLayer@caffe@@3DA")
#pragma comment(linker, "/include:??$_Unchecked@PAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@PAV12@@Z")
#pragma comment(linker, "/include:??_R2V1LayerParameter@caffe@@8")
#pragma comment(linker, "/include:?allocate@?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@QAEPAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@2@I@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$SplitLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?kTransformParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??0?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?overflow@?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@MAEHH@Z")
#pragma comment(linker, "/include:??0?$allocator@U?$pair@MH@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?Clear@FillerParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?mutable_window_data_param@LayerParameter@caffe@@QAEPAVWindowDataParameter@2@XZ")
#pragma comment(linker, "/include:??0RNG@Caffe@caffe@@QAE@I@Z")
#pragma comment(linker, "/include:?destroy_impl@?$optional_base@Vlocale@std@@@optional_detail@boost@@AAEXU?$bool_@$0A@@mpl@3@@Z")
#pragma comment(linker, "/include:??_C@_0O@GNLGGI@infogain_loss?$AA@")
#pragma comment(linker, "/include:??0?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z")
#pragma comment(linker, "/include:?value@?$is_pod_impl@X@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$DataLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??1?$Im2colLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$SPPLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?kOutputTypeFieldNumber@MethodDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??1?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$construct@PAV?$Blob@M@caffe@@PAV12@@?$allocator_traits@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@SAXAAV?$allocator@PAV?$Blob@M@caffe@@@1@PAPAV?$Blob@M@caffe@@$$QAPAV34@@Z")
#pragma comment(linker, "/include:?digits@?$numeric_limits@_N@std@@2HB")
#pragma comment(linker, "/include:?mutable_argmax_param@LayerParameter@caffe@@QAEPAVArgMaxParameter@2@XZ")
#pragma comment(linker, "/include:?size@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_C@_09JMMFMGE@multistep?$AA@")
#pragma comment(linker, "/include:?kPadHFieldNumber@PoolingParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_G?$LogLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?pos_infinity@?$int_adapter@I@date_time@boost@@SA?BV123@XZ")
#pragma comment(linker, "/include:??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@0@AAU10@@Z")
#pragma comment(linker, "/include:??1?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?kExtensionFieldNumber@FileDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??$put_last@DU?$char_traits@D@std@@U?$group2@U?$_Smanip@_J@std@@ABN@detail@io@boost@@@detail@io@boost@@YAXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@ABU?$group1@U?$group2@U?$_Smanip@_J@std@@ABN@detail@io@boost@@@012@@Z")
#pragma comment(linker, "/include:??_R0?AV?$BNLLLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@@std@@QAE@PAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@PBU_Container_base0@1@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@V123@@detail@boost@@YAXPAV?$shared_ptr@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@1@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@1@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??$forward@PAV?$Blob@N@caffe@@@std@@YA$$QAPAV?$Blob@N@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??0Datum@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@NetState@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??_R0?AV?$BilinearFiller@N@caffe@@@8")
#pragma comment(linker, "/include:?reverse_dimensions@?$DeconvolutionLayer@N@caffe@@MAE_NXZ")
#pragma comment(linker, "/include:??_C@_06LOMPCCJJ@_split?$AA@")
#pragma comment(linker, "/include:??$construct@PAV?$Blob@N@caffe@@PAV12@@?$allocator@PAV?$Blob@N@caffe@@@std@@QAEXPAPAV?$Blob@N@caffe@@$$QAPAV23@@Z")
#pragma comment(linker, "/include:??_7?$DeconvolutionLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?value@?$result_@_J@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VHingeLossParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVHingeLossParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?type@?$Layer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?ReshapeLike@?$Blob@N@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??0?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0CB@NFOMLIOK@Input?5dimensions?5cannot?5be?5zero?4@")
#pragma comment(linker, "/include:?EqualNumBottomTopBlobs@?$BaseConvolutionLayer@N@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$FilterLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$SigmoidLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?set_negative_slope@ReLUParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??_R4?$MultinomialLogisticLossLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?InitAsDefaultInstance@LossParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@EltwiseParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??$?0V?$Net@M@caffe@@@?$shared_ptr@V?$Net@M@caffe@@@boost@@QAE@PAV?$Net@M@caffe@@@Z")
#pragma comment(linker, "/include:__CT??_R0?AU?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@8??0?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@QAE@ABU012@@Z32")
#pragma comment(linker, "/include:?mutable_eltwise_param@V1LayerParameter@caffe@@QAEPAVEltwiseParameter@2@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$BilinearFiller@N@caffe@@8")
#pragma comment(linker, "/include:??_C@_0BI@PEAFJFFA@bottom?$FL1?$FN?9?$DOwidth?$CI?$CJ?5?$DN?$DN?51?$AA@")
#pragma comment(linker, "/include:?set_has_stride_w@PoolingParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?set_has_device_id@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_G?$NeuronLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_7?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@6Bbad_day_of_month@gregorian@2@@")
#pragma comment(linker, "/include:??$construct@MM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAAV?$allocator@M@1@PAM$$QAM@Z")
#pragma comment(linker, "/include:?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_R3DataParameter@caffe@@8")
#pragma comment(linker, "/include:?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??$_Sort_heap@PAU?$pair@MH@std@@U?$greater@U?$pair@MH@std@@@2@@std@@YAXPAU?$pair@MH@0@0U?$greater@U?$pair@MH@std@@@0@@Z")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$upper_bound_from_fstring@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$ctype@D@2@@detail@io@boost@@YAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@DABV?$ctype@D@4@E@Z")
#pragma comment(linker, "/include:??_R2?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?value@?$max_pow2_less@$0EA@$0BA@@detail@boost@@2HB")
#pragma comment(linker, "/include:?SharedCtor@SolverState@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$EuclideanLossLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?stage@NetState@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z")
#pragma comment(linker, "/include:?MergeFrom@AccuracyParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$Get@VTypeHandler@?$RepeatedPtrField@VFillerParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IBEABVFillerParameter@caffe@@H@Z")
#pragma comment(linker, "/include:??0?$vector@MV?$allocator@M@std@@@std@@QAE@IABM@Z")
#pragma comment(linker, "/include:??_7ArgMaxParameter@caffe@@6B@")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVPowerParameter@caffe@@@internal@protobuf@google@@YAPBVPowerParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:??_R2?$_Iosb@H@std@@8")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??A?$map@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAEAAHABH@Z")
#pragma comment(linker, "/include:??$Destroy@VTypeHandler@?$RepeatedPtrField@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXXZ")
#pragma comment(linker, "/include:??$digits_imp@MU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@math@boost@@@detail@policies@math@boost@@YAHABU?$bool_@$00@mpl@3@@Z")
#pragma comment(linker, "/include:?SharedDtor@PythonParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?nan@?$br_mul@$00$00@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:?name@?$Net@M@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?InitAsDefaultInstance@MVNParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R2sp_counted_base@detail@boost@@8")
#pragma comment(linker, "/include:??0?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QAE@PBIPBU_Container_base0@1@@Z")
#pragma comment(linker, "/include:??$Check_EQImpl@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$BY01$$CBD@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@AAY01$$CBDPBD@Z")
#pragma comment(linker, "/include:?CopyFrom@ReductionParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@N@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$ExpLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?set_has_train_net@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R3?$basic_fstream@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$DummyDataLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??$ReadRepeatedFixedSizePrimitive@M$01@WireFormatLite@internal@protobuf@google@@CA_NHIPAVCodedInputStream@io@23@PAV?$RepeatedField@M@23@@Z")
#pragma comment(linker, "/include:?InternalSwap@AccuracyParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z")
#pragma comment(linker, "/include:??$?0V?$PoolingLayer@N@caffe@@@?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@QAE@PAV?$PoolingLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?to_int_type@?$char_traits@D@std@@SAHABD@Z")
#pragma comment(linker, "/include:??1?$base_from_member@V?$shared_ptr@V?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@@boost@@$0A@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_pd@PAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@VNo_Op@?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@23@@detail@boost@@8")
#pragma comment(linker, "/include:??_C@_0CE@JNDNNOMA@bottom_slice_axis?5?$CF?5top?4size?$CI?$CJ?5?$DN@")
#pragma comment(linker, "/include:?max_size@?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?kRepHeaderSize@RepeatedPtrFieldBase@internal@protobuf@google@@0IB")
#pragma comment(linker, "/include:?gcd_d1_d2@?$is_evenly_divisible_by@V?$ratio@$00$0JIJGIA@@boost@@V?$ratio@$00$0DLJKMKAA@@2@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:??$digits@N@tools@math@boost@@YAHXZ")
#pragma comment(linker, "/include:??C?$shared_ptr@V?$Net@N@caffe@@@boost@@QBEPAV?$Net@N@caffe@@XZ")
#pragma comment(linker, "/include:?loss@?$Layer@N@caffe@@QBENH@Z")
#pragma comment(linker, "/include:??0ptime@posix_time@boost@@QAE@Vdate@gregorian@2@Vtime_duration@12@@Z")
#pragma comment(linker, "/include:?shape@BlobProto@caffe@@QBEABVBlobShape@2@XZ")
#pragma comment(linker, "/include:?snapshot_after_train@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_07IJMKDPMA@Softmax?$AA@")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@AAE@ABV012@Uclone_tag@012@@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@InternalMetadataWithArena@internal@protobuf@google@@QAEPAVUnknownFieldSet@34@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$Filler@N@caffe@@8")
#pragma comment(linker, "/include:?unknown_fields@EltwiseParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?StateMeetsRule@?$Net@N@caffe@@SA_NABVNetState@2@ABVNetStateRule@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?hdf5_output_param@V0LayerParameter@caffe@@QBEABVHDF5OutputParameter@2@XZ")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$SplitLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??A?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@QBEABQAV?$Blob@M@caffe@@I@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?gInstantiationGuardImageDataLayer@caffe@@3DA")
#pragma comment(linker, "/include:?New@InnerProductParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:?Forward_cpu@?$FlattenLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ")
#pragma comment(linker, "/include:?LayerSetUp@?$ContrastiveLossLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_C@_0DD@OIJABCFJ@Unknown?5parameter?5det_bg_thresho@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$InnerProductLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?kExcludeFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$MVNLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?swap@?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??_R0?AVReshapeParameter@caffe@@@8")
#pragma comment(linker, "/include:?HingeLossParameter_Norm_descriptor@caffe@@YAPBVEnumDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?SharedDtor@FlattenParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?default_instance_@TanHParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??_GV0LayerParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?SharedCtor@InfogainLossParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?_Reallocate@?$vector@IV?$allocator@_N@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@VLayerParameter@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVHDF5OutputParameter@caffe@@@internal@protobuf@google@@YAPBVHDF5OutputParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:??_G?$MVNLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?TanHParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?add_blobs@V1LayerParameter@caffe@@QAEPAVBlobProto@2@XZ")
#pragma comment(linker, "/include:?pointer_to@?$pointer_traits@PAU?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@SAPAU?$pair@$$CBU?$pair@HH@std@@M@2@AAU32@@Z")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$_Umove@PAU?$pair@NH@std@@@?$vector@U?$pair@NH@std@@V?$allocator@U?$pair@NH@std@@@2@@std@@IAEPAU?$pair@NH@1@PAU21@00@Z")
#pragma comment(linker, "/include:??0?$LRNLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?kScaleFieldNumber@ExpParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$_Rechecked@V?$back_insert_iterator@V?$vector@HV?$allocator@H@std@@@std@@@std@@V12@@std@@YAAAV?$back_insert_iterator@V?$vector@HV?$allocator@H@std@@@std@@@0@AAV10@V10@@Z")
#pragma comment(linker, "/include:??_R4?$ImageDataLayer@M@caffe@@6BInternalThread@1@@")
#pragma comment(linker, "/include:?MinTopBlobs@?$DataLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$DropoutLayer@M@caffe@@@detail@boost@@QAE@PAV?$DropoutLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?erase@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@2@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$ImageDataLayer@M@caffe@@8")
#pragma comment(linker, "/include:?Forward_cpu@?$DeconvolutionLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?release@sp_counted_base@detail@boost@@QAEXXZ")
#pragma comment(linker, "/include:?scale@ExpParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?std@FillerParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:??0?$ConcatLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?add_layer@NetParameter@caffe@@QAEPAVLayerParameter@2@XZ")
#pragma comment(linker, "/include:??_C@_0DE@LOKFHNFN@Creating?5training?5net?5specified?5@")
#pragma comment(linker, "/include:?has_shuffle@ImageDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:__CT??_R0?AUbad_day_of_month@gregorian@boost@@@8??0bad_day_of_month@gregorian@boost@@QAE@ABU012@@Z12")
#pragma comment(linker, "/include:?DimCheckMode_MAX@V1LayerParameter@caffe@@2W4V1LayerParameter_DimCheckMode@2@B")
#pragma comment(linker, "/include:??$const_or_not@V?$ctype@D@std@@@detail@io@boost@@YAABV?$ctype@D@std@@ABV34@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$Blob@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??_C@_0BG@HCHLLLPJ@Thread?5joining?5failed?$AA@")
#pragma comment(linker, "/include:?has_memory_data_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VLRNParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVLRNParameter@caffe@@@Z")
#pragma comment(linker, "/include:?conv_col2im_cpu@?$BaseConvolutionLayer@N@caffe@@AAEXPBNPAN@Z")
#pragma comment(linker, "/include:?lock_flag_bit@basic_timed_mutex@detail@boost@@2EB")
#pragma comment(linker, "/include:?size@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$addressof@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@AAV12@@Z")
#pragma comment(linker, "/include:?kPropagateDownFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_C@_07BOJIOPMC@?0?5lr?5?$DN?5?$AA@")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@SolverParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?clone@?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:?size@?$vector@EV?$allocator@E@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@NetStateRule@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??$caffe_powx@M@caffe@@YAXHPBMMPAM@Z")
#pragma comment(linker, "/include:?push_back@?$vector@U?$pair@NH@std@@V?$allocator@U?$pair@NH@std@@@2@@std@@QAEX$$QAU?$pair@NH@2@@Z")
#pragma comment(linker, "/include:??$_Insert_nohint@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@1@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?size@?$vector@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_C@_05EKPNOAPD@n?5?$DO?50?$AA@")
#pragma comment(linker, "/include:??_R4ArgMaxParameter@caffe@@6B@")
#pragma comment(linker, "/include:?set_batch_size@MemoryDataParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??0?$_Tree_comp@$0A@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@1@@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$ArgMaxLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?set_has_new_width@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_C@_0P@CFGHBOMC@size_?5?$CF?52?5?$DN?$DN?51?$AA@")
#pragma comment(linker, "/include:??_R2?$ReLULayer@N@caffe@@8")
#pragma comment(linker, "/include:??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@?$bernoulli_distribution@N@random@boost@@QBE_NAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@@Z")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PAMU?$_Wrap_alloc@V?$allocator@M@std@@@2@@std@@YAPAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PAMAAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$DeconvolutionLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_C@_0M@CMCKCACM@window_data?$AA@")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$ThresholdLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??$destroy@N@?$allocator_traits@V?$allocator@N@std@@@std@@SAXAAV?$allocator@N@1@PAN@Z")
#pragma comment(linker, "/include:??_C@_0BO@FKOHPJNA@param_size?5?$DM?$DN?5num_param_blobs?$AA@")
#pragma comment(linker, "/include:?gInstantiationGuardPoolingLayer@caffe@@3DA")
#pragma comment(linker, "/include:?Reshape@?$SoftmaxLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@1@$$QA_N@Z")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@2@@std@@YAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?_Tidy@?$vector@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:?what@too_many_args@io@boost@@UBEPBDXZ")
#pragma comment(linker, "/include:?MinTopBlobs@?$SliceLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??0?$vector@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??0?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QAE@ABV?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:?kTestNetParamFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z")
#pragma comment(linker, "/include:??_GAccuracyParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?_Reserve@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?Reshape@?$MVNLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??$MergeFrom@VTypeHandler@?$RepeatedPtrField@VNetParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXABV0123@@Z")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z")
#pragma comment(linker, "/include:??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@std@@QAE?AV01@H@Z")
#pragma comment(linker, "/include:??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@@std@@QAEAAV01@H@Z")
#pragma comment(linker, "/include:?set_has_sparse@FillerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?kBaseLrFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:?CopyFrom@LayerParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??_C@_0BI@DPLKCLMI@axis_index?5?$DM?5num_axes?$CI?$CJ?$AA@")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$InnerProductLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$addressof@$$CBV?$vector@MV?$allocator@M@std@@@std@@@std@@YAPBV?$vector@MV?$allocator@M@std@@@0@ABV10@@Z")
#pragma comment(linker, "/include:?TYPE_SFIXED64@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Type@23@B")
#pragma comment(linker, "/include:??_R4bad_alloc@std@@6B@")
#pragma comment(linker, "/include:?Backward_gpu@?$Layer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@IBEXPAU?$pair@HH@2@0@Z")
#pragma comment(linker, "/include:??_G?$MultinomialLogisticLossLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$ContrastiveLossLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$LRNLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?set_pool@V0LayerParameter@caffe@@QAEXW4V0LayerParameter_PoolMethod@2@@Z")
#pragma comment(linker, "/include:?Clear@SoftmaxParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V12@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@$$QAV23@@Z")
#pragma comment(linker, "/include:?kUninterpretedOptionFieldNumber@MethodOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@HDF5DataParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??_C@_0DG@LHJNCODC@Padding?5implemented?5only?5for?5ave@")
#pragma comment(linker, "/include:?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B")
#pragma comment(linker, "/include:??_7EltwiseParameter@caffe@@6B@")
#pragma comment(linker, "/include:?mutable_cpu_data@SyncedMemory@caffe@@QAEPAXXZ")
#pragma comment(linker, "/include:?gcd_n1_n2@?$is_evenly_divisible_by@V?$ratio@$00$0DLJKMKAA@@boost@@V12@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:??_R2?$DataTransformer@M@caffe@@8")
#pragma comment(linker, "/include:??_C@_0CB@JJOGJGIN@shape?5mismatch?5?$CIreshape?5not?5set?$CJ@")
#pragma comment(linker, "/include:??$?0V?$Net@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$Net@M@caffe@@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$SoftmaxLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?LayerSetUp@?$ReductionLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?head@SyncedMemory@caffe@@QAE?AW4SyncedHead@12@XZ")
#pragma comment(linker, "/include:?digits@?$numeric_limits@J@std@@2HB")
#pragma comment(linker, "/include:??$_Unchecked@PAPAV?$Blob@M@caffe@@@std@@YAPAPAV?$Blob@M@caffe@@PAPAV12@@Z")
#pragma comment(linker, "/include:?Get@?$RepeatedPtrField@VNetState@caffe@@@protobuf@google@@QBEABVNetState@caffe@@H@Z")
#pragma comment(linker, "/include:??_G?$InfogainLossLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_8?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@7B@")
#pragma comment(linker, "/include:?max_size@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$swap@PAVImageDataParameter@caffe@@@std@@YAXAAPAVImageDataParameter@caffe@@0@Z")
#pragma comment(linker, "/include:??_G?$DeconvolutionLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$?0ABH$$$V@?$pair@$$CBHH@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABH@1@V?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?batch_size@DataParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?type@?$InfogainLossLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?is_integral@?$integer_traits_base@J$0?IAAAAAAA@$0HPPPPPPP@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$destroy@M@?$allocator@M@std@@QAEXPAM@Z")
#pragma comment(linker, "/include:??$construct@NAAN@?$allocator@N@std@@QAEXPANAAN@Z")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$EuclideanLossLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$LRNLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_7?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@6Boverflow_error@std@@@")
#pragma comment(linker, "/include:??_C@_0GK@PBCFHKCB@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??_7?$MSRAFiller@N@caffe@@6B@")
#pragma comment(linker, "/include:??_G?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??0ImageDataParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?CopyFrom@HDF5OutputParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?unknown_fields@HDF5OutputParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?has_delta@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:__CT??_R0?AVthread_exception@boost@@@8??0thread_exception@boost@@QAE@ABV01@@Z44")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_C@_0BN@KOHPPLMI@?5needs?5backward?5computation?4?$AA@")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$DataLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??$checked_delete@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@boost@@YAXPAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@0@@Z")
#pragma comment(linker, "/include:??_G?$PoolingLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?layer_param@?$Layer@N@caffe@@QBEABVLayerParameter@2@XZ")
#pragma comment(linker, "/include:?num_size@DummyDataParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VAccuracyParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVAccuracyParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_R0?AV?$Im2colLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$Solver@M@caffe@@8")
#pragma comment(linker, "/include:??_C@_0BL@EIGDEAFE@?$CJ?5is?5above?5the?5min_level?5?$CI?$AA@")
#pragma comment(linker, "/include:?kValueFieldNumber@FillerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$Layer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?event_set_flag_value@basic_timed_mutex@detail@boost@@2JB")
#pragma comment(linker, "/include:??0?$LossLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??$_Uninitialized_default_fill_n@PAHIU?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAXPAHIAAU?$_Wrap_alloc@V?$allocator@H@std@@@0@@Z")
#pragma comment(linker, "/include:??_R3?$SigmoidCrossEntropyLossLayer@N@caffe@@8")
#pragma comment(linker, "/include:??0SoftmaxParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$FlattenLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$vSqr@M@@YAXHPBMPAM@Z")
#pragma comment(linker, "/include:?MicroSeconds@CPUTimer@caffe@@UAEMXZ")
#pragma comment(linker, "/include:?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBHH@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?quiet_NaN@?$numeric_limits@M@std@@SAMXZ")
#pragma comment(linker, "/include:?max_size@?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?has_variance_norm@FillerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$_Move@AAPAVSoftmaxParameter@caffe@@@std@@YA$$QAPAVSoftmaxParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??_Gbad_format_string@io@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?NewFromPrototype@StringTypeHandlerBase@internal@protobuf@google@@SAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBV56@PAVArena@34@@Z")
#pragma comment(linker, "/include:?CopyFrom@TanHParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?Swap@Datum@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@?$uniform_real_distribution@N@random@boost@@QBENAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@@Z")
#pragma comment(linker, "/include:??C?$shared_ptr@V?$Blob@N@caffe@@@boost@@QBEPAV?$Blob@N@caffe@@XZ")
#pragma comment(linker, "/include:??1?$Filler@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?value@?$has_member_lock@PAV?$unique_lock@Vmutex@boost@@@boost@@$0A@@detail@sync@boost@@2_NB")
#pragma comment(linker, "/include:?kSourceFieldNumber@DataParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$construct@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@U1234@@?$allocator_traits@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@SAXAAV?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@1@PAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@$$QAU3456@@Z")
#pragma comment(linker, "/include:?InternalSwap@NetState@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@ArgMaxParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??_R0?AV?$ImageDataLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@AAV12@@?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@AAV23@@Z")
#pragma comment(linker, "/include:??1?$ConcatLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$ReshapeLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?size@?$RepeatedPtrField@VLayerParameter@caffe@@@protobuf@google@@QBEHXZ")
#pragma comment(linker, "/include:??$forward@ABM@std@@YAABMABM@Z")
#pragma comment(linker, "/include:??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@QAEAAP6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z")
#pragma comment(linker, "/include:?Reshape@?$FlattenLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$BaseDataLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?height@?$MemoryDataLayer@M@caffe@@QAEHXZ")
#pragma comment(linker, "/include:?normalize@LossParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??1?$PReLULayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$DropoutLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?Forward_gpu@?$SoftmaxLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$PReLULayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??$construct@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@1@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@$$QAU31@@Z")
#pragma comment(linker, "/include:??$_Ptr_cat@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@0@0@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$SliceLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0SliceParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@ThresholdParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?AVERAGE@FillerParameter@caffe@@2W4FillerParameter_VarianceNorm@2@B")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$HingeLossLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$DataLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?has_slice_dim@SliceParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$checked_delete@V?$EltwiseLayer@M@caffe@@@boost@@YAXPAV?$EltwiseLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?Normalize@?$SGDSolver@N@caffe@@MAEXH@Z")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:?_Destroy@?$vector@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@V?$allocator@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@std@@@std@@IAEXPAV?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@0@Z")
#pragma comment(linker, "/include:?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??$_Ptr_cat@V?$shared_ptr@V?$Net@N@caffe@@@boost@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$shared_ptr@V?$Net@N@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:?default_instance_@ReductionParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?infogain_loss_param@V1LayerParameter@caffe@@QBEABVInfogainLossParameter@2@XZ")
#pragma comment(linker, "/include:?set_has_momentum@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$SliceLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_R0?AV?$SilenceLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?set_batch_size@?$MemoryDataLayer@M@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?resize@?$vector@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@QAEXI@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?set_has_pool@SPPParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??R?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@QAEIXZ")
#pragma comment(linker, "/include:?input_shape_size@NetParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?begin@?$RepeatedField@I@protobuf@google@@QBEPBIXZ")
#pragma comment(linker, "/include:?set_has_name@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$?0PBDX@?$vector@DV?$allocator@D@std@@@std@@QAE@PBD0@Z")
#pragma comment(linker, "/include:?has_train_net_param@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_09DEBCBGBA@sigma?5?$DO?50?$AA@")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$ImageDataLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@2@@Z")
#pragma comment(linker, "/include:?set_has_label@Datum@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?CanonicalAxisIndex@?$Blob@M@caffe@@QBEHH@Z")
#pragma comment(linker, "/include:??_E?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@WM@AEPAXI@Z")
#pragma comment(linker, "/include:??_C@_0BO@KMGNJAGI@Snapshotting?5solver?5state?5to?5?$AA@")
#pragma comment(linker, "/include:?NewFromPrototype@?$GenericTypeHandler@VParamSpec@caffe@@@internal@protobuf@google@@SAPAVParamSpec@caffe@@PBV56@PAVArena@34@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@MVNParameter@caffe@@8")
#pragma comment(linker, "/include:??_R0?AVCPUTimer@caffe@@@8")
#pragma comment(linker, "/include:??$Own@VSolverState@caffe@@@Arena@protobuf@google@@QAEXPAVSolverState@caffe@@@Z")
#pragma comment(linker, "/include:?CopyFrom@ParamSpec@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@EV?$allocator@E@std@@@std@@@std@@QAE@ABV?$allocator@E@1@@Z")
#pragma comment(linker, "/include:?DataLayerSetUp@?$DataLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$LRNLayer@N@caffe@@@detail@boost@@QAE@PAV?$LRNLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??0?$uniform_int@H@boost@@QAE@HH@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$InfogainLossLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?max_size@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??0?$uniform_int_distribution@H@rand@boost@@QAE@HH@Z")
#pragma comment(linker, "/include:??_E?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@WM@AEPAXI@Z")
#pragma comment(linker, "/include:??$_Umove@PAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@@?$vector@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@IAEPAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@PAV23@00@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@ReductionParameter@caffe@@8")
#pragma comment(linker, "/include:??_C@_0BB@DAOJMFNA@Check?5failed?3?5r?5?$AA@")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$Layer@N@caffe@@@detail@boost@@QAE@PAV?$Layer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_E?$ImageDataLayer@M@caffe@@WBJE@AEPAXI@Z")
#pragma comment(linker, "/include:??_R3?$ConvolutionLayer@M@caffe@@8")
#pragma comment(linker, "/include:?is_integral@?$integer_traits_base@G$0A@$0PPPP@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$Own@VDatum@caffe@@@Arena@protobuf@google@@QAEXPAVDatum@caffe@@@Z")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@PowerParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$InnerProductLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@VRNG@Caffe@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??$checked_delete@V?$ArgMaxLayer@M@caffe@@@boost@@YAXPAV?$ArgMaxLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?to_tick_count@?$time_resolution_traits@Utime_resolution_traits_adapted64_impl@date_time@boost@@$04$0PECEA@$05H@date_time@boost@@SA_JHHH_J@Z")
#pragma comment(linker, "/include:?set_has_scale@ExpParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?Backward_cpu@?$ReshapeLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_C@_0P@BMPFEBAE@mat_num?5?$DN?$DN?5num?$AA@")
#pragma comment(linker, "/include:?mutable_unknown_fields_slow@InternalMetadataWithArena@internal@protobuf@google@@AAEPAVUnknownFieldSet@34@XZ")
#pragma comment(linker, "/include:??_R4?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@6Boverflow_error@std@@@")
#pragma comment(linker, "/include:?frexp@@YAMMPAH@Z")
#pragma comment(linker, "/include:?stable_prod_grad@EltwiseParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?CopyFrom@LRNParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@$$CBVclone_base@exception_detail@boost@@V?$clone_impl@Ubad_alloc_@exception_detail@boost@@@23@@detail@boost@@YAXPAV?$shared_ptr@$$CBVclone_base@exception_detail@boost@@@1@PAV?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@1@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_R3?$MVNLayer@M@caffe@@8")
#pragma comment(linker, "/include:?Forward_gpu@?$MVNLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@$$QAV01@@Z")
#pragma comment(linker, "/include:??0?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?_Destroy@?$vector@U?$pair@NH@std@@V?$allocator@U?$pair@NH@std@@@2@@std@@IAEXPAU?$pair@NH@2@0@Z")
#pragma comment(linker, "/include:?kThresholdParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$MemoryDataLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_D?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@QAEXXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8")
#pragma comment(linker, "/include:??A?$vector@VDatum@caffe@@V?$allocator@VDatum@caffe@@@std@@@std@@QBEABVDatum@caffe@@I@Z")
#pragma comment(linker, "/include:?IsInitialized@HingeLossParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?clone@?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@V1LayerParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$FlattenLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?Engine_MIN@PoolingParameter@caffe@@2W4PoolingParameter_Engine@2@B")
#pragma comment(linker, "/include:??$Creator_MemoryDataLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??0?$SoftmaxLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$ReshapeLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?Forward_cpu@?$ThresholdLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$InnerProductLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?source@ImageDataParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??0?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@QAE@ABUbad_exception_@12@@Z")
#pragma comment(linker, "/include:?value@?$is_reference_impl@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$Blob@M@caffe@@@detail@boost@@QAE@PAV?$Blob@M@caffe@@@Z")
#pragma comment(linker, "/include:?value@?$is_arithmetic_impl@I@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?UnsafeArenaSwap@?$RepeatedPtrField@VBlobProto@caffe@@@protobuf@google@@QAEXPAV123@@Z")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@I@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?max_non_infinite_wait@timeout@detail@boost@@2KB")
#pragma comment(linker, "/include:??_R2?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??_C@_0P@FAPEIDLO@num_axes?5?$DO?$DN?5?91?$AA@")
#pragma comment(linker, "/include:?mutable_transform_param@V1LayerParameter@caffe@@QAEPAVTransformationParameter@2@XZ")
#pragma comment(linker, "/include:?Backward_cpu@?$SigmoidLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$DataTransformer@M@caffe@@8")
#pragma comment(linker, "/include:?Forward_cpu@?$LogLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$Own@VExpParameter@caffe@@@Arena@protobuf@google@@QAEXPAVExpParameter@caffe@@@Z")
#pragma comment(linker, "/include:?PoolMethod_ARRAYSIZE@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?engine@?$variate_generator@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@V?$bernoulli_distribution@N@23@@random@boost@@QAEAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@23@XZ")
#pragma comment(linker, "/include:?InternalSwap@EltwiseParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:??_7?$Im2colLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??_E?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@WM@AEPAXI@Z")
#pragma comment(linker, "/include:?GetCachedSize@PoolingParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$arena_destruct_object@VFillerParameter@caffe@@@internal@protobuf@google@@YAXPAX@Z")
#pragma comment(linker, "/include:??_R4bad_format_string@io@boost@@6B@")
#pragma comment(linker, "/include:?add_shape@DummyDataParameter@caffe@@QAEPAVBlobShape@2@XZ")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@1@@Z")
#pragma comment(linker, "/include:?VarianceNorm_MIN@FillerParameter@caffe@@2W4FillerParameter_VarianceNorm@2@B")
#pragma comment(linker, "/include:__CT??_R0?AVexception@boost@@@8??0exception@boost@@QAE@ABV01@@Z2044")
#pragma comment(linker, "/include:?_Root@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$TanHLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?kTransformParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?Delete@?$GenericTypeHandler@VNetStateRule@caffe@@@internal@protobuf@google@@SAXPAVNetStateRule@caffe@@PAVArena@34@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@VDB@db@caffe@@@detail@boost@@QAE@PAVDB@db@caffe@@@Z")
#pragma comment(linker, "/include:??$get@$0A@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z")
#pragma comment(linker, "/include:?Swap@V1LayerParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_pd@PAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@VNo_Op@?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@23@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R0?AV?$PositiveUnitballFiller@M@caffe@@@8")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_R0?AU?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:??_C@_0CN@JLBHLKNM@Check?5failed?3?5WaitForInternalThr@")
#pragma comment(linker, "/include:?value@?$int_@$02@mpl@boost@@2HB")
#pragma comment(linker, "/include:??1?$FlattenLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$_Uninit_fill_n@NINN@std@@YAXPANIPBNAAU?$_Wrap_alloc@V?$allocator@N@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?default_instance_@FillerParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??_R0?AVSolverParameter@caffe@@@8")
#pragma comment(linker, "/include:?Backward_cpu@?$FilterLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$ExpLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??$addressof@I@std@@YAPAIAAI@Z")
#pragma comment(linker, "/include:?kernel_w@PoolingParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$SliceLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_C@_0CI@OBCAPNCH@datum_channels?5?$DN?$DN?5data_mean_?4cha@")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PAVexception@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_C@_0CK@FEHEJCHA@Unknown?5parameter?5shuffle?5for?5la@")
#pragma comment(linker, "/include:?value@?$operator_exists@V?$basic_istream@DU?$char_traits@D@std@@@std@@G@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_8?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@7B@")
#pragma comment(linker, "/include:?clear@?$vector@PAV?$FlattenLayer@N@caffe@@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:??_R3?$ConstantFiller@N@caffe@@8")
#pragma comment(linker, "/include:?_Pop_back_n@?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@QAEXI@Z")
#pragma comment(linker, "/include:??0?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@QAE@ABVruntime_error@std@@@Z")
#pragma comment(linker, "/include:?a_y@?$br_mul@$00$00@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:?GetMetadata@DataParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@1@PAU?$pair@$$CBU?$pair@HH@std@@U12@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??_7SoftmaxParameter@caffe@@6B@")
#pragma comment(linker, "/include:?set_beta@V0LayerParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??_R2domain_error@std@@8")
#pragma comment(linker, "/include:??_R3?$SoftmaxWithLossLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$?0QBD@?$put_holder@DU?$char_traits@D@std@@@detail@io@boost@@QAE@ABQBD@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$SliceLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?unknown_fields@BlobShape@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?mutable_float_data@Datum@caffe@@QAEPAV?$RepeatedField@M@protobuf@google@@XZ")
#pragma comment(linker, "/include:?gInstantiationGuardDropoutLayer@caffe@@3DA")
#pragma comment(linker, "/include:??_R3InternalThread@caffe@@8")
#pragma comment(linker, "/include:?default_instance_@PowerParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??_7?$BilinearFiller@M@caffe@@6B@")
#pragma comment(linker, "/include:?SharedCtor@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Ptr_cat@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:??_R3?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R3?$ArgMaxLayer@N@caffe@@8")
#pragma comment(linker, "/include:?clone@?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:?MicroSeconds@Timer@caffe@@UAEMXZ")
#pragma comment(linker, "/include:?set_has_exp_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?SetCachedSize@SoftmaxParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$SilenceLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$SilenceLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?InternalSwap@SigmoidParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?_Reserve@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@SAAAU?$pair@$$CBU?$pair@HH@std@@M@2@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?dropout_ratio@DropoutParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?localtime@c_time@date_time@boost@@SAPAUtm@@PB_JPAU4@@Z")
#pragma comment(linker, "/include:?swap@?$shared_ptr@Vthread@boost@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:?set_has_height@Datum@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??A?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@QAEAAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@I@Z")
#pragma comment(linker, "/include:?MergeFrom@DummyDataParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?kKFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$_Ptr_cat@DD@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBDPAD@Z")
#pragma comment(linker, "/include:??$_Move@AAH@std@@YA$$QAHAAH@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@LRNParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?MergeFrom@NetParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$SplitLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@PReLUParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??_R0?AV?$ImageDataLayer@M@caffe@@@8")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$BNLLLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$addressof@U?$pair@NH@std@@@std@@YAPAU?$pair@NH@0@AAU10@@Z")
#pragma comment(linker, "/include:?SolverParameter_SolverMode_descriptor_@?A0x5e4fc710@caffe@@3PBVEnumDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$DataTransformer@M@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@V?$DataTransformer@M@caffe@@@1@PAV?$DataTransformer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_R0?AV?$Net@N@caffe@@@8")
#pragma comment(linker, "/include:?UpgradeV1Net@caffe@@YA_NABVNetParameter@1@PAV21@@Z")
#pragma comment(linker, "/include:?value@?$is_unsigned_imp@_K@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R2ReLUParameter@caffe@@8")
#pragma comment(linker, "/include:?set_has_ignore_label@AccuracyParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$Layer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$_Distance2@V?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@H@std@@YAXV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@0@0AAHUrandom_access_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$Layer@M@caffe@@@detail@boost@@QAE@PAV?$Layer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0EC@NIGBPALB@e?4g?4?0?5if?5softmax?5axis?5?$DN?$DN?51?5and?5p@")
#pragma comment(linker, "/include:?has_kernel_size@PoolingParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?history_size@SolverState@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??_C@_0BK@PPHGIGEL@Unknown?5blob_share_mode?3?5?$AA@")
#pragma comment(linker, "/include:?batch_size@?$MemoryDataLayer@N@caffe@@QAEHXZ")
#pragma comment(linker, "/include:?CopyFrom@ContrastiveLossParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??1?$MemoryDataLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$?0V?$InfogainLossLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$InfogainLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?default_instance@LayerParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??$construct@PAV?$FlattenLayer@N@caffe@@PAV12@@?$allocator_traits@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@SAXAAV?$allocator@PAV?$FlattenLayer@N@caffe@@@1@PAPAV?$FlattenLayer@N@caffe@@$$QAPAV34@@Z")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?value@?$is_const_rvalue_filter@_J@detail@boost@@2_NB")
#pragma comment(linker, "/include:?kFloatSize@WireFormatLite@internal@protobuf@google@@2HB")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$FlattenLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?den@?$ratio@$0GE@$00@boost@@2_JB")
#pragma comment(linker, "/include:?kConvolutionParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?default_instance@NetStateRule@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??_R2?$BNLLLayer@M@caffe@@8")
#pragma comment(linker, "/include:?CreateLayer@?$LayerRegistry@M@caffe@@SA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@2@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$DataTransformer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z")
#pragma comment(linker, "/include:?GetArenaNoVirtual@?$RepeatedPtrField@VFillerParameter@caffe@@@protobuf@google@@IBEPAVArena@23@XZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@VCaffe@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$ReductionLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEXXZ")
#pragma comment(linker, "/include:??$?0V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@?$shared_ptr@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@boost@@QAE@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@1@@Z")
#pragma comment(linker, "/include:??_Glocale@std@@QAEPAXI@Z")
#pragma comment(linker, "/include:??_7?$TanHLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?capacity@?$vector@PAV?$FlattenLayer@M@caffe@@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VParamSpec@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVParamSpec@caffe@@PAE@Z")
#pragma comment(linker, "/include:??0?$SPPLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$Net@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??$_Uninit_def_fill_n@PAV?$shared_ptr@V?$Net@N@caffe@@@boost@@IV?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@V12@@std@@YAXPAV?$shared_ptr@V?$Net@N@caffe@@@boost@@IAAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?lr_policy@SolverParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?kAxisFieldNumber@InnerProductParameter@caffe@@2HB")
#pragma comment(linker, "/include:?_Xlen@?$vector@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@IBEXXZ")
#pragma comment(linker, "/include:??_C@_0BM@LJGNLCLG@using?5one?5of?5these?5fields?3?5?$AA@")
#pragma comment(linker, "/include:?mutable_memory_data_param@LayerParameter@caffe@@QAEPAVMemoryDataParameter@2@XZ")
#pragma comment(linker, "/include:?offset@?$Blob@N@caffe@@QBEHABV?$vector@HV?$allocator@H@std@@@std@@@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$PoolingLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_C@_0BG@LLMLKJA@float_prior?$DM?$CF1?$CF?$DO?$CI?$CF1?$CF?$CJ?$AA@")
#pragma comment(linker, "/include:?NormRegion_MIN@LRNParameter@caffe@@2W4LRNParameter_NormRegion@2@B")
#pragma comment(linker, "/include:??_7?$SilenceLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?cpu_data@?$Blob@N@caffe@@QBEPBNXZ")
#pragma comment(linker, "/include:?_Assign_rv@?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z")
#pragma comment(linker, "/include:?set_has_hinge_loss_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$LRNLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$OwnInternal@VSigmoidParameter@caffe@@@Arena@protobuf@google@@AAEXPAVSigmoidParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$DeconvolutionLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R2?$UniformFiller@M@caffe@@8")
#pragma comment(linker, "/include:?kTopFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?descriptor@ExpParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?has_pool@PoolingParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?set_has_base_lr@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?digits@?$numeric_limits@D@std@@2HB")
#pragma comment(linker, "/include:??_C@_0O@BMGCJJBI@Cause?5unknown?$AA@")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$InfogainLossLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?round_style@_Num_float_base@std@@2W4float_round_style@2@B")
#pragma comment(linker, "/include:??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z")
#pragma comment(linker, "/include:??$destroy@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@?$_Wrap_alloc@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@QAEXPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@Z")
#pragma comment(linker, "/include:??$apply@I@?$integer_log2_impl@$01@detail@random@boost@@SAHIH@Z")
#pragma comment(linker, "/include:?MergeFrom@SliceParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??_R2bad_format_string@io@boost@@8")
#pragma comment(linker, "/include:?learned_net@SolverState@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?unknown_fields@TanHParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$PoolingLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?size@?$vector@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??0?$shared_ptr@VSyncedMemory@caffe@@@boost@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$Filler@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@SAIABV?$allocator@PAV?$FlattenLayer@M@caffe@@@2@@Z")
#pragma comment(linker, "/include:?InitAsDefaultInstance@HDF5DataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PAH@detail@boost@@2_NB")
#pragma comment(linker, "/include:?SetCachedSize@ConcatParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?get_impl@?$optional_base@Vlocale@std@@@optional_detail@boost@@IAEAAVlocale@std@@XZ")
#pragma comment(linker, "/include:?Forward_cpu@?$SliceLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_C@_0O@EOCNLMKD@EuclideanLoss?$AA@")
#pragma comment(linker, "/include:?num@?$ratio@$0PECEA@$00@boost@@2_JB")
#pragma comment(linker, "/include:??$throw_exception@Vtoo_many_args@io@boost@@@boost@@YAXABVtoo_many_args@io@0@@Z")
#pragma comment(linker, "/include:?size@?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_C@_0M@POFCCNHN@?4caffemodel?$AA@")
#pragma comment(linker, "/include:?Merge@?$GenericTypeHandler@VBlobProto@caffe@@@internal@protobuf@google@@SAXABVBlobProto@caffe@@PAV56@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@ThresholdParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_7?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??$transform@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@P6AHH@Z@std@@YA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@00P6AHH@Z@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVV0LayerParameter@caffe@@@internal@protobuf@google@@YAPBVV0LayerParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?deallocate@?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@QAEXPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@2@I@Z")
#pragma comment(linker, "/include:??0overflow_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z")
#pragma comment(linker, "/include:?type@?$DummyDataLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??_C@_0CC@IMPKCEBH@MaxBottomBlobs?$CI?$CJ?5?$DO?$DN?5bottom?4size?$CI@")
#pragma comment(linker, "/include:??_C@_09OPLEBMP@hdf5_data?$AA@")
#pragma comment(linker, "/include:?Get@?$RepeatedPtrField@VNetStateRule@caffe@@@protobuf@google@@QBEABVNetStateRule@caffe@@H@Z")
#pragma comment(linker, "/include:??0?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?has_infinity@_Num_base@std@@2_NB")
#pragma comment(linker, "/include:?_Destroy@?$vector@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@IAEXPAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@2@0@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$SoftmaxLayer@M@caffe@@8")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@TransformationParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$SoftmaxLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$?0V?$InfogainLossLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$InfogainLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_R3?$SigmoidLayer@M@caffe@@8")
#pragma comment(linker, "/include:??$MergeFromInnerLoop@VTypeHandler@?$RepeatedPtrField@VFillerParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@AAEXPAPAX0HH@Z")
#pragma comment(linker, "/include:?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?Forward@?$Net@N@caffe@@QAEABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV34@PAN@Z")
#pragma comment(linker, "/include:??$raise_error@Voverflow_error@std@@N@detail@policies@math@boost@@YAXPBD0@Z")
#pragma comment(linker, "/include:??_C@_0CB@ECJMAFNA@ExactNumTopBlobs?$CI?$CJ?5?$DN?$DN?5top?4size?$CI?$CJ@")
#pragma comment(linker, "/include:?type@?$MVNLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$InfogainLossLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?kOptionsFieldNumber@FieldDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:??0?$optional@Vlocale@std@@@boost@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??$_Umove@PAU?$pair@MH@std@@@?$vector@U?$pair@MH@std@@V?$allocator@U?$pair@MH@std@@@2@@std@@IAEPAU?$pair@MH@1@PAU21@00@Z")
#pragma comment(linker, "/include:??$Creator_ImageDataLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?_Right@?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAAAPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??$?0AAHAAHX@?$pair@HH@std@@QAE@AAH0@Z")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@TanHParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?weight_filler@V0LayerParameter@caffe@@QBEABVFillerParameter@2@XZ")
#pragma comment(linker, "/include:??_C@_04FJHINJAO@tanh?$AA@")
#pragma comment(linker, "/include:?Forward_gpu@?$BNLLLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:?GetCachedSize@EltwiseParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_G?$SPPLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$ExpLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?set_has_test_interval@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$Net@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_R0?AV?$MSRAFiller@N@caffe@@@8")
#pragma comment(linker, "/include:??$_Move@AAI@std@@YA$$QAIAAI@Z")
#pragma comment(linker, "/include:?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z")
#pragma comment(linker, "/include:?AllowForceBackward@?$ContrastiveLossLayer@N@caffe@@UBE_NH@Z")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAU?$pair@MH@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@MH@std@@@std@@@2@@std@@YAPAU?$pair@MH@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@MH@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?WriteFloatNoTagToArray@WireFormatLite@internal@protobuf@google@@SAPAEMPAE@Z")
#pragma comment(linker, "/include:?is_special@?$int_adapter@I@date_time@boost@@QBE_NXZ")
#pragma comment(linker, "/include:?InitAsDefaultInstance@ParamSpec@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?is_infinity@?$int_adapter@I@date_time@boost@@QBE_NXZ")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?is_nan@?$int_adapter@_J@date_time@boost@@QBE_NXZ")
#pragma comment(linker, "/include:??$_Insert_at@AAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@1@_NPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@AAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@1@Z")
#pragma comment(linker, "/include:?kTrainStateFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:?gInstantiationGuardMultinomialLogisticLossLayer@caffe@@3DA")
#pragma comment(linker, "/include:??_7?$ArgMaxLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??0?$constrained_value@V?$simple_exception_policy@G$00$0BP@Ubad_day_of_month@gregorian@boost@@@CV@boost@@@CV@boost@@QAE@G@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$EuclideanLossLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?MaxTopBlobs@?$Layer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?layer@PythonParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?ThresholdParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0CE@NLFDMKNN@Failed?5to?5parse?5NetParameter?5fil@")
#pragma comment(linker, "/include:??_R4out_of_range@std@@6B@")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$vector@HV?$allocator@H@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@2@@std@@YAPAV?$vector@HV?$allocator@H@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?set_has_inner_product_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R4NetParameter@caffe@@6B@")
#pragma comment(linker, "/include:??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??_C@_0FL@DBBNMMLH@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??1?$GaussianFiller@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$SPPLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R2?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@1@@Z")
#pragma comment(linker, "/include:?SetCachedSize@EltwiseParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?mutable_slice_point@SliceParameter@caffe@@QAEPAV?$RepeatedField@I@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$_Val_type@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MH@std@@@std@@@std@@@std@@@std@@YAPAU?$pair@MH@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MH@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?assign_value@?$optional_base@Vlocale@std@@@optional_detail@boost@@IAEXABVlocale@std@@U?$bool_@$0A@@mpl@3@@Z")
#pragma comment(linker, "/include:?default_instance_@MemoryDataParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??$checked_delete@V?$SigmoidLayer@M@caffe@@@boost@@YAXPAV?$SigmoidLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??1?$EuclideanLossLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_C@_0DC@MEKNLJNE@Layer?5cannot?5backpropagate?5to?5fi@")
#pragma comment(linker, "/include:?CUDNN@ConvolutionParameter@caffe@@2W4ConvolutionParameter_Engine@2@B")
#pragma comment(linker, "/include:??$?0V?$MemoryDataLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$MemoryDataLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?is_modulo@_Num_float_base@std@@2_NB")
#pragma comment(linker, "/include:?_Mysize@?$tuple@$$QAH@std@@2IB")
#pragma comment(linker, "/include:??$Own@VReLUParameter@caffe@@@Arena@protobuf@google@@QAEXPAVReLUParameter@caffe@@@Z")
#pragma comment(linker, "/include:?SharedDtor@AccuracyParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_C@_0BA@MLPCIKGK@?5?5?5?5?$FLBackward?$FN?5?$AA@")
#pragma comment(linker, "/include:??$construct@PAV?$Blob@N@caffe@@PAV12@@?$_Wrap_alloc@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@QAEXPAPAV?$Blob@N@caffe@@$$QAPAV23@@Z")
#pragma comment(linker, "/include:?set_has_stride_h@PoolingParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?PoolMethod_ARRAYSIZE@PoolingParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@@Z")
#pragma comment(linker, "/include:??$swap@M@std@@YAXAAM0@Z")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??_R2?$DeconvolutionLayer@M@caffe@@8")
#pragma comment(linker, "/include:?set_has_memory_data_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?MergeFrom@Datum@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?kPositiveIntValueFieldNumber@UninterpretedOption@protobuf@google@@2HB")
#pragma comment(linker, "/include:?SharedCtor@NetParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?set_has_module@PythonParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Distance@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@0AAI@Z")
#pragma comment(linker, "/include:?SharedDtor@ArgMaxParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Ptr_cat@U?$pair@MH@std@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$pair@MH@0@0@Z")
#pragma comment(linker, "/include:?unknown_fields@DataParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:?get_rep@?$time_duration@V0posix_time@boost@@V?$time_resolution_traits@Utime_resolution_traits_adapted64_impl@date_time@boost@@$04$0PECEA@$05H@date_time@2@@date_time@boost@@QBE?AV?$int_adapter@_J@23@XZ")
#pragma comment(linker, "/include:?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:?PROD@EltwiseParameter@caffe@@2W4EltwiseParameter_EltwiseOp@2@B")
#pragma comment(linker, "/include:?type@?$SliceLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$MVNLayer@M@caffe@@@detail@boost@@QAE@PAV?$MVNLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$_Move@AAPAVArgMaxParameter@caffe@@@std@@YA$$QAPAVArgMaxParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?V1LayerParameter_LayerType_IsValid@caffe@@YA_NH@Z")
#pragma comment(linker, "/include:?set_power@PowerParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?NetState_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@$$QA_N@Z")
#pragma comment(linker, "/include:?param_size@LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?has_mirror@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?has_softmax_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?SetCachedSize@NetStateRule@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:??_7?$ReductionLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?InternalSwap@TransformationParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:??_G?$shared_ptr@V?$Blob@N@caffe@@@boost@@QAEPAXI@Z")
#pragma comment(linker, "/include:?has_label@Datum@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$_Uninit_def_fill_n@NIN@std@@YAXPANIAAU?$_Wrap_alloc@V?$allocator@N@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??_R0?AVTanHParameter@caffe@@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$BaseConvolutionLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBHH@std@@ABUpiecewise_construct_t@2@V?$tuple@ABH@2@V?$tuple@$$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBHH@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABH@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?CopyFrom@HDF5OutputParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$ArgMaxLayer@M@caffe@@@detail@boost@@QAE@PAV?$ArgMaxLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$WindowDataLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?include@V1LayerParameter@caffe@@QBEABVNetStateRule@2@H@Z")
#pragma comment(linker, "/include:??$forward@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@YA$$QAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@AAV12@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$LogLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PAV?$basic_istream@DU?$char_traits@D@std@@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$ReductionLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$ReductionLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?set_has_alpha@LRNParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?scale@WindowDataParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?begin@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??_R2?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??_C@_0BB@IJCPHGEM@slice_axis_?5?$DO?$DN?50?$AA@")
#pragma comment(linker, "/include:?kFixed64Size@WireFormatLite@internal@protobuf@google@@2HB")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@NH@std@@@std@@@std@@@std@@YAXPAU?$pair@NH@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@NH@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$reset@VCursor@db@caffe@@@?$shared_ptr@VCursor@db@caffe@@@boost@@QAEXPAVCursor@db@caffe@@@Z")
#pragma comment(linker, "/include:?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B")
#pragma comment(linker, "/include:??$reset@V?$EltwiseLayer@M@caffe@@@?$shared_ptr@V?$EltwiseLayer@M@caffe@@@boost@@QAEXPAV?$EltwiseLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$Im2colLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@$$$V@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?set_min@FillerParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??_R4?$DataTransformer@N@caffe@@6B@")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$PowerLayer@M@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$InnerProductLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$Filler@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$DummyDataLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:__CT??_R0?AVexception@boost@@@8??0exception@boost@@QAE@ABV01@@Z20")
#pragma comment(linker, "/include:??$ReadPackedPrimitive@H$04@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAV?$RepeatedField@H@23@@Z")
#pragma comment(linker, "/include:??_R2?$EuclideanLossLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@PAU1234@U?$_Wrap_alloc@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@@std@@YAPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@PAU1234@00AAU?$_Wrap_alloc@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$Blob@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$PoolingLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$FlattenLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?has_level@NetState@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$_Pop_heap@PAU?$pair@MH@std@@HU12@U?$greater@U?$pair@MH@std@@@2@@std@@YAXPAU?$pair@MH@0@00$$QAU10@U?$greater@U?$pair@MH@std@@@0@PAH@Z")
#pragma comment(linker, "/include:?phase@NetState@caffe@@QBE?AW4Phase@2@XZ")
#pragma comment(linker, "/include:?gpu_diff@?$Blob@I@caffe@@QBEPBIXZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$DeconvolutionLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$DeconvolutionLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?_Tidy@?$vector@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVNetStateRule@caffe@@@internal@protobuf@google@@YAPBVNetStateRule@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?image_data_param@LayerParameter@caffe@@QBEABVImageDataParameter@2@XZ")
#pragma comment(linker, "/include:??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?has_type@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@U?$pair@NH@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?begin@?$vector@U?$pair@MH@std@@V?$allocator@U?$pair@MH@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MH@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z")
#pragma comment(linker, "/include:?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B")
#pragma comment(linker, "/include:??$?0V?$PoolingLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$PoolingLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?group@V0LayerParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?gInstantiationGuardThresholdLayer@caffe@@3DA")
#pragma comment(linker, "/include:?CopyFrom@BlobShape@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:?mutable_propagate_down@LayerParameter@caffe@@QAEPAV?$RepeatedField@_N@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R4?$LRNLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?InitAsDefaultInstance@Datum@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$addressof@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@AAV12@@Z")
#pragma comment(linker, "/include:?set_cache_images@WindowDataParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:??$MergeFrom@VTypeHandler@?$RepeatedPtrField@VLayerParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXABV0123@@Z")
#pragma comment(linker, "/include:__real@3f000000")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z")
#pragma comment(linker, "/include:?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??1?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VNetParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVNetParameter@caffe@@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@U?$pair@HH@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?biasterm@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$EuclideanLossLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??0?$pair@HH@std@@QAE@ABH0@Z")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@ThresholdParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$AccuracyLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$OwnInternal@VFillerParameter@caffe@@@Arena@protobuf@google@@AAEXPAVFillerParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:??$Destroy@VTypeHandler@?$RepeatedPtrField@VNetStateRule@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXXZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$ExpLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??$forward@PAV?$FlattenLayer@N@caffe@@@std@@YA$$QAPAV?$FlattenLayer@N@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?CopyFrom@SoftmaxParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?Reshape@?$ReshapeLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$ConvolutionLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_R4?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@6Bthread_resource_error@2@@")
#pragma comment(linker, "/include:??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:?_Mysize@?$tuple@$$QAU?$pair@HH@std@@@std@@2IB")
#pragma comment(linker, "/include:??0ThresholdParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??_C@_0BJ@IMDMNHBI@bottom?$FL0?$FN?9?$DOheight?$CI?$CJ?5?$DN?$DN?51?$AA@")
#pragma comment(linker, "/include:??_7runtime_error@std@@6B@")
#pragma comment(linker, "/include:??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z")
#pragma comment(linker, "/include:??_G?$shared_ptr@V?$Blob@M@caffe@@@boost@@QAEPAXI@Z")
#pragma comment(linker, "/include:?New@?$GenericTypeHandler@VFillerParameter@caffe@@@internal@protobuf@google@@SAPAVFillerParameter@caffe@@PAVArena@34@@Z")
#pragma comment(linker, "/include:??$OwnInternal@VPythonParameter@caffe@@@Arena@protobuf@google@@AAEXPAVPythonParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:??_R0?AV?$ReductionLayer@N@caffe@@@8")
#pragma comment(linker, "/include:?New@HDF5OutputParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@@std@@QBE?AV01@H@Z")
#pragma comment(linker, "/include:?CopyFrom@PowerParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8")
#pragma comment(linker, "/include:??$emplace_hint@ABUpiecewise_construct_t@std@@V?$tuple@$$QAU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?select_on_container_copy_construction@?$allocator@D@std@@QBE?AV12@XZ")
#pragma comment(linker, "/include:?MergeFrom@HingeLossParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$DataLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$_Umove@PAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@IAEPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@PAU2345@00@Z")
#pragma comment(linker, "/include:?SharedDtor@HDF5OutputParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??1BlobShape@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R0?AVFunctionClosure0@internal@protobuf@google@@@8")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$PReLULayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??0FillerParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??_D?$basic_fstream@DU?$char_traits@D@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@2@XZ")
#pragma comment(linker, "/include:?IsInitialized@SoftmaxParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$MemoryDataLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R3?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$InfogainLossLayer@M@caffe@@@detail@boost@@QAE@PAV?$InfogainLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_R2PythonParameter@caffe@@8")
#pragma comment(linker, "/include:??_C@_02KEGNLNML@?0?5?$AA@")
#pragma comment(linker, "/include:?has_clip_gradients@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_0BA@MJAMLMD@Skipping?5first?5?$AA@")
#pragma comment(linker, "/include:??0?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@QAE@ABU012@@Z")
#pragma comment(linker, "/include:?MinBottomBlobs@?$ConcatLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$PowerLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?value@?$operator_returns_void@V?$basic_istream@DU?$char_traits@D@std@@@std@@G@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$_Move@AAPAVConcatParameter@caffe@@@std@@YA$$QAPAVConcatParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??F?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?gInstantiationGuardDeconvolutionLayer@caffe@@3DA")
#pragma comment(linker, "/include:??_R3bad_alloc_@exception_detail@boost@@8")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:??_R4LossParameter@caffe@@6B@")
#pragma comment(linker, "/include:??_R4?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@6Bdomain_error@std@@@")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Net@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?SharedCtor@ConvolutionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?get@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QBEPAV?$Layer@N@caffe@@XZ")
#pragma comment(linker, "/include:?mirror@ImageDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?_Tidy@?$vector@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@IAEXXZ")
#pragma comment(linker, "/include:??_7?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??_R3?$PReLULayer@N@caffe@@8")
#pragma comment(linker, "/include:??1V0LayerParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_B?1??Registry@?$LayerRegistry@N@caffe@@SAAAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@XZ@51")
#pragma comment(linker, "/include:?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAV?$FlattenLayer@N@caffe@@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@2@XZ")
#pragma comment(linker, "/include:??_C@_0BN@GAHEFELO@Network?5initialization?5done?4?$AA@")
#pragma comment(linker, "/include:?_Reserve@?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??_C@_0DC@DPGAJIHH@Note?5that?5future?5Caffe?5releases?5@")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@N@std@@@std@@@std@@YAXPAN0AAU?$_Wrap_alloc@V?$allocator@N@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?shift@PowerParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:??_R4?$SPPLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??$Creator_WindowDataLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?alpha@V0LayerParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?_Buy@?$vector@NV?$allocator@N@std@@@std@@IAE_NI@Z")
#pragma comment(linker, "/include:?test_net@SolverParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z")
#pragma comment(linker, "/include:??_R0?AVbad_alloc@std@@@8")
#pragma comment(linker, "/include:?default_instance_@LogParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?EltwiseParameter_EltwiseOp_descriptor@caffe@@YAPBVEnumDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@FunctionClosure0@internal@protobuf@google@@8")
#pragma comment(linker, "/include:__real@3e70000000000000")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:?day_count@?$date@V0gregorian@boost@@Vgregorian_calendar@12@Vdate_duration@12@@date_time@boost@@QBE?AV?$int_adapter@I@23@XZ")
#pragma comment(linker, "/include:?set_has_layer@PythonParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$SoftmaxLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?ABS_D@?$ratio@$0PECEA@$00@boost@@0_JB")
#pragma comment(linker, "/include:?_Reserve@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?set_num_output@V0LayerParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?_Grow_to@?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@IBEII@Z")
#pragma comment(linker, "/include:??1DataParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?CopyFrom@ConvolutionParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?ConvolutionParameter_Engine_descriptor@caffe@@YAPBVEnumDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??1handle_manager@win32@detail@boost@@QAE@XZ")
#pragma comment(linker, "/include:?InitAsDefaultInstance@ReLUParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_C@_0BJ@NPCHGOOF@Unknown?5database?5backend?$AA@")
#pragma comment(linker, "/include:?InitAsDefaultInstance@ThresholdParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?kIterSizeFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R3?$FilterLayer@N@caffe@@8")
#pragma comment(linker, "/include:??0clone_base@exception_detail@boost@@QAE@ABV012@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$InfogainLossLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@HingeLossParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z")
#pragma comment(linker, "/include:??1?$DeconvolutionLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@V?$shared_ptr@V?$Net@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R4?$ReLULayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??$_Move@AAM@std@@YA$$QAMAAM@Z")
#pragma comment(linker, "/include:?set_max@FillerParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?set_shift@LogParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$NeuronLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_C@_0BF@GFOIGHKN@infogain?9?$DOnum?$CI?$CJ?5?$DN?$DN?51?$AA@")
#pragma comment(linker, "/include:?MinTopBlobs@?$SPPLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??_7bad_exception_@exception_detail@boost@@6Bbad_exception@std@@@")
#pragma comment(linker, "/include:??_R2?$DropoutLayer@M@caffe@@8")
#pragma comment(linker, "/include:?has_flatten_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?kAllowAliasFieldNumber@EnumOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$ReshapeLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$ContrastiveLossLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??1?$ConstantFiller@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$DataTransformer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$_Uninit_move@PAU?$pair@NH@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@NH@std@@@std@@@2@@std@@YAPAU?$pair@NH@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@NH@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?kAxisFieldNumber@FlattenParameter@caffe@@2HB")
#pragma comment(linker, "/include:?Snapshot@?$Solver@N@caffe@@IAEXXZ")
#pragma comment(linker, "/include:?const_min@?$integer_traits_base@G$0A@$0PPPP@@detail@boost@@2GB")
#pragma comment(linker, "/include:?time@?$_Locbase@H@std@@2HB")
#pragma comment(linker, "/include:?allocate@?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@QAEPAV?$vector@MV?$allocator@M@std@@@2@I@Z")
#pragma comment(linker, "/include:??$?0Vthread@boost@@@shared_count@detail@boost@@QAE@PAVthread@2@@Z")
#pragma comment(linker, "/include:?dummy_data_param@LayerParameter@caffe@@QBEABVDummyDataParameter@2@XZ")
#pragma comment(linker, "/include:?New@LogParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_C@_08KDPAKEIB@HDF5Data?$AA@")
#pragma comment(linker, "/include:?IncrementRecursionDepth@CodedInputStream@io@protobuf@google@@QAE_NXZ")
#pragma comment(linker, "/include:??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??$enable_error_info@Vbad_alloc@std@@@boost@@YA?AU?$error_info_injector@Vbad_alloc@std@@@exception_detail@0@ABVbad_alloc@std@@@Z")
#pragma comment(linker, "/include:?ReadProtoFromTextFile@caffe@@YA_NPBDPAVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?set_has_force_encoded_color@DataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$ContrastiveLossLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??0RepeatedPtrFieldBase@internal@protobuf@google@@IAE@XZ")
#pragma comment(linker, "/include:??_C@_04IJPPGBJD@warp?$AA@")
#pragma comment(linker, "/include:??_R2?$PoolingLayer@N@caffe@@8")
#pragma comment(linker, "/include:?AddMatVector@?$MemoryDataLayer@M@caffe@@UAEXABV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@ABV?$vector@HV?$allocator@H@std@@@4@@Z")
#pragma comment(linker, "/include:?MergeFrom@PReLUParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?kInitialSize@?$RepeatedField@N@protobuf@google@@0HB")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$addressof@$$CBV?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@YAPBV?$shared_ptr@V?$Blob@M@caffe@@@boost@@ABV12@@Z")
#pragma comment(linker, "/include:?kUninterpretedOptionFieldNumber@EnumValueOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:?max_size@?$vector@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBU?$pair@HH@std@@M@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@1@PAU?$pair@$$CBU?$pair@HH@std@@M@1@@Z")
#pragma comment(linker, "/include:?scale_data@?$Blob@M@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QBEAANXZ")
#pragma comment(linker, "/include:?gInstantiationGuardSliceLayer@caffe@@3DA")
#pragma comment(linker, "/include:?clone@?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:??$Add@VTypeHandler@?$RepeatedPtrField@VNetState@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEPAVNetState@caffe@@PAV45@@Z")
#pragma comment(linker, "/include:??0ptime@posix_time@boost@@QAE@XZ")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$Filler@M@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?significand@?$fp_traits_non_native@MUsingle_precision@detail@math@boost@@@detail@math@boost@@2IB")
#pragma comment(linker, "/include:?Engine_MAX@ReLUParameter@caffe@@2W4ReLUParameter_Engine@2@B")
#pragma comment(linker, "/include:?MinBottomBlobs@?$InfogainLossLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?ReshapeLike@?$Blob@I@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z")
#pragma comment(linker, "/include:??$_Move@AAPAV?$Blob@M@caffe@@@std@@YA$$QAPAV?$Blob@M@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?has_k@LRNParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?_Lbound@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@ABH@Z")
#pragma comment(linker, "/include:?capacity@?$vector@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?value@?$has_member_unlock@PAV?$unique_lock@Vmutex@boost@@@boost@@$0A@@detail@sync@boost@@2_NB")
#pragma comment(linker, "/include:??_C@_0DA@HAIKBKOB@corresponding?5to?5?$CInum?0?5channels?0@")
#pragma comment(linker, "/include:??$GetReferenceableValue@PAV?$Blob@N@caffe@@@google@@YAABQAV?$Blob@N@caffe@@ABQAV12@@Z")
#pragma comment(linker, "/include:?sign@?$fp_traits_non_native@MUsingle_precision@detail@math@boost@@@detail@math@boost@@2IB")
#pragma comment(linker, "/include:??$_Move@AAPAV?$Blob@N@caffe@@@std@@YA$$QAPAV?$Blob@N@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??$forward_as_tuple@ABU?$pair@HH@std@@@std@@YA?AV?$tuple@ABU?$pair@HH@std@@@0@ABU?$pair@HH@0@@Z")
#pragma comment(linker, "/include:?SigmoidParameter_Engine_descriptor_@?A0x5e4fc710@caffe@@3PBVEnumDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@6Bbad_alloc@std@@@")
#pragma comment(linker, "/include:?value@?$is_error_code_enum@Vfuture_error@boost@@@system@boost@@2_NB")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VEltwiseParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVEltwiseParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_R3?$MultinomialLogisticLossLayer@M@caffe@@8")
#pragma comment(linker, "/include:?InitAsDefaultInstance@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Move@AAPAVV0LayerParameter@caffe@@@std@@YA$$QAPAVV0LayerParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??_E?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@$4PPPPPPPM@CI@AEPAXI@Z")
#pragma comment(linker, "/include:?_Grow_to@?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@IBEII@Z")
#pragma comment(linker, "/include:??_R0?AV?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:?CopyFrom@DropoutParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@BlobProto@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?ReLUParameter_Engine_descriptor@caffe@@YAPBVEnumDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?swap@?$shared_ptr@V?$PowerLayer@N@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:?SetCachedSize@V1LayerParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?Clear@StringTypeHandlerBase@internal@protobuf@google@@SAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:??$vLn@M@@YAXHPBMPAM@Z")
#pragma comment(linker, "/include:??_C@_0CF@DKMGBIBO@num_axes?5must?5be?5?$DO?$DN?50?0?5or?5?91?5for@")
#pragma comment(linker, "/include:??_C@_0BM@KPJICJKH@bottom?4size?$CI?$CJ?5?$DN?$DN?5top?4size?$CI?$CJ?$AA@")
#pragma comment(linker, "/include:??_R4?$SoftmaxWithLossLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??1?$ExpLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$AbsValLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$AbsValLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?value@?$trait_impl@V?$basic_istream@DU?$char_traits@D@std@@@std@@HUdont_care@has_right_shift_impl@detail@boost@@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:?value@?$result_@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?FlattenParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?has_axis@SoftmaxParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$?0V?$EltwiseLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$EltwiseLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBU?$pair@HH@std@@H@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBU?$pair@HH@std@@H@1@@Z")
#pragma comment(linker, "/include:?clear@?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@QAEXXZ")
#pragma comment(linker, "/include:?test_iter_size@SolverParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?tempering_u@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@2IB")
#pragma comment(linker, "/include:??_C@_02JEEOAGDI@L2?$AA@")
#pragma comment(linker, "/include:?GetReflection@Message@protobuf@google@@UBEPBVReflection@23@XZ")
#pragma comment(linker, "/include:??_7?$ArgMaxLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?size@?$RepeatedField@M@protobuf@google@@QBEHXZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$ConvolutionLayer@M@caffe@@@detail@boost@@QAE@PAV?$ConvolutionLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?erase@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@2@0@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$PoolingLayer@M@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@1@PAV?$PoolingLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??$Creator_AccuracyLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@BlobShape@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@1@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$ConcatLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z")
#pragma comment(linker, "/include:?kBiastermFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?min@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@SAIXZ")
#pragma comment(linker, "/include:?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z")
#pragma comment(linker, "/include:?hinge_loss_param@LayerParameter@caffe@@QBEABVHingeLossParameter@2@XZ")
#pragma comment(linker, "/include:??C?$shared_ptr@VGenerator@RNG@Caffe@caffe@@@boost@@QBEPAVGenerator@RNG@Caffe@caffe@@XZ")
#pragma comment(linker, "/include:?iter_size@SolverParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??$Creator_LogLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??$OwnInternal@VLogParameter@caffe@@@Arena@protobuf@google@@AAEXPAVLogParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:??_R2?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z")
#pragma comment(linker, "/include:?MinTopBlobs@?$Layer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$PoolingLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_C@_0BI@HEMKNEI@channels_?5?$CF?5group_?5?$DN?$DN?50?$AA@")
#pragma comment(linker, "/include:??_C@_0FE@DFMFIBAG@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B")
#pragma comment(linker, "/include:?value@?$is_character@_J@detail@boost@@2_NB")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@DropoutParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_C@_0BF@OEAEKOKB@height?5?$DM?$DN?5img_height?$AA@")
#pragma comment(linker, "/include:?set_has_decay_mult@ParamSpec@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??1?$thread_data@V?$bind_t@XV?$mf0@XVInternalThread@caffe@@@_mfi@boost@@V?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@3@@_bi@boost@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$EltwiseLayer@M@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@V?$EltwiseLayer@M@caffe@@@1@PAV?$EltwiseLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_G?$UniformFiller@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?k@LRNParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?Backward_cpu@?$FilterLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_R3?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??_G?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAEPAXI@Z")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@1@@Z")
#pragma comment(linker, "/include:??$Check_EQImpl@HH@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH0PBD@Z")
#pragma comment(linker, "/include:?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??_R4?$SoftmaxWithLossLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?has_learned_net@SolverState@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?default_instance@V1LayerParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:?day_number@?$gregorian_calendar_base@U?$year_month_day_base@Vgreg_year@gregorian@boost@@Vgreg_month@23@Vgreg_day@23@@date_time@boost@@I@date_time@boost@@SAIABU?$year_month_day_base@Vgreg_year@gregorian@boost@@Vgreg_month@23@Vgreg_day@23@@23@@Z")
#pragma comment(linker, "/include:?New@ImageDataParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$CreateInternal@VLayerParameter@caffe@@@Arena@protobuf@google@@AAEPAVLayerParameter@caffe@@_N@Z")
#pragma comment(linker, "/include:??$swap@PAVReshapeParameter@caffe@@@std@@YAXAAPAVReshapeParameter@caffe@@0@Z")
#pragma comment(linker, "/include:__CTA7?AV?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:??_C@_08HDAFAPB@?5images?4?$AA@")
#pragma comment(linker, "/include:__TI6?AV?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:?Backward_cpu@?$LogLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:__TI8?AV?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0DC@JOBBMCIE@?$CIpooled_width_?5?9?51?$CJ?5?$CK?5stride_w_?5@")
#pragma comment(linker, "/include:?Update@?$Blob@I@caffe@@QAEXXZ")
#pragma comment(linker, "/include:??$_Insert_nohint@AAU?$pair@$$CBU?$pair@HH@std@@M@std@@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBU?$pair@HH@std@@M@1@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@1@@Z")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@PAV?$FlattenLayer@N@caffe@@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@IBEXPAPAV?$FlattenLayer@N@caffe@@0@Z")
#pragma comment(linker, "/include:?set_has_shape@BlobProto@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$DataLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?InitAsDefaultInstance@EltwiseParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?Clear@?$RepeatedPtrField@VBlobShape@caffe@@@protobuf@google@@QAEXXZ")
#pragma comment(linker, "/include:??$forward@V?$tuple@$$QAU?$pair@HH@std@@@std@@@std@@YA$$QAV?$tuple@$$QAU?$pair@HH@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:?GetMetadata@ConvolutionParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?Delete@StringTypeHandlerBase@internal@protobuf@google@@SAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVArena@34@@Z")
#pragma comment(linker, "/include:?max_digits10@?$numeric_limits@N@std@@2HB")
#pragma comment(linker, "/include:??_C@_0O@DPKOEFFH@bad?5exception?$AA@")
#pragma comment(linker, "/include:??$swap@PAVPythonParameter@caffe@@@std@@YAXAAPAVPythonParameter@caffe@@0@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$WindowDataLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?_Reserve@?$vector@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VAccuracyParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVAccuracyParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?MinBottomBlobs@?$BaseConvolutionLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?kAxisFieldNumber@SoftmaxParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$_Umove@PAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@?$vector@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@IAEPAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@PAV23@00@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$Filler@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?CopyFrom@ParamSpec@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??8id@thread@boost@@QBE_NABV012@@Z")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@@std@@YAPAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:?constructor_sanity_check@?$AdaGradSolver@M@caffe@@IAEXXZ")
#pragma comment(linker, "/include:??1ReLUParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??0?$RepeatedPtrField@VParamSpec@caffe@@@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$HingeLossLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?set_has_batch_size@ImageDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@VDB@db@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?Reshape@?$Im2colLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$LRNLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?value@?$arg@$04@mpl@boost@@2HB")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PAV?$optional@Vlocale@std@@@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?kGammaFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$Creator_ConcatLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$SigmoidLayer@N@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?CopyFrom@TransformationParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?kShapeFieldNumber@ReshapeParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$Clear@VTypeHandler@?$RepeatedPtrField@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXXZ")
#pragma comment(linker, "/include:?has_group@ConvolutionParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$generate_uniform_int@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@H@detail@rand@boost@@YAHAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@HH@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$WindowDataLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??1?$RepeatedPtrField@VBlobShape@caffe@@@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:?bottom_need_backward@?$Net@N@caffe@@QBEABV?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@XZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAU?$pair@NH@std@@PAU12@V?$allocator@U?$pair@NH@std@@@2@U12@@std@@YAPAU?$pair@NH@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@NH@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?descriptor@ThresholdParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$SplitLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?blob_by_name@?$Net@M@caffe@@QBE?BV?$shared_ptr@V?$Blob@M@caffe@@@boost@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?has_window_data_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$Filler@N@caffe@@@boost@@QAE@$$QAV01@@Z")
#pragma comment(linker, "/include:?SharedCtor@PoolingParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$raise_overflow_error@M@detail@policies@math@boost@@YAMPBD0ABU?$overflow_error@$0A@@123@@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@1@PAU?$pair@$$CBU?$pair@HH@std@@U12@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??_C@_0O@BIMEEHJB@?5Layer?5takes?5?$AA@")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@D@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$_Adjust_heap@PAU?$pair@MH@std@@HU12@U?$greater@U?$pair@MH@std@@@2@@std@@YAXPAU?$pair@MH@0@HH$$QAU10@U?$greater@U?$pair@MH@std@@@0@@Z")
#pragma comment(linker, "/include:?GetCachedSize@DummyDataParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@VGenerator@RNG@Caffe@caffe@@@detail@boost@@QAE@PAVGenerator@RNG@Caffe@caffe@@@Z")
#pragma comment(linker, "/include:??$?0V?$PowerLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$PowerLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$SigmoidLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?value@?$operator_returns_Ret@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@HUdont_care@has_right_shift_impl@detail@boost@@$0A@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??0SolverState@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??$forward@PAV?$FlattenLayer@M@caffe@@@std@@YA$$QAPAV?$FlattenLayer@M@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??_C@_0DI@MGMPBCNN@Either?5axis?5or?5slice_dim?5should?5@")
#pragma comment(linker, "/include:?kChannelsFieldNumber@DummyDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?_Rmost@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBU?$pair@HH@std@@H@1@XZ")
#pragma comment(linker, "/include:?Forward_cpu@?$SplitLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$DataTransformer@M@caffe@@@detail@boost@@QAE@PAV?$DataTransformer@M@caffe@@@Z")
#pragma comment(linker, "/include:?SharedCtor@BlobProto@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?mutable_hdf5_data_param@LayerParameter@caffe@@QAEPAVHDF5DataParameter@2@XZ")
#pragma comment(linker, "/include:??_R3?$NeuronLayer@N@caffe@@8")
#pragma comment(linker, "/include:??0PReLUParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??G?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QBEHABV01@@Z")
#pragma comment(linker, "/include:?Mutable@?$RepeatedPtrField@VParamSpec@caffe@@@protobuf@google@@QAEPAVParamSpec@caffe@@H@Z")
#pragma comment(linker, "/include:?ShuffleImages@?$ImageDataLayer@M@caffe@@MAEXXZ")
#pragma comment(linker, "/include:??$_Buynode_if_nil@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@PAU21@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@@Z")
#pragma comment(linker, "/include:??1?$ConvolutionLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?bottom@V1LayerParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z")
#pragma comment(linker, "/include:??_R4?$EuclideanLossLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?Forward_cpu@?$FilterLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R0?AV?$DeconvolutionLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$ThresholdLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??0?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?value@?$is_ununsigned_helper@I@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$forward@U?$pair@MH@std@@@std@@YA$$QAU?$pair@MH@0@AAU10@@Z")
#pragma comment(linker, "/include:?kForceBackwardFieldNumber@NetParameter@caffe@@2HB")
#pragma comment(linker, "/include:??0?$Blob@I@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?empty@?$vector@_NV?$allocator@_N@std@@@std@@QBE_NXZ")
#pragma comment(linker, "/include:??_7?$LRNLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$SPPLayer@N@caffe@@8")
#pragma comment(linker, "/include:?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??0?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@1@@Z")
#pragma comment(linker, "/include:??0?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@QAE@ABVtoo_many_args@io@2@@Z")
#pragma comment(linker, "/include:?blobs@LayerParameter@caffe@@QBEABVBlobProto@2@H@Z")
#pragma comment(linker, "/include:??_C@_0EK@NLOBLAJO@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?deallocate@?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$PReLULayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?InternalSwap@ConvolutionParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?GetMetadata@V1LayerParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@IAB_N@Z")
#pragma comment(linker, "/include:??0?$SoftmaxLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??_C@_0FK@COMGLILB@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?MinBottomBlobs@?$Layer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??0?$vector@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??8error_category@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:??$?0V?$SliceLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$SliceLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?_Reallocate@?$vector@U?$pair@NH@std@@V?$allocator@U?$pair@NH@std@@@2@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?unknown_fields@AccuracyParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?_Xlen@?$vector@U?$pair@NH@std@@V?$allocator@U?$pair@NH@std@@@2@@std@@IBEXXZ")
#pragma comment(linker, "/include:?shuffle@ImageDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?value@?$int_@$0M@@mpl@boost@@2HB")
#pragma comment(linker, "/include:?SetCachedSize@Datum@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$SigmoidCrossEntropyLossLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?kMirrorFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??0?$allocator@H@std@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@detail@boost@@QAE@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@2@@Z")
#pragma comment(linker, "/include:?get_bits@?$fp_traits_non_native@NUdouble_precision@detail@math@boost@@@detail@math@boost@@SAXNAA_K@Z")
#pragma comment(linker, "/include:??$Creator_AbsValLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?ShareDiff@?$Blob@N@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?gpu_data@?$Blob@I@caffe@@QBEPBIXZ")
#pragma comment(linker, "/include:?Backward_gpu@?$SplitLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_C@_0FI@LAPNBNNB@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?interlocked_bit_test_and_set@win32@detail@boost@@YA_NPAJJ@Z")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PBV?$optional@Vlocale@std@@@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_GGenerator@RNG@Caffe@caffe@@QAEPAXI@Z")
#pragma comment(linker, "/include:??_R2?$AdaGradSolver@M@caffe@@8")
#pragma comment(linker, "/include:??0_Ignore@std@@QAE@XZ")
#pragma comment(linker, "/include:?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_C@_0BH@LCMCIFON@slice_axis_?5?$DM?5num_axes?$AA@")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@NV?$allocator@N@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?CopyFrom@WindowDataParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??_C@_05MBCKGDIP@axis?5?$AA@")
#pragma comment(linker, "/include:?ByteSize@ConcatParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z")
#pragma comment(linker, "/include:?PoolingParameter_PoolMethod_IsValid@caffe@@YA_NH@Z")
#pragma comment(linker, "/include:?asum_data@?$Blob@N@caffe@@QBENXZ")
#pragma comment(linker, "/include:??$GetReLULayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?MergeFrom@InfogainLossParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??_R0?AVclone_base@exception_detail@boost@@@8")
#pragma comment(linker, "/include:?has_source@WindowDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?is_adapted@time_resolution_traits_adapted64_impl@date_time@boost@@SA_NXZ")
#pragma comment(linker, "/include:?mirror@WindowDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?set_has_tanh_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?Forward_cpu@?$ConcatLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?Int32Size@WireFormatLite@internal@protobuf@google@@SAHH@Z")
#pragma comment(linker, "/include:??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@XZ")
#pragma comment(linker, "/include:?GetCachedSize@BlobProto@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$?0V?$BNLLLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$BNLLLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_R3LossParameter@caffe@@8")
#pragma comment(linker, "/include:?Phase_descriptor_@?A0x5e4fc710@caffe@@3PBVEnumDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??_R3?$BNLLLayer@N@caffe@@8")
#pragma comment(linker, "/include:??_R2?$SigmoidLayer@M@caffe@@8")
#pragma comment(linker, "/include:?Transform@?$DataTransformer@N@caffe@@IAEXABVDatum@2@PAN@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$MVNLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$InnerProductLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@QAE@PAV?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@2@@Z")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@1@AAPAU21@@Z")
#pragma comment(linker, "/include:?channels@Datum@caffe@@QBEHXZ")
#pragma comment(linker, "/include:__real@bf800000")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VSPPParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVSPPParameter@caffe@@@Z")
#pragma comment(linker, "/include:?_Inside@?$vector@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@2@@std@@IBE_NPBU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@2@@Z")
#pragma comment(linker, "/include:??$?0V?$ReLULayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$ReLULayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0BD@IIPPDFEM@Unknown?5blob?5name?5?$AA@")
#pragma comment(linker, "/include:?initialization_multiplier@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@2IB")
#pragma comment(linker, "/include:?MemoryDataParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??A?$vector@U?$pair@NH@std@@V?$allocator@U?$pair@NH@std@@@2@@std@@QAEAAU?$pair@NH@1@I@Z")
#pragma comment(linker, "/include:?New@NetState@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?SharedCtor@HingeLossParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$TanHLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?CanonicalAxisIndex@?$Blob@I@caffe@@QBEHH@Z")
#pragma comment(linker, "/include:?max_exponent10@?$numeric_limits@O@std@@2HB")
#pragma comment(linker, "/include:??R?$subtract@H$00@detail@rand@boost@@QAEIHH@Z")
#pragma comment(linker, "/include:??$distance@V?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@@std@@YAHV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@0@0@Z")
#pragma comment(linker, "/include:??_C@_0BB@IDBEOLLB@y2?5?$DM?5cv_img?4rows?$AA@")
#pragma comment(linker, "/include:?const_max@?$integer_traits_base@K$0A@$0PPPPPPPP@@detail@boost@@2KB")
#pragma comment(linker, "/include:?CopyFrom@PReLUParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R0?AV?$_Iosb@H@std@@@8")
#pragma comment(linker, "/include:?New@MVNParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$caffe_axpy@N@caffe@@YAXHNPBNPAN@Z")
#pragma comment(linker, "/include:?has_pool@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$Add@VTypeHandler@?$RepeatedPtrField@VNetParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEPAVNetParameter@caffe@@PAV45@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$construct@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@PAV12@@?$allocator_traits@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@1@PAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@1@$$QAPAV31@@Z")
#pragma comment(linker, "/include:?end@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??_C@_05DIMFDEPD@num?3?5?$AA@")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$DropoutLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??0error_condition@std@@QAE@HABVerror_category@1@@Z")
#pragma comment(linker, "/include:?has_dropout_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?MergeFrom@DataParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@1@$$QA_N@Z")
#pragma comment(linker, "/include:??_7bad_alloc_@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:?CopyFrom@FlattenParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?PERMISSIVE@V1LayerParameter@caffe@@2W4V1LayerParameter_DimCheckMode@2@B")
#pragma comment(linker, "/include:?GetMetadata@ReshapeParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBU?$pair@HH@std@@M@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBU?$pair@HH@std@@M@1@@Z")
#pragma comment(linker, "/include:??_G?$SigmoidCrossEntropyLossLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?GCD@?$ratio@$00$0CHBA@@boost@@0_JB")
#pragma comment(linker, "/include:?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??$_Umove@PAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@@?$vector@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@IAEPAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@PAV23@00@Z")
#pragma comment(linker, "/include:??0ReLUParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?ShuffleImages@?$ImageDataLayer@N@caffe@@MAEXXZ")
#pragma comment(linker, "/include:??$make_pair@HH@std@@YA?AU?$pair@HH@0@$$QAH0@Z")
#pragma comment(linker, "/include:?ByteSize@FillerParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?SolverParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$ThresholdLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??1?$vector@PAV?$FlattenLayer@M@caffe@@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??$_Buynode@ABUpiecewise_construct_t@std@@V?$tuple@ABU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$_Tree_buy@U?$pair@$$CBU?$pair@HH@std@@H@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??R?$variate_generator@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@V?$uniform_real@M@3@@random@boost@@QAEMXZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$EuclideanLossLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??$_Allocate@U?$pair@HH@std@@@std@@YAPAU?$pair@HH@0@IPAU10@@Z")
#pragma comment(linker, "/include:??_GContainer@InternalMetadataWithArena@internal@protobuf@google@@QAEPAXI@Z")
#pragma comment(linker, "/include:?_Nw@?$_Vb_val@V?$allocator@_N@std@@@std@@SAII@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$SPPLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$SPPLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VNetParameter@caffe@@V?$allocator@VNetParameter@caffe@@@std@@@std@@@std@@QAE@ABV?$allocator@VNetParameter@caffe@@@1@@Z")
#pragma comment(linker, "/include:?SharedDtor@BlobShape@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$FlattenLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??1?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?ShareData@?$Blob@I@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??_7NetParameter@caffe@@6B@")
#pragma comment(linker, "/include:??D?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@std@@QBE$$QAMXZ")
#pragma comment(linker, "/include:??$_Move@AAPAVMemoryDataParameter@caffe@@@std@@YA$$QAPAVMemoryDataParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$MVNLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?has_shape@ReshapeParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@PAV?$Blob@M@caffe@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?gInstantiationGuardSoftmaxLayer@caffe@@3DA")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@VSyncedMemory@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?value@?$is_ununsigned_helper@F@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R2?$MultinomialLogisticLossLayer@M@caffe@@8")
#pragma comment(linker, "/include:?kWeightDecayFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?size@?$RepeatedPtrField@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@protobuf@google@@QBEHXZ")
#pragma comment(linker, "/include:?set_snapshot_diff@SolverParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:?get_impl@?$optional_base@Vlocale@std@@@optional_detail@boost@@IBEABVlocale@std@@XZ")
#pragma comment(linker, "/include:?_Tidy@?$vector@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@IAEXXZ")
#pragma comment(linker, "/include:?kLossWeightFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?begin@?$vector@NV?$allocator@N@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?Backward_cpu@?$ExpLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?kPathFieldNumber@SourceCodeInfo_Location@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_R4bad_month@gregorian@boost@@6B@")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$shared_ptr@V?$Net@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@2@XZ")
#pragma comment(linker, "/include:?type@?$AbsValLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$SoftmaxWithLossLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$InfogainLossLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:__real@33800000")
#pragma comment(linker, "/include:??_G?$SliceLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?default_instance_@PythonParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@@std@@YAXPAPAV?$FlattenLayer@N@caffe@@0AAU?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VReductionParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVReductionParameter@caffe@@@Z")
#pragma comment(linker, "/include:?has_height@BlobProto@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$_Allocate@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@IPAV12@@Z")
#pragma comment(linker, "/include:?Add@?$RepeatedPtrField@VNetState@caffe@@@protobuf@google@@QAEPAVNetState@caffe@@XZ")
#pragma comment(linker, "/include:?add_data_filler@DummyDataParameter@caffe@@QAEPAVFillerParameter@2@XZ")
#pragma comment(linker, "/include:?Swap@UnknownFieldSet@protobuf@google@@QAEXPAV123@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$SPPLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$CreateMaybeMessage@VBlobProto@caffe@@@Arena@protobuf@google@@CAPAVBlobProto@caffe@@PAV012@ZZ")
#pragma comment(linker, "/include:?set_has_power_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@@std@@@std@@YAXPAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??_R2?$FlattenLayer@N@caffe@@8")
#pragma comment(linker, "/include:??0?$_Vector_val@U?$_Simple_types@VNetParameter@caffe@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R4?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??_G?$UniformFiller@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?ReadImageToCVMat@caffe@@YA?AVMat@cv@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z")
#pragma comment(linker, "/include:??0?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?value@?$is_volatile_rval_filter@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?type@?$ReLULayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?has_shift@PowerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?descriptor@LayerParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$DataTransformer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$raise_overflow_error@MU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@math@boost@@@policies@math@boost@@YAMPBD0ABU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@012@@Z")
#pragma comment(linker, "/include:??$_Uninit_move@PAU?$pair@MH@std@@PAU12@V?$allocator@U?$pair@MH@std@@@2@U12@@std@@YAPAU?$pair@MH@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@MH@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??A?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@QBEABV?$shared_ptr@V?$Blob@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??C?$shared_ptr@V?$PowerLayer@M@caffe@@@boost@@QBEPAV?$PowerLayer@M@caffe@@XZ")
#pragma comment(linker, "/include:??$swap@T_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAXAAT_Bxty@?$_String_val@U?$_Simple_types@D@std@@@0@0@Z")
#pragma comment(linker, "/include:??_C@_0CN@BOJPKJKF@?5?5?5?5?$FLBackward?$FN?5All?5net?5params?5?$CId@")
#pragma comment(linker, "/include:?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?has_source@ImageDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$WindowDataLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_C@_0BI@HDKDFOBD@bottom?$FL0?$FN?9?$DOwidth?$CI?$CJ?5?$DN?$DN?51?$AA@")
#pragma comment(linker, "/include:?SharedDtor@MemoryDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0?$vector@V?$shared_ptr@V?$Net@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@VCursor@db@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R4?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:?set_has_learned_net@SolverState@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?address@?$aligned_storage@Vlocale@std@@@optional_detail@boost@@QBEPBXXZ")
#pragma comment(linker, "/include:?type@?$PoolingLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?kLegacyVersionFieldNumber@ContrastiveLossParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$?0V?$PowerLayer@N@caffe@@@?$shared_ptr@V?$PowerLayer@N@caffe@@@boost@@QAE@PAV?$PowerLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??0runtime_error@std@@QAE@PBD@Z")
#pragma comment(linker, "/include:?MakeTag@WireFormatLite@internal@protobuf@google@@SAIHW4WireType@1234@@Z")
#pragma comment(linker, "/include:??$GetReferenceableValue@$$BY01$$CBD@google@@YAAAY01$$CBDAAY01$$CBD@Z")
#pragma comment(linker, "/include:?push_back@?$vector@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@QAEX$$QAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?default_instance_@EltwiseParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:??$call_put_last@DU?$char_traits@D@std@@QBD@detail@io@boost@@YAXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@PBX@Z")
#pragma comment(linker, "/include:??$forward@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@YA$$QAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:??_R3ConcatParameter@caffe@@8")
#pragma comment(linker, "/include:??$swap@PAV?$PowerLayer@M@caffe@@@std@@YAXAAPAV?$PowerLayer@M@caffe@@0@Z")
#pragma comment(linker, "/include:??1?$vector@U?$pair@NH@std@@V?$allocator@U?$pair@NH@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?kNegativeSlopeFieldNumber@ReLUParameter@caffe@@2HB")
#pragma comment(linker, "/include:?allocate@?$allocator@D@std@@QAEPADIPBX@Z")
#pragma comment(linker, "/include:??$forward@AAM@std@@YAAAMAAM@Z")
#pragma comment(linker, "/include:?_Tidy@?$vector@NV?$allocator@N@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:?_Construct_n@?$vector@MV?$allocator@M@std@@@std@@QAEXIPBM@Z")
#pragma comment(linker, "/include:?max@?$br_mul@$00$0CHBA@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:??1?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VDataParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVDataParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0BH@JHGOIELG@There?5is?5no?5mat?5to?5add?$AA@")
#pragma comment(linker, "/include:??_C@_0FI@JAGJCINA@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?kSparseFieldNumber@FillerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R2?$PoolingLayer@M@caffe@@8")
#pragma comment(linker, "/include:?output_u@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@2IB")
#pragma comment(linker, "/include:??_R2?$LogLayer@N@caffe@@8")
#pragma comment(linker, "/include:?reverse_dimensions@?$ConvolutionLayer@M@caffe@@MAE_NXZ")
#pragma comment(linker, "/include:??$caffe_cpu_scale@M@caffe@@YAXHMPBMPAM@Z")
#pragma comment(linker, "/include:?set_axis@InnerProductParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?CopyFrom@NetState@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$_Copy_impl@PBIV?$back_insert_iterator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@std@@YA?AV?$back_insert_iterator@V?$vector@HV?$allocator@H@std@@@std@@@0@PBI0V10@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@1@AAPAU21@@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$FilterLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?type@?$TanHLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??$OwnInternal@VThresholdParameter@caffe@@@Arena@protobuf@google@@AAEXPAVThresholdParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?make_or_reuse_data@?$basic_format@DU?$char_traits@D@std@@V?$allocator@D@2@@boost@@AAEXI@Z")
#pragma comment(linker, "/include:??1?$shared_ptr@VCaffe@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??_R2?$InfogainLossLayer@M@caffe@@8")
#pragma comment(linker, "/include:?value@?$has_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$bool_@$0A@@mpl@boost@@@range_detail@boost@@2_NB")
#pragma comment(linker, "/include:?MergeFrom@LossParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?value@?$alignment_of_impl@F@detail@boost@@2IB")
#pragma comment(linker, "/include:?blob_names@?$Net@M@caffe@@QBEABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$LRNLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$SilenceLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$ThresholdLayer@M@caffe@@@detail@boost@@QAE@PAV?$ThresholdLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?is_pos_inf@?$int_adapter@_J@date_time@boost@@SA_N_J@Z")
#pragma comment(linker, "/include:?gpu_diff@?$Blob@N@caffe@@QBEPBNXZ")
#pragma comment(linker, "/include:??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:??$Own@VWindowDataParameter@caffe@@@Arena@protobuf@google@@QAEXPAVWindowDataParameter@caffe@@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Blob@M@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@V?$Blob@M@caffe@@@1@PAV?$Blob@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?set_engine@ConvolutionParameter@caffe@@QAEXW4ConvolutionParameter_Engine@2@@Z")
#pragma comment(linker, "/include:?descriptor@InfogainLossParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@VSyncedMemory@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VBlobProto@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVBlobProto@caffe@@@Z")
#pragma comment(linker, "/include:?set_normalize@LossParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:?MinBottomBlobs@?$FilterLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$ConvolutionLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?deallocate@?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@QAEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@I@Z")
#pragma comment(linker, "/include:?param_names_index@?$Net@N@caffe@@QBEABV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@XZ")
#pragma comment(linker, "/include:??_R2bad_day_of_month@gregorian@boost@@8")
#pragma comment(linker, "/include:?descriptor@LRNParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?SharedCtor@FlattenParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?has_iter@SolverState@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$nextafter@NNU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@math@boost@@@math@boost@@YANABN0ABU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@01@@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$PReLULayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?max_size@?$vector@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$FilterLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$_Unchecked@V?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@std@@@std@@YA?AV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@0@V10@@Z")
#pragma comment(linker, "/include:??$Clear@VTypeHandler@?$RepeatedPtrField@VLayerParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXXZ")
#pragma comment(linker, "/include:??0thread_exception@boost@@QAE@HPBD@Z")
#pragma comment(linker, "/include:?kMeanfileFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$_Uninitialized_default_fill_n@PANIU?$_Wrap_alloc@V?$allocator@N@std@@@std@@@std@@YAXPANIAAU?$_Wrap_alloc@V?$allocator@N@std@@@0@@Z")
#pragma comment(linker, "/include:?has_k@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@detail@boost@@@8")
#pragma comment(linker, "/include:??0BlobProto@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??$checked_delete@V?$ArgMaxLayer@N@caffe@@@boost@@YAXPAV?$ArgMaxLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?MergeFrom@ReLUParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$ReadPackedPrimitive@_J$02@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAV?$RepeatedField@_J@23@@Z")
#pragma comment(linker, "/include:?sig_bits_fast@?$low_bits_mask_t@$0BA@@boost@@2GB")
#pragma comment(linker, "/include:??$sort_heap@PAU?$pair@MH@std@@U?$greater@U?$pair@MH@std@@@2@@std@@YAXPAU?$pair@MH@0@0U?$greater@U?$pair@MH@std@@@0@@Z")
#pragma comment(linker, "/include:??0?$normal_distribution@M@random@boost@@QAE@ABM0@Z")
#pragma comment(linker, "/include:??$_Buynode@U?$pair@HH@std@@@?$_Tree_buy@U?$pair@$$CBHH@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@1@$$QAU?$pair@HH@1@@Z")
#pragma comment(linker, "/include:?capacity@?$vector@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?size@?$vector@V?$vector@MV?$allocator@M@std@@@std@@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?default_instance@BlobShape@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$ExpLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$ExpLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$Layer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?set_current_step@SolverState@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??0?$vector@NV?$allocator@N@std@@@std@@QAE@I@Z")
#pragma comment(linker, "/include:??D?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QBE_NXZ")
#pragma comment(linker, "/include:??$_Ptr_cat@EE@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAE0@Z")
#pragma comment(linker, "/include:?add_blobs_lr@V1LayerParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@2@@Z")
#pragma comment(linker, "/include:??_R0?AV?$UniformFiller@N@caffe@@@8")
#pragma comment(linker, "/include:??_GArgMaxParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$destroy@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@QAEXPAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@1@@Z")
#pragma comment(linker, "/include:??_B?1???$get_min_shift_value@N@detail@math@boost@@YANXZ@51")
#pragma comment(linker, "/include:?Init@?$Solver@N@caffe@@QAEXABVSolverParameter@2@@Z")
#pragma comment(linker, "/include:??_C@_0CK@HPJMGINP@SolverParameter?5must?5specify?5a?5t@")
#pragma comment(linker, "/include:??0greg_day@gregorian@boost@@QAE@G@Z")
#pragma comment(linker, "/include:??_7overflow_error@std@@6B@")
#pragma comment(linker, "/include:?FAN_OUT@FillerParameter@caffe@@2W4FillerParameter_VarianceNorm@2@B")
#pragma comment(linker, "/include:?Datum_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:__real@3df0000000000000")
#pragma comment(linker, "/include:??1?$SoftmaxWithLossLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$PReLULayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$WindowDataLayer@M@caffe@@8")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$LRNLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??0?$RepeatedPtrField@VBlobShape@caffe@@@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:?construct@?$_Wrap_alloc@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@std@@QAEXPAV?$vector@HV?$allocator@H@std@@@2@@Z")
#pragma comment(linker, "/include:??$_Ptr_cat@VNetParameter@caffe@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVNetParameter@caffe@@0@Z")
#pragma comment(linker, "/include:?ReadProtoFromTextFile@caffe@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@0@AAPAU10@@Z")
#pragma comment(linker, "/include:??$Own@VSliceParameter@caffe@@@Arena@protobuf@google@@QAEXPAVSliceParameter@caffe@@@Z")
#pragma comment(linker, "/include:?param@LayerParameter@caffe@@QBEABVParamSpec@2@H@Z")
#pragma comment(linker, "/include:??B?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QBE_NXZ")
#pragma comment(linker, "/include:??$caffe_powx@N@caffe@@YAXHPBNNPAN@Z")
#pragma comment(linker, "/include:?type@?$ExpLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?LogParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?set_has_reshape_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?max_size@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_C@_0EI@LLGBHLAC@Check?5failed?3?5?$CB?$CIslice_param?4has_@")
#pragma comment(linker, "/include:??_R0?AV?$ThresholdLayer@N@caffe@@@8")
#pragma comment(linker, "/include:?slice_param@LayerParameter@caffe@@QBEABVSliceParameter@2@XZ")
#pragma comment(linker, "/include:?clear@?$vector@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@QAEXXZ")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$PReLULayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$PReLULayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?value@?$is_character@D@detail@boost@@2_NB")
#pragma comment(linker, "/include:??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$Layer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@1@$$QA_N@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$SPPLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?VarianceNorm_MAX@FillerParameter@caffe@@2W4FillerParameter_VarianceNorm@2@B")
#pragma comment(linker, "/include:?out_max_val@ArgMaxParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?output_b@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@2IB")
#pragma comment(linker, "/include:??$GetPoolingLayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?regularization_type@SolverParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??_R3ExpParameter@caffe@@8")
#pragma comment(linker, "/include:?MinBottomBlobs@?$EltwiseLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$SoftmaxWithLossLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?negative_slope@ReLUParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?mutable_unknown_fields@BlobProto@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?gInstantiationGuardSplitLayer@caffe@@3DA")
#pragma comment(linker, "/include:??_C@_0M@NELPGKDE@A?5total?5of?5?$AA@")
#pragma comment(linker, "/include:??1?$_Tree_comp@$0A@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?push_back@?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@QAEX$$QAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?Snapshot@?$Solver@M@caffe@@IAEXXZ")
#pragma comment(linker, "/include:?meanfile@V0LayerParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??_C@_0BC@OHGCGKFD@positive_unitball?$AA@")
#pragma comment(linker, "/include:??_R2Message@protobuf@google@@8")
#pragma comment(linker, "/include:??G?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@QBEHABV01@@Z")
#pragma comment(linker, "/include:?ToProto@?$Blob@N@caffe@@QBEXPAVBlobProto@2@_N@Z")
#pragma comment(linker, "/include:??_G?$SoftmaxLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?kNameFieldNumber@EnumDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?_Xlen@?$vector@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@IBEXXZ")
#pragma comment(linker, "/include:??1?$vector@V?$shared_ptr@V?$Net@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0BG@ECOFLCM@?5Layer?5takes?5at?5most?5?$AA@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?slice_point_size@SliceParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?IsInitialized@HDF5OutputParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?value@?$is_base_and_derived_impl@Vexception@std@@Ubad_day_of_month@gregorian@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$?0HHX@?$pair@$$CBHH@std@@QAE@$$QAU?$pair@HH@1@@Z")
#pragma comment(linker, "/include:?mutable_python_param@LayerParameter@caffe@@QAEPAVPythonParameter@2@XZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$SigmoidLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?ByteSize@MemoryDataParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?type@?$SilenceLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?set_has_kernel_h@ConvolutionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?minus_one@?$is_unsigned_values@F@detail@boost@@2FB")
#pragma comment(linker, "/include:?set_has_slice_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$FlattenLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??_C@_0GL@JLDMOGCP@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?c_decimal_separator@?$lcast_char_constants@D@detail@boost@@2DB")
#pragma comment(linker, "/include:?has_phase@NetStateRule@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_0CD@INNKJBDJ@CHECK?5failed?3?5?$CI?$CGother?$CJ?5?$CB?$DN?5?$CIthis?$CJ@")
#pragma comment(linker, "/include:??0thread_resource_error@boost@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_02JDPG@rb?$AA@")
#pragma comment(linker, "/include:?_Destroy@?$vector@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@IAEXPAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:?kWidthFieldNumber@Datum@caffe@@2HB")
#pragma comment(linker, "/include:??$destroy@M@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAAV?$allocator@M@1@PAM@Z")
#pragma comment(linker, "/include:?_Pop_back_n@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QAEXI@Z")
#pragma comment(linker, "/include:??_7MessageLite@protobuf@google@@6B@")
#pragma comment(linker, "/include:?type@?$EltwiseLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??$?0V?$DeconvolutionLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$DeconvolutionLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$DataLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@VGenerator@RNG@Caffe@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?mutable_hinge_loss_param@V1LayerParameter@caffe@@QAEPAVHingeLossParameter@2@XZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$DataTransformer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$ContrastiveLossLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_R4?$ConvolutionLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?mutable_prelu_param@LayerParameter@caffe@@QAEPAVPReLUParameter@2@XZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$FilterLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_G_System_error_category@std@@UAEPAXI@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$ImageDataLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?Backward@?$Net@N@caffe@@QAEXXZ")
#pragma comment(linker, "/include:?Reshape@?$LossLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_G?$NesterovSolver@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?begin@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$Filler@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?weight_decay_size@V1LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?bias_filler@V0LayerParameter@caffe@@QBEABVFillerParameter@2@XZ")
#pragma comment(linker, "/include:?InternalSwap@LogParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@runtime_error@std@@8")
#pragma comment(linker, "/include:??_7?$GaussianFiller@N@caffe@@6B@")
#pragma comment(linker, "/include:?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?GetCachedSize@HDF5DataParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$ReshapeLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?_Unchecked@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MH@std@@@std@@@std@@@std@@QBEPAU?$pair@MH@2@XZ")
#pragma comment(linker, "/include:?label@Datum@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?Add@?$RepeatedField@H@protobuf@google@@QAEXABH@Z")
#pragma comment(linker, "/include:?value@?$result_@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??0?$RepeatedPtrField@VNetState@caffe@@@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0GB@BLBIKFMI@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??$raise_error@Vdomain_error@std@@N@detail@policies@math@boost@@YAXPBD0ABN@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$PositiveUnitballFiller@N@caffe@@8")
#pragma comment(linker, "/include:??_R2_Generic_error_category@std@@8")
#pragma comment(linker, "/include:??0?$Blob@I@caffe@@QAE@ABV?$vector@HV?$allocator@H@std@@@std@@@Z")
#pragma comment(linker, "/include:?MergeFrom@MVNParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?type@?$ExpLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??1?$BasePrefetchingDataLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@FlattenParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??0?$XavierFiller@M@caffe@@QAE@ABVFillerParameter@1@@Z")
#pragma comment(linker, "/include:?max_size@?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$ConcatLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?Stop@CPUTimer@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@std@@_NX@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@1@$$QA_N@Z")
#pragma comment(linker, "/include:??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@0@AAU10@@Z")
#pragma comment(linker, "/include:??A?$vector@VNetParameter@caffe@@V?$allocator@VNetParameter@caffe@@@std@@@std@@QAEAAVNetParameter@caffe@@I@Z")
#pragma comment(linker, "/include:?value@?$is_function_impl@Ubidirectional_traversal_tag@iterators@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@2@@Z")
#pragma comment(linker, "/include:?set_has_min@FillerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$ContrastiveLossLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?blobs@?$Net@M@caffe@@QBEABV?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@XZ")
#pragma comment(linker, "/include:?contrastive_loss_param@LayerParameter@caffe@@QBEABVContrastiveLossParameter@2@XZ")
#pragma comment(linker, "/include:?mutable_gpu_diff@?$Blob@N@caffe@@QAEPANXZ")
#pragma comment(linker, "/include:?ReadImageToDatum@caffe@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HHH_N0PAVDatum@1@@Z")
#pragma comment(linker, "/include:?bias_filler@ConvolutionParameter@caffe@@QBEABVFillerParameter@2@XZ")
#pragma comment(linker, "/include:??0?$ThresholdLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?begin@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?Engine_MAX@SoftmaxParameter@caffe@@2W4SoftmaxParameter_Engine@2@B")
#pragma comment(linker, "/include:?kRegularizationTypeFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$?GV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@V01@@std@@YAHAAV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@0@ABV10@@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$AbsValLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$WindowDataLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??$caffe_exp@N@caffe@@YAXHPBNPAN@Z")
#pragma comment(linker, "/include:??0?$NesterovSolver@M@caffe@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?TYPE_STRING@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Type@23@B")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBU?$pair@HH@std@@H@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@1@PAU?$pair@$$CBU?$pair@HH@std@@H@1@@Z")
#pragma comment(linker, "/include:??0?$group2@U?$_Smanip@_J@std@@ABN@detail@io@boost@@QAE@U?$_Smanip@_J@std@@ABN@Z")
#pragma comment(linker, "/include:?default_instance_@V1LayerParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?has_weight_filler@ConvolutionParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??0?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@1@@Z")
#pragma comment(linker, "/include:?SetCachedSize@BlobProtoVector@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?push_back@?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@QAEXABQAV?$Blob@M@caffe@@@Z")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$MVNLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?Clear@?$RepeatedPtrField@VFillerParameter@caffe@@@protobuf@google@@QAEXXZ")
#pragma comment(linker, "/include:??C?$shared_ptr@V?$SigmoidLayer@N@caffe@@@boost@@QBEPAV?$SigmoidLayer@N@caffe@@XZ")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@AAV12@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@AAV34@@Z")
#pragma comment(linker, "/include:??$_Move@AAPAV?$SplitLayer@M@caffe@@@std@@YA$$QAPAV?$SplitLayer@M@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?mutable_power_param@V1LayerParameter@caffe@@QAEPAVPowerParameter@2@XZ")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??_7?$InfogainLossLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??_C@_0CA@HODDPFAO@data?5transformation?5parameters?4?$AA@")
#pragma comment(linker, "/include:??1?$SliceLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$caffe_add@M@caffe@@YAXHPBM0PAM@Z")
#pragma comment(linker, "/include:?minus_one@?$is_unsigned_values@_J@detail@boost@@2_JB")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$Blob@N@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?kPackageFieldNumber@FileDescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?has_num_axes@ReshapeParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?CopyFrom@?$Blob@N@caffe@@QAEXABV12@_N1@Z")
#pragma comment(linker, "/include:?size@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?New@HDF5DataParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$forward@AAPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@0@AAPAU10@@Z")
#pragma comment(linker, "/include:??0?$Solver@N@caffe@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?relu_param@LayerParameter@caffe@@QBEABVReLUParameter@2@XZ")
#pragma comment(linker, "/include:?kHeightFieldNumber@Datum@caffe@@2HB")
#pragma comment(linker, "/include:??_R3?$AdaGradSolver@N@caffe@@8")
#pragma comment(linker, "/include:??$ReadPackedPrimitiveNoInline@H$04@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAV?$RepeatedField@H@23@@Z")
#pragma comment(linker, "/include:??$_Kfn@$$CBU?$pair@HH@std@@U12@@?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@SAABU?$pair@HH@1@ABU?$pair@$$CBU?$pair@HH@std@@U12@@1@@Z")
#pragma comment(linker, "/include:?New@ContrastiveLossParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?share_mode@ParamSpec@caffe@@QBE?AW4ParamSpec_DimCheckMode@2@XZ")
#pragma comment(linker, "/include:??1SolverState@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$caffe_cpu_asum@N@caffe@@YANHPBN@Z")
#pragma comment(linker, "/include:?Reshape@?$Im2colLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$InfogainLossLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??_C@_06IAHKIHIK@images?$AA@")
#pragma comment(linker, "/include:?IsInitialized@Datum@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?PoolingParameter_PoolMethod_descriptor@caffe@@YAPBVEnumDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_C@_0BI@GGIENPCJ@0?5?$DN?$DN?5param?4shape_size?$CI?$CJ?$AA@")
#pragma comment(linker, "/include:??_R2?$SoftmaxWithLossLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$ReductionLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_C@_0BE@MGNHEANG@num_train_nets?5?$DO?$DN?51?$AA@")
#pragma comment(linker, "/include:?set_batchsize@V0LayerParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??0?$arg@$00@boost@@QAE@XZ")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$DropoutLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?value@?$is_recursive_mutex_sur_parolle@Vrecursive_mutex@boost@@@sync@boost@@2_NB")
#pragma comment(linker, "/include:?LayerSetUp@?$InfogainLossLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?_Inside@?$vector@PAV?$FlattenLayer@N@caffe@@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@IBE_NPBQAV?$FlattenLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?CUDNN@ReLUParameter@caffe@@2W4ReLUParameter_Engine@2@B")
#pragma comment(linker, "/include:?DEFAULT@PoolingParameter@caffe@@2W4PoolingParameter_Engine@2@B")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBHH@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAH@2@V?$tuple@$$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBHH@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAH@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z")
#pragma comment(linker, "/include:?set_mean@FillerParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$MVNLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?Forward_cpu@?$BasePrefetchingDataLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_C@_0BK@IPHHNOPM@divide?5input?5slice?5axis?5?$CI?$AA@")
#pragma comment(linker, "/include:?has_det_fg_threshold@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?set_batch_size@WindowDataParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?begin@?$vector@U?$pair@NH@std@@V?$allocator@U?$pair@NH@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@NH@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??_R3?$NesterovSolver@N@caffe@@8")
#pragma comment(linker, "/include:?type@?$ReshapeLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??_R2bad_month@gregorian@boost@@8")
#pragma comment(linker, "/include:?set_debug_info@SolverParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:?Clear@PowerParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?ConfigureSplitLayer@caffe@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0HHMPAVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??_G?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R0?AVHingeLossParameter@caffe@@@8")
#pragma comment(linker, "/include:?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A")
#pragma comment(linker, "/include:?CheckBlobCounts@?$Layer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$?0V?$ExpLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$ExpLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0FH@BFLEMFEO@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$SigmoidCrossEntropyLossLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$SigmoidCrossEntropyLossLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$InfogainLossLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?softmax_param@V1LayerParameter@caffe@@QBEABVSoftmaxParameter@2@XZ")
#pragma comment(linker, "/include:??0?$BaseConvolutionLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??_8?$basic_fstream@DU?$char_traits@D@std@@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@")
#pragma comment(linker, "/include:?has_hdf5_data_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?kEndAxisFieldNumber@FlattenParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_G?$DeconvolutionLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:??E?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?GetCachedSize@ContrastiveLossParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?has_module@PythonParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$LRNLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@ParamSpec@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_GPoolingParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z")
#pragma comment(linker, "/include:?GetMetadata@HDF5DataParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$SilenceLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?push_back@?$vector@MV?$allocator@M@std@@@std@@QAEX$$QAM@Z")
#pragma comment(linker, "/include:?move@?$char_traits@D@std@@SAPADPADPBDI@Z")
#pragma comment(linker, "/include:?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBU?$pair@HH@std@@H@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBU?$pair@HH@std@@H@1@@Z")
#pragma comment(linker, "/include:?value@?$enable_binary_hash@M$0HB@$0EAAA@@hash_detail@boost@@2_NB")
#pragma comment(linker, "/include:?SIGN_N@?$ratio@$00$0JIJGIA@@boost@@0_JB")
#pragma comment(linker, "/include:?ClipGradients@?$SGDSolver@N@caffe@@MAEXXZ")
#pragma comment(linker, "/include:??_R3?$GaussianFiller@N@caffe@@8")
#pragma comment(linker, "/include:?has_force_color@TransformationParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?gcd_d1_d2@?$is_evenly_divisible_by@V?$ratio@$00$0DOI@@boost@@V?$ratio@$00$0JIJGIA@@2@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:?Backward_cpu@?$ReshapeLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??0?$SigmoidCrossEntropyLossLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?max@FillerParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?vsMul@@YAXHPBM0PAM@Z")
#pragma comment(linker, "/include:?eps@MVNParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?CAFFE@SoftmaxParameter@caffe@@2W4SoftmaxParameter_Engine@2@B")
#pragma comment(linker, "/include:__real@3ff0000000000000")
#pragma comment(linker, "/include:??1SliceParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??0?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@QAE@ABUbad_day_of_month@gregorian@2@@Z")
#pragma comment(linker, "/include:??_R3?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??$get_min_shift_value@N@detail@math@boost@@YANXZ")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@QAEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@I@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$LRNLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$Add@VTypeHandler@?$RepeatedPtrField@VLayerParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEPAVLayerParameter@caffe@@PAV45@@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVFlattenParameter@caffe@@@internal@protobuf@google@@YAPBVFlattenParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?kRandSkipFieldNumber@DataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?_Xlen@?$vector@HV?$allocator@H@std@@@std@@IBEXXZ")
#pragma comment(linker, "/include:?max_streamsize@?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@SA_JXZ")
#pragma comment(linker, "/include:??_R3?$Filler@N@caffe@@8")
#pragma comment(linker, "/include:??$checked_delete@V?$MemoryDataLayer@M@caffe@@@boost@@YAXPAV?$MemoryDataLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$make_heap@PAU?$pair@NH@std@@U?$greater@U?$pair@NH@std@@@2@@std@@YAXPAU?$pair@NH@0@0U?$greater@U?$pair@NH@std@@@0@@Z")
#pragma comment(linker, "/include:?max_size@?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_7TanHParameter@caffe@@6B@")
#pragma comment(linker, "/include:??$caffe_rng_bernoulli@M@caffe@@YAXHMPAI@Z")
#pragma comment(linker, "/include:?has_pyramid_height@SPPParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?_Inside@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@IBE_NPBU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z")
#pragma comment(linker, "/include:?type@?$MultinomialLogisticLossLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@@std@@YAPAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$ReshapeLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?has_fg_fraction@WindowDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_07LPEFJDFI@Reshape?$AA@")
#pragma comment(linker, "/include:??$OwnInternal@VTanHParameter@caffe@@@Arena@protobuf@google@@AAEXPAVTanHParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:??_E?$BasePrefetchingDataLayer@M@caffe@@WBJE@AEPAXI@Z")
#pragma comment(linker, "/include:?Add@?$RepeatedField@_N@protobuf@google@@QAEXAB_N@Z")
#pragma comment(linker, "/include:??1?$RepeatedPtrField@VNetState@caffe@@@protobuf@google@@QAE@XZ")
#pragma comment(linker, "/include:?IsInitialized@ReshapeParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??1exception@boost@@MAE@XZ")
#pragma comment(linker, "/include:?clone@?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBHH@std@@U?$pair@HH@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBHH@1@$$QAU?$pair@HH@1@@Z")
#pragma comment(linker, "/include:??_7?$SigmoidCrossEntropyLossLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?default_instance@BlobProto@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@U?$pair@HH@std@@@std@@@std@@SAIABV?$allocator@U?$pair@HH@std@@@2@@Z")
#pragma comment(linker, "/include:?max_size@?$vector@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$construct@PAV?$Blob@M@caffe@@AAPAV12@@?$allocator@PAV?$Blob@M@caffe@@@std@@QAEXPAPAV?$Blob@M@caffe@@AAPAV23@@Z")
#pragma comment(linker, "/include:??_R0?AUbad_month@gregorian@boost@@@8")
#pragma comment(linker, "/include:?SharedDtor@SigmoidParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$SliceLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?_Reallocate@?$vector@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??_R2?$Net@M@caffe@@8")
#pragma comment(linker, "/include:?tempering_l@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@2IB")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$SilenceLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:??$destroy@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@@std@@QAEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@1@@Z")
#pragma comment(linker, "/include:??R?$add@IH$00@detail@rand@boost@@QAEHIH@Z")
#pragma comment(linker, "/include:?max_size@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@6Btoo_few_args@io@2@@")
#pragma comment(linker, "/include:?Swap@PReLUParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:?max_size@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@BlobProtoVector@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?kExpParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?Engine_ARRAYSIZE@SoftmaxParameter@caffe@@2HB")
#pragma comment(linker, "/include:?value@?$is_arithmetic_and_not_xchars@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_R3?$AdaGradSolver@M@caffe@@8")
#pragma comment(linker, "/include:??$_Distance2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0AAHUrandom_access_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$_Ptr_cat@V?$vector@_NV?$allocator@_N@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$vector@_NV?$allocator@_N@std@@@0@0@Z")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VTanHParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVTanHParameter@caffe@@@Z")
#pragma comment(linker, "/include:?mutable_stepvalue@SolverParameter@caffe@@QAEPAV?$RepeatedField@H@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_7?$DataLayer@N@caffe@@6B?$BaseDataLayer@N@1@@")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@@Z")
#pragma comment(linker, "/include:?kHistoryFieldNumber@SolverState@caffe@@2HB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$MemoryDataLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?kLocalSizeFieldNumber@LRNParameter@caffe@@2HB")
#pragma comment(linker, "/include:?mutable_mvn_param@V1LayerParameter@caffe@@QAEPAVMVNParameter@2@XZ")
#pragma comment(linker, "/include:??_C@_0FE@GIHDAKOG@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??$max@N@std@@YAABNABN0@Z")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$Im2colLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$ReLULayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?kIgnoreLabelFieldNumber@LossParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$PoolingLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?_Buyheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??_8?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@7B@")
#pragma comment(linker, "/include:?value@?$is_function_impl@Uforward_traversal_tag@iterators@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?kFileNameFieldNumber@HDF5OutputParameter@caffe@@2HB")
#pragma comment(linker, "/include:?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBU?$pair@HH@std@@M@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??$_Insert_nohint@AAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@_N@1@_NAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@1@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@1@@Z")
#pragma comment(linker, "/include:?_Getptr@?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QBEPBIXZ")
#pragma comment(linker, "/include:?kStepsizeFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:?AccuracyParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$Blob@N@caffe@@@boost@@QAE@$$QAV01@@Z")
#pragma comment(linker, "/include:?Norm_MIN@HingeLossParameter@caffe@@2W4HingeLossParameter_Norm@2@B")
#pragma comment(linker, "/include:??$MakeCheckOpString@IH@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABIABHPBD@Z")
#pragma comment(linker, "/include:??_G?$AdaGradSolver@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:__CT??_R0?AVexception@boost@@@8??0exception@boost@@QAE@ABV01@@Z2020")
#pragma comment(linker, "/include:?MergeFrom@MemoryDataParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$ContrastiveLossLayer@M@caffe@@@boost@@YAXPAV?$ContrastiveLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$Blob@M@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?exponent@?$fp_traits_non_native@OUdouble_precision@detail@math@boost@@@detail@math@boost@@2_KB")
#pragma comment(linker, "/include:??0locale@std@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??$?HI@?$int_adapter@_J@date_time@boost@@QBE?AV012@ABV?$int_adapter@I@12@@Z")
#pragma comment(linker, "/include:?_Root@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??_R3bad_month@gregorian@boost@@8")
#pragma comment(linker, "/include:??_R3_InputArray@cv@@8")
#pragma comment(linker, "/include:?capacity@?$vector@U?$pair@NH@std@@V?$allocator@U?$pair@NH@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??0?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?deallocate@?$allocator@U?$pair@HH@std@@@std@@QAEXPAU?$pair@HH@2@I@Z")
#pragma comment(linker, "/include:?SetCachedSize@SliceParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$PReLULayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_C@_0BI@DMIKLKOG@Could?5not?5decode?5datum?5?$AA@")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$FlattenLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$_Allocate@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@YAPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@0@IPAU10@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@ImageDataParameter@caffe@@8")
#pragma comment(linker, "/include:?Swap@ReductionParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:?Forward@?$Net@N@caffe@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV34@PAN@Z")
#pragma comment(linker, "/include:??_G?$SGDSolver@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??0ArgMaxParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?set_pad_h@ConvolutionParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?_Reserve@?$vector@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??$make_pair@AAIAA_N@std@@YA?AU?$pair@I_N@0@AAIAA_N@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$EuclideanLossLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$generate_one_digit@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@detail@random@boost@@YAIAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@12@I@Z")
#pragma comment(linker, "/include:?mutable_loss_weight@V1LayerParameter@caffe@@QAEPAV?$RepeatedField@M@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_G?$SoftmaxLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$Layer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??D?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@QBE$$QANXZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$DataTransformer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$ConvolutionLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$ConvolutionLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$Im2colLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?data_filler_size@DummyDataParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$AbsValLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?GetMetadata@HDF5OutputParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?set_has_channels@Datum@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?test_state@SolverParameter@caffe@@QBEABVNetState@2@H@Z")
#pragma comment(linker, "/include:??$caffe_sub@N@caffe@@YAXHPBN0PAN@Z")
#pragma comment(linker, "/include:??1?$Im2colLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?blobs_lr@V0LayerParameter@caffe@@QBEMH@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@ABUpiecewise_construct_t@2@V?$tuple@ABH@2@V?$tuple@$$$V@2@@?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABH@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?unknown_fields@ThresholdParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?vsExp@@YAXHPBMPAM@Z")
#pragma comment(linker, "/include:??_7_InputArray@cv@@6B@")
#pragma comment(linker, "/include:??M?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:??_D?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@QAEXXZ")
#pragma comment(linker, "/include:??_C@_0EO@OMAIAMHA@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??_C@_0BI@ILAGLAFH@img_height?5?$DO?$DN?5crop_size?$AA@")
#pragma comment(linker, "/include:?_Reallocate@?$vector@V?$shared_ptr@V?$Net@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??D?$back_insert_iterator@V?$vector@HV?$allocator@H@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?set_crop_size@WindowDataParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??_7?$ReductionLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??$?0V?$MultinomialLogisticLossLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$MultinomialLogisticLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?const_max@?$integer_traits_base@D$0?IA@$0HP@@detail@boost@@2DB")
#pragma comment(linker, "/include:??_G?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$?0V?$MVNLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$MVNLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$checked_delete@VSyncedMemory@caffe@@@boost@@YAXPAVSyncedMemory@caffe@@@Z")
#pragma comment(linker, "/include:?value@?$is_pointer_helper@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?kCtypeFieldNumber@FieldOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:?CopyFrom@ArgMaxParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_R4domain_error@std@@6B@")
#pragma comment(linker, "/include:??_C@_06BIFLPOGA@Layer?5?$AA@")
#pragma comment(linker, "/include:?construct@?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?set_base@LogParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:??_G?$BaseConvolutionLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??$forward@AAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@YAAAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@AAV12@@Z")
#pragma comment(linker, "/include:?has_ignore_label@LossParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$_Move@AAPAVFlattenParameter@caffe@@@std@@YA$$QAPAVFlattenParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?IsInitialized@FillerParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??$?0V?$tuple@ABU?$pair@HH@std@@@std@@V?$tuple@$$$V@1@$0A@$S@?$pair@$$CBU?$pair@HH@std@@H@std@@QAE@AAV?$tuple@ABU?$pair@HH@std@@@1@AAV?$tuple@$$$V@1@U?$_Arg_idx@$0A@@1@U?$_Arg_idx@$S@1@@Z")
#pragma comment(linker, "/include:?Swap@NetParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:?SolverMode_MIN@SolverParameter@caffe@@2W4SolverParameter_SolverMode@2@B")
#pragma comment(linker, "/include:?Clear@LossParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??0?$SilenceLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@std@@@std@@YAXPAV?$vector@HV?$allocator@H@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$SigmoidLayer@N@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@1@@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$MVNLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?New@Message@protobuf@google@@UBEPAV123@PAVArena@23@@Z")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z")
#pragma comment(linker, "/include:??$caffe_log@M@caffe@@YAXHPBMPAM@Z")
#pragma comment(linker, "/include:?allocate@?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@QAEPAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?MergeFrom@TransformationParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?max_size@?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?GetMetadata@ArgMaxParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?LayerType_MIN@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:?exclude_size@V1LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?Reshape@?$InfogainLossLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@8")
#pragma comment(linker, "/include:?_Xlen@?$vector@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@IBEXXZ")
#pragma comment(linker, "/include:?phase@?$Net@M@caffe@@QBE?AW4Phase@2@XZ")
#pragma comment(linker, "/include:?Reshape@?$NeuronLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?output_s@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@2IB")
#pragma comment(linker, "/include:??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:?_Grow_to@?$vector@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@IBEII@Z")
#pragma comment(linker, "/include:?CopyFrom@ImageDataParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$DataLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R4HDF5OutputParameter@caffe@@6B@")
#pragma comment(linker, "/include:?has_hdf5_data_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?ApplyUpdate@?$SGDSolver@N@caffe@@MAEXXZ")
#pragma comment(linker, "/include:??_C@_0DE@MJJNEBHK@Can?8t?5add?5mat?5until?5current?5data@")
#pragma comment(linker, "/include:?ReadNetParamsFromTextFileOrDie@caffe@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVNetParameter@1@@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$Im2colLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??0V0LayerParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??_7V0LayerParameter@caffe@@6B@")
#pragma comment(linker, "/include:??$?0VCursor@db@caffe@@@shared_count@detail@boost@@QAE@PAVCursor@db@caffe@@@Z")
#pragma comment(linker, "/include:?kExpParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$_Uninitialized_fill_n@PAHIHU?$_Wrap_alloc@V?$allocator@H@std@@@std@@@std@@YAXPAHIPBHAAU?$_Wrap_alloc@V?$allocator@H@std@@@0@@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVV1LayerParameter@caffe@@@internal@protobuf@google@@YAPBVV1LayerParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?add_blobs@BlobProtoVector@caffe@@QAEPAVBlobProto@2@XZ")
#pragma comment(linker, "/include:?IsInitialized@InnerProductParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEXXZ")
#pragma comment(linker, "/include:?PoolMethod_MIN@PoolingParameter@caffe@@2W4PoolingParameter_PoolMethod@2@B")
#pragma comment(linker, "/include:?max_size@?$allocator@PAV?$Blob@N@caffe@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?_default_regularization_type_@SolverParameter@caffe@@0PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A")
#pragma comment(linker, "/include:??0LayerParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?Reserve@?$RepeatedField@M@protobuf@google@@QAEXH@Z")
#pragma comment(linker, "/include:?mean@FillerParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:??1?$_Vb_val@V?$allocator@_N@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?InternalSwap@ReLUParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:??_G?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAEPAXI@Z")
#pragma comment(linker, "/include:??4?$shared_ptr@VSyncedMemory@caffe@@@boost@@QAEAAV01@ABV01@@Z")
#pragma comment(linker, "/include:??$?0P8InternalThread@caffe@@AEXXZPAV01@@thread@boost@@QAE@P8InternalThread@caffe@@AEXXZPAV23@PAUdummy@01@@Z")
#pragma comment(linker, "/include:??_R3?$ArgMaxLayer@M@caffe@@8")
#pragma comment(linker, "/include:??$forward@AAV?$vector@MV?$allocator@M@std@@@std@@@std@@YAAAV?$vector@MV?$allocator@M@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:?a_x@?$br_mul@$00$0PECEA@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:?resize@?$vector@IV?$allocator@_N@std@@@std@@QAEXIABI@Z")
#pragma comment(linker, "/include:?_Freeheadnode@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??$?9V?$allocator@D@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z")
#pragma comment(linker, "/include:?SIGN_N@?$ratio@$00$0PECEA@@boost@@0_JB")
#pragma comment(linker, "/include:?Reshape@?$SoftmaxWithLossLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?InternalSwap@PythonParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?flag@?$fp_traits_non_native@MUsingle_precision@detail@math@boost@@@detail@math@boost@@2IB")
#pragma comment(linker, "/include:??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z")
#pragma comment(linker, "/include:??0ReLUParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??_R3?$SliceLayer@M@caffe@@8")
#pragma comment(linker, "/include:?kWindowDataParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?set_has_convolution_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?has_new_width@ImageDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?capacity@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R3?$Net@M@caffe@@8")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$PowerLayer@N@caffe@@@detail@boost@@QAE@PAV?$PowerLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?FillerParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?set_channels@Datum@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?_Inside@?$vector@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@IBE_NPBV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?kEngineFieldNumber@TanHParameter@caffe@@2HB")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$SplitLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??$?0V?$ArgMaxLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$ArgMaxLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?FillerParameter_VarianceNorm_descriptor@caffe@@YAPBVEnumDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$_Uninit_move@PANPANU?$_Wrap_alloc@V?$allocator@N@std@@@std@@@std@@YAPANPAN00AAU?$_Wrap_alloc@V?$allocator@N@std@@@0@@Z")
#pragma comment(linker, "/include:?join@thread@boost@@QAEXXZ")
#pragma comment(linker, "/include:?kLearnedNetFieldNumber@SolverState@caffe@@2HB")
#pragma comment(linker, "/include:?Forward_cpu@?$InfogainLossLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??0?$GaussianFiller@M@caffe@@QAE@ABVFillerParameter@1@@Z")
#pragma comment(linker, "/include:?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?set_has_axis@ConcatParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?lower_bound@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@2@ABU?$pair@HH@2@@Z")
#pragma comment(linker, "/include:??1?$clone_impl@U?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?SharedDtor@LRNParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??_C@_0BD@OINMACDD@crop_size?5?$DN?$DN?5width?$AA@")
#pragma comment(linker, "/include:?value@?$is_xchar_to_xchar@FV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??0greg_month@gregorian@boost@@QAE@G@Z")
#pragma comment(linker, "/include:??$?0V?$ConcatLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$ConcatLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?GetCachedSize@Datum@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?has_min_level@NetStateRule@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$max_value@M@tools@math@boost@@YAMXZ")
#pragma comment(linker, "/include:?MergeFrom@LayerParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$Filler@N@caffe@@@boost@@YAXPAV?$Filler@N@caffe@@@Z")
#pragma comment(linker, "/include:??_7SolverState@caffe@@6B@")
#pragma comment(linker, "/include:?MaxTopBlobs@?$DataLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@VCursor@db@caffe@@@detail@boost@@QAE@PAVCursor@db@caffe@@@Z")
#pragma comment(linker, "/include:??_R3MemoryDataParameter@caffe@@8")
#pragma comment(linker, "/include:?value@?$is_aligned@$07$07@detail@boost@@2_NB")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$shared_ptr@V?$Net@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@1@@Z")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0M@IDFBELCO@Crop?5mode?3?5?$AA@")
#pragma comment(linker, "/include:?GetArenaNoVirtual@?$RepeatedPtrField@VNetStateRule@caffe@@@protobuf@google@@IBEPAVArena@23@XZ")
#pragma comment(linker, "/include:??_G?$InnerProductLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$PoolingLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@@2@@std@@YAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??$_Val_type@PAPAV?$Blob@N@caffe@@@std@@YAPAPAV?$Blob@N@caffe@@PAPAV12@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@N@caffe@@@detail@boost@@QAE@PAV?$SigmoidCrossEntropyLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_R4ContrastiveLossParameter@caffe@@6B@")
#pragma comment(linker, "/include:?V0LayerParameter_PoolMethod_descriptor@caffe@@YAPBVEnumDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?erase@?$_Tree@V?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@V32@@Z")
#pragma comment(linker, "/include:??$Creator_DummyDataLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$DummyDataLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?Get@?$RepeatedField@I@protobuf@google@@QBEABIH@Z")
#pragma comment(linker, "/include:??_R4?$ConstantFiller@N@caffe@@6B@")
#pragma comment(linker, "/include:?SUM@ReductionParameter@caffe@@2W4ReductionParameter_ReductionOp@2@B")
#pragma comment(linker, "/include:??$OwnInternal@VSPPParameter@caffe@@@Arena@protobuf@google@@AAEXPAVSPPParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:??$construct@V?$vector@MV?$allocator@M@std@@@std@@AAV12@@?$_Wrap_alloc@V?$allocator@V?$vector@MV?$allocator@M@std@@@std@@@std@@@std@@QAEXPAV?$vector@MV?$allocator@M@std@@@1@AAV21@@Z")
#pragma comment(linker, "/include:?descriptor@DataParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?swap@?$shared_ptr@V?$ConcatLayer@N@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAV?$vector@_NV?$allocator@_N@std@@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@2@@std@@YAPAV?$vector@_NV?$allocator@_N@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?kForceGrayFieldNumber@TransformationParameter@caffe@@2HB")
#pragma comment(linker, "/include:??1?$shared_ptr@V?$ConcatLayer@N@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?set_has_cropsize@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVExpParameter@caffe@@@internal@protobuf@google@@YAPBVExpParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?ParamSpec_DimCheckMode_descriptor@caffe@@YAPBVEnumDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?_Buy@?$vector@VNetParameter@caffe@@V?$allocator@VNetParameter@caffe@@@std@@@std@@IAE_NI@Z")
#pragma comment(linker, "/include:?GetMetadata@SolverState@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?CopyFrom@FlattenParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?kPackedFieldNumber@FieldOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:?Forward_gpu@?$ThresholdLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$SigmoidLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?Backward_cpu@?$LRNLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?_Reserve@?$vector@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:?SharedDtor@PReLUParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?DecodeFloat@WireFormatLite@internal@protobuf@google@@SAMI@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@Vthread@boost@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_R4V0LayerParameter@caffe@@6B@")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PA_J@detail@boost@@2_NB")
#pragma comment(linker, "/include:?IsInitialized@ContrastiveLossParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??$construct@NAAN@?$allocator_traits@V?$allocator@N@std@@@std@@SAXAAV?$allocator@N@1@PANAAN@Z")
#pragma comment(linker, "/include:?has_source@HDF5DataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?CopyFrom@LRNParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?MaxTopBlobs@?$Layer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?CrossChannelBackward_cpu@?$LRNLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_C@_0N@PGKCCAMO@width?$CI?$CJ?5?$DO?$DN?50?$AA@")
#pragma comment(linker, "/include:??$_Val_type@PAV?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Net@M@caffe@@@boost@@PAV12@@Z")
#pragma comment(linker, "/include:?clone@?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@EBEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:??$_Uninitialized_fill_n@PAMIMU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAMIPBMAAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVSolverParameter@caffe@@@internal@protobuf@google@@YAPBVSolverParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?begin@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@H@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$PoolingLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_C@_0DO@CKEMOKOO@Check?5failed?3?5?$CB?$CIparam_?4force_col@")
#pragma comment(linker, "/include:??$?MHH@std@@YA_NABU?$pair@HH@0@0@Z")
#pragma comment(linker, "/include:?is_specialized@_Num_int_base@std@@2_NB")
#pragma comment(linker, "/include:?has_bias_filler@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_G?$ReductionLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$OwnInternal@VMVNParameter@caffe@@@Arena@protobuf@google@@AAEXPAVMVNParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?_Destroy@?$vector@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@2@@std@@IAEXPAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@2@0@Z")
#pragma comment(linker, "/include:??_7?$MemoryDataLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??$?0V?$ReshapeLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$ReshapeLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$put_head@DU?$char_traits@D@std@@U?$group2@U?$_Smanip@_J@std@@ABM@detail@io@boost@@@detail@io@boost@@YAXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@ABU?$group1@U?$group2@U?$_Smanip@_J@std@@ABM@detail@io@boost@@@012@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@2@@Z")
#pragma comment(linker, "/include:?kAxisFieldNumber@SliceParameter@caffe@@2HB")
#pragma comment(linker, "/include:??1?$optional@Vlocale@std@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:??$reset@V?$DataTransformer@N@caffe@@@?$shared_ptr@V?$DataTransformer@N@caffe@@@boost@@QAEXPAV?$DataTransformer@N@caffe@@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$SoftmaxLayer@N@caffe@@@detail@boost@@QAE@PAV?$SoftmaxLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?value@?$enable_binary_hash@M$0BI@$0IA@@hash_detail@boost@@2_NB")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VAccuracyParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVAccuracyParameter@caffe@@@Z")
#pragma comment(linker, "/include:??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@$0A@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@Datum@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??$?0MHX@?$pair@MH@std@@QAE@$$QAU01@@Z")
#pragma comment(linker, "/include:??_C@_0BE@BMLAKGNB@Check?5failed?3?5?$CKptr?5?$AA@")
#pragma comment(linker, "/include:?value@?$is_const_rvalue_filter@I@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$Check_GEImpl@IH@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABIABHPBD@Z")
#pragma comment(linker, "/include:?value@?$is_error_code_enum@Vsystem_error@system@boost@@@system@boost@@2_NB")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$BNLLLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_R3?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??_R4DummyDataParameter@caffe@@6B@")
#pragma comment(linker, "/include:?test_compute_loss@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?ByteSize@ImageDataParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_7SigmoidParameter@caffe@@6B@")
#pragma comment(linker, "/include:?mutable_name@LayerParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$DummyDataLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_E?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@WM@AEPAXI@Z")
#pragma comment(linker, "/include:??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QAE@PAIPBU_Container_base0@1@@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVReshapeParameter@caffe@@@internal@protobuf@google@@YAPBVReshapeParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:??0init@?$min_shift_initializer@M@detail@math@boost@@QAE@XZ")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@1@AAPAU21@@Z")
#pragma comment(linker, "/include:??A?$map@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAH@Z")
#pragma comment(linker, "/include:?MergeFrom@FillerParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@Datum@caffe@@8")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$InnerProductLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$InnerProductLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??$_Unchecked@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@YAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@0@PAU10@@Z")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:??_C@_0BK@GEPODABI@There?5is?5no?5datum?5to?5add?4?$AA@")
#pragma comment(linker, "/include:?value@?$int_@$00@mpl@boost@@2HB")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@PAV12@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@V12@@std@@YAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?gInstantiationGuardHingeLossLayer@caffe@@3DA")
#pragma comment(linker, "/include:??$checked_delete@V?$AbsValLayer@N@caffe@@@boost@@YAXPAV?$AbsValLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?value@?$is_pointer_helper@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?CopyFrom@TanHParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PAV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?radix@_Num_base@std@@2HB")
#pragma comment(linker, "/include:??0V1LayerParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?_Destroy@?$vector@VNetParameter@caffe@@V?$allocator@VNetParameter@caffe@@@std@@@std@@IAEXPAVNetParameter@caffe@@0@Z")
#pragma comment(linker, "/include:?set_mirror@DataParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$TanHLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?set_has_meanfile@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?Update@?$Blob@N@caffe@@QAEXXZ")
#pragma comment(linker, "/include:?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?ForwardTo@?$Net@N@caffe@@QAENH@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@Vthread@boost@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?blobs_size@V0LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??_7Message@protobuf@google@@6B@")
#pragma comment(linker, "/include:?Engine_ARRAYSIZE@SPPParameter@caffe@@2HB")
#pragma comment(linker, "/include:?MergeFrom@InnerProductParameter@caffe@@UAEXABVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?SharedCtor@ExpParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R3?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??$?0V?$FlattenLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$FlattenLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@0@AAPAU10@@Z")
#pragma comment(linker, "/include:??0runtime_error@std@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?value@?$has_member_called_try_lock@PAV?$unique_lock@Vmutex@boost@@@boost@@$0A@@detail@sync@boost@@2_NB")
#pragma comment(linker, "/include:?Clear@DummyDataParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?set_batch_size@?$MemoryDataLayer@N@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?max_size@?$vector@_NV?$allocator@_N@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$_Rechecked@PAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@PAV12@@std@@YAAAPAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@AAPAV12@PAV12@@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVInfogainLossParameter@caffe@@@internal@protobuf@google@@YAPBVInfogainLossParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?GetCachedSize@LRNParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:?stepsize@SolverParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??_C@_0FF@HEGAOAFD@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?size@?$RepeatedPtrField@VNetParameter@caffe@@@protobuf@google@@QBEHXZ")
#pragma comment(linker, "/include:?current_step@SolverState@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@ExpParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_C@_0CJ@GEIEBMLA@Conv?5Layer?5takes?5a?5single?5blob?5a@")
#pragma comment(linker, "/include:??_R2?$BasePrefetchingDataLayer@N@caffe@@8")
#pragma comment(linker, "/include:??1?$BaseDataLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$swap@PAV?$PoolingLayer@N@caffe@@@std@@YAXAAPAV?$PoolingLayer@N@caffe@@0@Z")
#pragma comment(linker, "/include:??$?0Vthread@boost@@@?$shared_ptr@Vthread@boost@@@boost@@QAE@PAVthread@1@@Z")
#pragma comment(linker, "/include:?GetMetadata@BlobProtoVector@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?ForwardFrom@?$Net@M@caffe@@QAEMH@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VTanHParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVTanHParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?mutable_threshold_param@LayerParameter@caffe@@QAEPAVThresholdParameter@2@XZ")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??$destroy@U?$pair@MH@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@MH@std@@@std@@@std@@QAEXPAU?$pair@MH@1@@Z")
#pragma comment(linker, "/include:?max_size@?$vector@VNetParameter@caffe@@V?$allocator@VNetParameter@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?Backward_gpu@?$SilenceLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?mutable_diff@BlobProto@caffe@@QAEPAV?$RepeatedField@M@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$Net@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?set_has_batch_size@DataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?value@?$is_function_impl@PBD@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_E?$basic_fstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z")
#pragma comment(linker, "/include:??_C@_0BF@ILPODIAD@?5has?5unknown?5engine?4?$AA@")
#pragma comment(linker, "/include:??_C@_0EK@OEAENMGJ@Check?5failed?3?5param?4height_size?$CI@")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@@std@@YAPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:?has_log_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?has_batchsize@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?set_has_infogain_loss_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$caffe_set@H@caffe@@YAXHHPAH@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@@std@@YAXPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@0AAU?$_Wrap_alloc@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8")
#pragma comment(linker, "/include:??$checked_delete@V?$MVNLayer@M@caffe@@@boost@@YAXPAV?$MVNLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?has_regularization_type@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R0?AV?$EuclideanLossLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?CopyFrom@PoolingParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$MVNLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?set_source@HDF5DataParameter@caffe@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?ReadVarint64@CodedInputStream@io@protobuf@google@@QAE_NPA_K@Z")
#pragma comment(linker, "/include:?axis@AccuracyParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?InternalSwap@NetStateRule@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?total_milliseconds@?$time_duration@V0posix_time@boost@@V?$time_resolution_traits@Utime_resolution_traits_adapted64_impl@date_time@boost@@$04$0PECEA@$05H@date_time@2@@date_time@boost@@QBE_JXZ")
#pragma comment(linker, "/include:?set_mean_file@TransformationParameter@caffe@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:__CT??_R0?AV?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@@8??0?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z52")
#pragma comment(linker, "/include:?has_across_channels@MVNParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R2?$SigmoidCrossEntropyLossLayer@M@caffe@@8")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$MVNLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R2?$WindowDataLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$construct@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@@std@@QAEXPAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@1@$$QAU21@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??1bad_exception@std@@UAE@XZ")
#pragma comment(linker, "/include:??$_Unchecked@V?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@@std@@YA?AV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@0@V10@@Z")
#pragma comment(linker, "/include:??$_Ptr_cat@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@PAV12@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@0@Z")
#pragma comment(linker, "/include:?_Destroy@?$vector@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@IAEXPAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@0@Z")
#pragma comment(linker, "/include:??1?$vector@NV?$allocator@N@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$ConcatLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_7?$WindowDataLayer@N@caffe@@6B?$BaseDataLayer@N@1@@")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@?$allocator@V?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@std@@QAEXPAV?$shared_ptr@Ushared_state_base@detail@boost@@@boost@@@Z")
#pragma comment(linker, "/include:?set_has_kernel_size@PoolingParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?Engine_MAX@PoolingParameter@caffe@@2W4PoolingParameter_Engine@2@B")
#pragma comment(linker, "/include:??1?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_G?$Net@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$_Unchecked@V?$_Vector_val@U?$_Simple_types@U?$pair@NH@std@@@std@@@std@@@std@@YAPAU?$pair@NH@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@NH@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@_InputArray@cv@@8")
#pragma comment(linker, "/include:?ABS_N@?$ratio@$0CHBA@$00@boost@@0_JB")
#pragma comment(linker, "/include:??_R4?$BilinearFiller@M@caffe@@6B@")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@VRNG@Caffe@caffe@@@detail@boost@@QAE@PAVRNG@Caffe@caffe@@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$PowerLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?value@?$max_pow2_less@$0CA@$03@detail@boost@@2HB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$WindowDataLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:??$MergeFrom@VTypeHandler@?$RepeatedPtrField@VNetStateRule@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEXABV0123@@Z")
#pragma comment(linker, "/include:?group@ConvolutionParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?MinTopBlobs@?$SoftmaxWithLossLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?count@?$Blob@I@caffe@@QBEHH@Z")
#pragma comment(linker, "/include:?value@?$is_ununsigned_helper@_K@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$construct@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@PAV12@@?$allocator_traits@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@1@PAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@1@$$QAPAV31@@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$SliceLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$forward@AAPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@0@AAPAU10@@Z")
#pragma comment(linker, "/include:??_R3?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?kMirrorFieldNumber@WindowDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?size@?$vector@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@M@caffe@@@std@@@std@@QAEPAPAV?$FlattenLayer@M@caffe@@I@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$ReshapeLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?CopyArray@?$RepeatedField@H@protobuf@google@@AAEXPAHPBHH@Z")
#pragma comment(linker, "/include:?gInstantiationGuardIm2colLayer@caffe@@3DA")
#pragma comment(linker, "/include:??A?$vector@MV?$allocator@M@std@@@std@@QAEAAMI@Z")
#pragma comment(linker, "/include:?set_has_mirror@WindowDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?set_source@WindowDataParameter@caffe@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?set_name@NetParameter@caffe@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?capacity@?$vector@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VDropoutParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVDropoutParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?solver_type@SolverParameter@caffe@@QBE?AW4SolverParameter_SolverType@2@XZ")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@ContrastiveLossParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?set_kernel_size@ConvolutionParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?default_instance@DummyDataParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??$OwnInternal@VDatum@caffe@@@Arena@protobuf@google@@AAEXPAVDatum@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?dropout_ratio@V0LayerParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:??0?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$FlattenLayer@M@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??0?$shared_ptr@V?$Blob@M@caffe@@@boost@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?as_number@time_resolution_traits_adapted64_impl@date_time@boost@@SA_JV?$int_adapter@_J@23@@Z")
#pragma comment(linker, "/include:??$caffe_set@N@caffe@@YAXHNPAN@Z")
#pragma comment(linker, "/include:?_Inside@?$vector@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@IBE_NPBQAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@2@@Z")
#pragma comment(linker, "/include:?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$InnerProductLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?value@?$is_volatile_rval_filter@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?_Grow_to@?$vector@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@IBEII@Z")
#pragma comment(linker, "/include:?Get@?$RepeatedField@M@protobuf@google@@QBEABMH@Z")
#pragma comment(linker, "/include:??_R3thread_data_base@detail@boost@@8")
#pragma comment(linker, "/include:??$?0V?$HingeLossLayer@M@caffe@@@shared_count@detail@boost@@QAE@PAV?$HingeLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$Own@VHingeLossParameter@caffe@@@Arena@protobuf@google@@QAEXPAVHingeLossParameter@caffe@@@Z")
#pragma comment(linker, "/include:?set_has_pool@PoolingParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?GetCachedSize@AccuracyParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??_7?$NesterovSolver@N@caffe@@6B@")
#pragma comment(linker, "/include:?Reserve@?$RepeatedField@I@protobuf@google@@QAEXH@Z")
#pragma comment(linker, "/include:??_C@_0FD@DJIPBCBF@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??0InnerProductParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?value@?$ice_eq@$00$00@type_traits@boost@@2_NB")
#pragma comment(linker, "/include:??$_Fill_n@PAHIH@std@@YAPAHPAHIABH@Z")
#pragma comment(linker, "/include:??_R2?$DummyDataLayer@M@caffe@@8")
#pragma comment(linker, "/include:?get_bits@?$fp_traits_non_native@MUsingle_precision@detail@math@boost@@@detail@math@boost@@SAXMAAI@Z")
#pragma comment(linker, "/include:??$construct@MM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAEXPAM$$QAM@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$BNLLLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?is_modulo@_Num_base@std@@2_NB")
#pragma comment(linker, "/include:??_R2?$TanHLayer@N@caffe@@8")
#pragma comment(linker, "/include:?ToProto@?$Blob@I@caffe@@QBEXPAVBlobProto@2@_N@Z")
#pragma comment(linker, "/include:?dropout_param@LayerParameter@caffe@@QBEABVDropoutParameter@2@XZ")
#pragma comment(linker, "/include:?_Inside@?$vector@U?$pair@MH@std@@V?$allocator@U?$pair@MH@std@@@2@@std@@IBE_NPBU?$pair@MH@2@@Z")
#pragma comment(linker, "/include:??_C@_0DP@JMCKKNNE@layer_param?4propagate_down_size?$CI@")
#pragma comment(linker, "/include:??_C@_0BC@BLKEIFEB@?5?$CIowned?5by?5layer?5?$AA@")
#pragma comment(linker, "/include:??$_Construct@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@?$vector@HV?$allocator@H@std@@@std@@QAEXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0Uforward_iterator_tag@1@@Z")
#pragma comment(linker, "/include:?capacity@?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?Solve@?$Solver@M@caffe@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?c@?$choose_initial_n@$0CA@@static_log2_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:?_Mysize@?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@2IB")
#pragma comment(linker, "/include:?Swap@HDF5DataParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:?push_back@?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@QAEX$$QAPAV?$Blob@N@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0CE@DKPCPKMI@bottom_count_sum?5?$DN?$DN?5top?$FL0?$FN?9?$DOcoun@")
#pragma comment(linker, "/include:?value@?$operator_exists@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@F@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?kNameFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?mutable_unknown_fields@PoolingParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_GCPUTimer@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?MilliSeconds@CPUTimer@caffe@@UAEMXZ")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?set_has_image_data_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@@std@@QAEXPAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@2@I@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$PReLULayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?value@?$ice_and@$00$00$00$00$00$00$00@type_traits@boost@@2_NB")
#pragma comment(linker, "/include:??_R2bad_exception@std@@8")
#pragma comment(linker, "/include:??_C@_05PMCMDMKN@Power?$AA@")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$TanHLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:__CTA7?AV?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@")
#pragma comment(linker, "/include:?type@FillerParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??_7ImageDataParameter@caffe@@6B@")
#pragma comment(linker, "/include:?not_stage_size@NetStateRule@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??D?$shared_ptr@V?$Blob@M@caffe@@@boost@@QBEAAV?$Blob@M@caffe@@XZ")
#pragma comment(linker, "/include:?free_raw_heap_memory@detail@boost@@YAXPAX@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$ContrastiveLossLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?value@?$is_class_impl@PAV?$unique_lock@Vmutex@boost@@@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VSoftmaxParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVSoftmaxParameter@caffe@@@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$InnerProductLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$MVNLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$PReLULayer@M@caffe@@8")
#pragma comment(linker, "/include:?IsInitialized@WindowDataParameter@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??$?0VCaffe@caffe@@@?$shared_ptr@VCaffe@caffe@@@boost@@QAE@PAVCaffe@caffe@@@Z")
#pragma comment(linker, "/include:?relu_param@V1LayerParameter@caffe@@QBEABVReLUParameter@2@XZ")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:??1DummyDataParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?Forward_gpu@?$LRNLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$_Rechecked@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@PAV12@@std@@YAAAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@AAPAV10@PAV10@@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$DropoutLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$ContrastiveLossLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_G?$BNLLLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?set_stepsize@SolverParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?CopyFrom@NetParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??_C@_0FK@CEAEBOGG@Check?5failed?3?5num_data_filler?5?$DN?$DN@")
#pragma comment(linker, "/include:??_C@_0BG@LJHIPBMB@?5?5?5?5Test?5net?5output?5?$CD?$AA@")
#pragma comment(linker, "/include:?batchsize@V0LayerParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??$_Iter_cat@V?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??0?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@QAE@ABVdomain_error@std@@@Z")
#pragma comment(linker, "/include:??$?0V?$SigmoidLayer@N@caffe@@@?$shared_ptr@V?$SigmoidLayer@N@caffe@@@boost@@QAE@PAV?$SigmoidLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?minus_one@?$is_unsigned_values@H@detail@boost@@2HB")
#pragma comment(linker, "/include:?set_threshold@ThresholdParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$ArgMaxLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?has_lrn_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??0?$allocator@U?$pair@HH@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?UnsafeArenaSwap@?$RepeatedField@_J@protobuf@google@@QAEXPAV123@@Z")
#pragma comment(linker, "/include:??1SPPParameter@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R0?AVios_base@std@@@8")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V12@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@$$QAV34@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$WindowDataLayer@M@caffe@@@detail@boost@@QAE@PAV?$WindowDataLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?kTestIterFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$make_pair@ABMAAH@std@@YA?AU?$pair@MH@0@ABMAAH@Z")
#pragma comment(linker, "/include:?Backward_cpu@?$PowerLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??A?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QAEAAU?$pair@HH@1@I@Z")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@PAV12@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@V12@@std@@YAPAV?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@N@caffe@@@boost@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?unknown_fields@SPPParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?protobuf_AddDesc_caffe_2eproto@caffe@@YAXXZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$SPPLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_C@_06EFONEEIH@n?5?$DO?$DN?50?$AA@")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$SoftmaxLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?value@?$is_reference_impl@_J@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$destroy@U?$pair@HH@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@HH@std@@@std@@@std@@QAEXPAU?$pair@HH@1@@Z")
#pragma comment(linker, "/include:?set_has_kernel_h@PoolingParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?set_has_prelu_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R2?$BilinearFiller@M@caffe@@8")
#pragma comment(linker, "/include:?deallocate@?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@QAEXPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@2@I@Z")
#pragma comment(linker, "/include:??_C@_0DB@MDNPOENJ@V1LayerParameter?5?$CIsee?5above?$CJ?$DL?5co@")
#pragma comment(linker, "/include:?MergeFrom@SigmoidParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$MSRAFiller@N@caffe@@8")
#pragma comment(linker, "/include:?_Grow_to@?$vector@U?$pair@NH@std@@V?$allocator@U?$pair@NH@std@@@2@@std@@IBEII@Z")
#pragma comment(linker, "/include:??$swap@PAVV0LayerParameter@caffe@@@std@@YAXAAPAVV0LayerParameter@caffe@@0@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@NetParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:?has_contrastive_loss_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:__CT??_R0?AU?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@@8??0?$error_info_injector@Vbad_format_string@io@boost@@@exception_detail@boost@@QAE@ABU012@@Z40")
#pragma comment(linker, "/include:?sig_bits_fast@?$low_bits_mask_t@$07@boost@@2EB")
#pragma comment(linker, "/include:?add_bottom@V1LayerParameter@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??$?0V?$Blob@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$Blob@N@caffe@@@Z")
#pragma comment(linker, "/include:?seekoff@?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@MAE?AV?$fpos@H@std@@_JHH@Z")
#pragma comment(linker, "/include:?New@SigmoidParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:?New@ConcatParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?GetCachedSize@PythonParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$call_put_head@DU?$char_traits@D@std@@$$CBU?$group1@U?$group2@U?$_Smanip@_J@std@@ABN@detail@io@boost@@@detail@io@boost@@@detail@io@boost@@YAXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@PBX@Z")
#pragma comment(linker, "/include:??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@?$new_uniform_01@M@detail@random@boost@@QAEMAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@23@@Z")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$SoftmaxLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?ConvolutionParameter_Engine_IsValid@caffe@@YA_NH@Z")
#pragma comment(linker, "/include:??_R3?$MultinomialLogisticLossLayer@N@caffe@@8")
#pragma comment(linker, "/include:??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:??0?$error_info@Uthrow_function_@boost@@PBD@boost@@QAE@PBD@Z")
#pragma comment(linker, "/include:??$?0V?$FilterLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$FilterLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?message@error_code@system@boost@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?has_global_pooling@PoolingParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?table_x@?$normal_table@N@detail@random@boost@@2QBNB")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z")
#pragma comment(linker, "/include:??$_Unchecked@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@YAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@PAV10@@Z")
#pragma comment(linker, "/include:??_R4clone_base@exception_detail@boost@@6B@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$AbsValLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?SetCachedSize@V0LayerParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:??$CreateArray@D@Arena@protobuf@google@@SAPADPAV012@I@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:?set_fg_fraction@WindowDataParameter@caffe@@QAEXM@Z")
#pragma comment(linker, "/include:?MergePartialFromCodedStream@ReLUParameter@caffe@@UAE_NPAVCodedInputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?Reshape@?$FlattenLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VPReLUParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVPReLUParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@VDB@db@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?mutable_gpu_data@?$Blob@M@caffe@@QAEPAMXZ")
#pragma comment(linker, "/include:?LayerSetUp@?$ContrastiveLossLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$ContrastiveLossLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$SPPLayer@M@caffe@@@boost@@YAXPAV?$SPPLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?has_scale@DataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@PAV12@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@V12@@std@@YAPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?end@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?ByteSize@DataParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?_Tidy@?$vector@PAV?$FlattenLayer@N@caffe@@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:??0?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@U?$pair@HH@std@@@1@ABV?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@1@@Z")
#pragma comment(linker, "/include:?diff_at@?$Blob@N@caffe@@QBENABV?$vector@HV?$allocator@H@std@@@std@@@Z")
#pragma comment(linker, "/include:??$?0V?$DataTransformer@N@caffe@@@?$shared_ptr@V?$DataTransformer@N@caffe@@@boost@@QAE@PAV?$DataTransformer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0DC@FLDAKJHH@force_color?5and?5force_gray?5only?5@")
#pragma comment(linker, "/include:??1?$_Tree_comp@$0A@V?$_Tmap_traits@PBXUtss_data_node@detail@boost@@U?$less@PBX@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@5@$0A@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?Forward_cpu@?$ReLULayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VExpParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVExpParameter@caffe@@@Z")
#pragma comment(linker, "/include:??0?$DataTransformer@N@caffe@@QAE@ABVTransformationParameter@1@W4Phase@1@@Z")
#pragma comment(linker, "/include:?set_has_hinge_loss_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??0bad_alloc@std@@QAE@XZ")
#pragma comment(linker, "/include:?LABEL_OPTIONAL@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Label@23@B")
#pragma comment(linker, "/include:??_C@_0EC@KIACNOJN@Selector?5blob?5dimensions?5must?5be@")
#pragma comment(linker, "/include:?max@?$constrained_value@V?$simple_exception_policy@G$00$0M@Ubad_month@gregorian@boost@@@CV@boost@@@CV@boost@@SAGXZ")
#pragma comment(linker, "/include:??_G?$Blob@N@caffe@@QAEPAXI@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$Im2colLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@QAEXPAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@2@I@Z")
#pragma comment(linker, "/include:??$_Move@AAU?$pair@MH@std@@@std@@YA$$QAU?$pair@MH@0@AAU10@@Z")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@N@caffe@@V?$MemoryDataLayer@N@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@1@PAV?$MemoryDataLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_C@_04KGGFCLE@msra?$AA@")
#pragma comment(linker, "/include:??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VPowerParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVPowerParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$Layer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@AAPAU31@@Z")
#pragma comment(linker, "/include:?set_group@V0LayerParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$InnerProductLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$?0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@QAE@Upiecewise_construct_t@1@V?$tuple@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:??A?$vector@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@QAEAAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?is_neg_inf@?$int_adapter@I@date_time@boost@@SA_NI@Z")
#pragma comment(linker, "/include:??0?$allocator@VNetParameter@caffe@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?Get@Caffe@caffe@@SAAAV12@XZ")
#pragma comment(linker, "/include:?resize@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$DropoutLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?ByteSize@ConvolutionParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$caffe_axpy@M@caffe@@YAXHMPBMPAM@Z")
#pragma comment(linker, "/include:??_R4?$TanHLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??$construct@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@1@PAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@1@$$QAU31@@Z")
#pragma comment(linker, "/include:?value@?$length@$$CBV?$tuple@Unull_type@tuples@boost@@U123@U123@U123@U123@U123@U123@U123@U123@U123@@tuples@boost@@@tuples@boost@@2HB")
#pragma comment(linker, "/include:??0?$DummyDataLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?kShuffleFieldNumber@HDF5DataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?DecodeDatumToCVMatNative@caffe@@YA?AVMat@cv@@ABVDatum@1@@Z")
#pragma comment(linker, "/include:?Clear@?$RepeatedField@_J@protobuf@google@@QAEXXZ")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@2@@std@@IBEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@2@0@Z")
#pragma comment(linker, "/include:?local_size@V0LayerParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?Clear@BlobProtoVector@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??_C@_03HKMMIPC@Exp?$AA@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$SliceLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_C@_01JLIPDDHJ@?3?$AA@")
#pragma comment(linker, "/include:??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@6Boverflow_error@std@@@")
#pragma comment(linker, "/include:??$?0V?$InfogainLossLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$InfogainLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$?0V?$ReshapeLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$ReshapeLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$_Construct@V?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@QAEXV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@1@0Uforward_iterator_tag@1@@Z")
#pragma comment(linker, "/include:??$MakeCheckOpValueString@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@google@@YAXPAV?$basic_ostream@DU?$char_traits@D@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:?_Destroy@?$vector@PAV?$FlattenLayer@N@caffe@@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@IAEXPAPAV?$FlattenLayer@N@caffe@@0@Z")
#pragma comment(linker, "/include:?_Insert_n@?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@@2@IABU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@Z")
#pragma comment(linker, "/include:?tinyness_before@_Num_float_base@std@@2_NB")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$ReductionLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?CVMatToDatum@caffe@@YAXABVMat@cv@@PAVDatum@1@@Z")
#pragma comment(linker, "/include:??7?$shared_ptr@VSyncedMemory@caffe@@@boost@@QBE_NXZ")
#pragma comment(linker, "/include:?add_stage@NetState@caffe@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBHH@1@XZ")
#pragma comment(linker, "/include:?CopyFrom@AccuracyParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@HDF5DataParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_C@_06LJBABKPM@class?5?$AA@")
#pragma comment(linker, "/include:??_R3WindowDataParameter@caffe@@8")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PAPAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??$checked_delete@VRNG@Caffe@caffe@@@boost@@YAXPAVRNG@Caffe@caffe@@@Z")
#pragma comment(linker, "/include:?set_has_test_compute_loss@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?mutable_unknown_fields@ImageDataParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8")
#pragma comment(linker, "/include:??$?0V?$MemoryDataLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$MemoryDataLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?maybe_throw_exception@detail@io@boost@@YAXEII@Z")
#pragma comment(linker, "/include:__real@40400000")
#pragma comment(linker, "/include:??0?$vector@PAV?$FlattenLayer@N@caffe@@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@2@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@VDB@db@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?has_net@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_0BF@GBMFAEHB@inferred_axis_?5?$DN?$DN?5?91?$AA@")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$Filler@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??_R0?AV?$base_from_member@V?$shared_ptr@V?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@@boost@@$0A@@boost@@@8")
#pragma comment(linker, "/include:?Forward_cpu@?$MemoryDataLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VTransformationParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVTransformationParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_R2?$ConvolutionLayer@N@caffe@@8")
#pragma comment(linker, "/include:?_Reserve@?$vector@V?$shared_ptr@V?$Net@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??$get_smallest_value@N@detail@math@boost@@YANXZ")
#pragma comment(linker, "/include:??_C@_0DF@DNCLIMAH@Can?8t?5add?5data?5until?5current?5dat@")
#pragma comment(linker, "/include:??$?0V?$SoftmaxWithLossLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$SoftmaxWithLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$?6DU?$char_traits@D@std@@_J@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABU?$_Smanip@_J@0@@Z")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@U?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEXXZ")
#pragma comment(linker, "/include:?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$WindowDataLayer@N@caffe@@8")
#pragma comment(linker, "/include:?value@?$enable_binary_hash@O$0HB@$0EAAA@@hash_detail@boost@@2_NB")
#pragma comment(linker, "/include:?type@?$ConvolutionLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?_Lmost@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@XZ")
#pragma comment(linker, "/include:?set_normalize_variance@MVNParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:??_C@_0CI@EFHGEDMP@state?4history_size?$CI?$CJ?5?$DN?$DN?5history_@")
#pragma comment(linker, "/include:?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@std@@@std@@YAXPAV?$vector@_NV?$allocator@_N@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$Mutable@VTypeHandler@?$RepeatedPtrField@VV1LayerParameter@caffe@@@protobuf@google@@@RepeatedPtrFieldBase@internal@protobuf@google@@IAEPAVV1LayerParameter@caffe@@H@Z")
#pragma comment(linker, "/include:??$_Allocate@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@IPAV12@@Z")
#pragma comment(linker, "/include:?value@?$operator_returns_void@V?$basic_istream@_WU?$char_traits@_W@std@@@std@@_J@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:?count@?$Blob@M@caffe@@QBEHHH@Z")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VWindowDataParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVWindowDataParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:??_C@_0BK@LKMOFJMH@multinomial_logistic_loss?$AA@")
#pragma comment(linker, "/include:?New@ArgMaxParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??_G?$BilinearFiller@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@YAXPAPAV?$Blob@N@caffe@@0AAU?$_Wrap_alloc@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??_R2?$ExpLayer@M@caffe@@8")
#pragma comment(linker, "/include:?type@?$PoolingLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??$_Kfn@$$CBU?$pair@HH@std@@M@?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@SAABU?$pair@HH@1@ABU?$pair@$$CBU?$pair@HH@std@@M@1@@Z")
#pragma comment(linker, "/include:?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_C@_0EC@GLNBLDAG@SIGMOID_CROSS_ENTROPY_LOSS?5layer@")
#pragma comment(linker, "/include:?set_max_level@NetStateRule@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:??_C@_0FB@HDCABDFP@Check?5failed?3?5mean_values_?4size?$CI@")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$FlattenLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$ImageDataLayer@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?value@?$is_error_condition_enum@Verror_code@system@boost@@@system@boost@@2_NB")
#pragma comment(linker, "/include:??_G?$ReLULayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?value@?$is_reference_impl@_N@detail@boost@@2_NB")
#pragma comment(linker, "/include:?traps@_Num_float_base@std@@2_NB")
#pragma comment(linker, "/include:?set_has_det_context_pad@V0LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$Own@VBlobProto@caffe@@@Arena@protobuf@google@@QAEXPAVBlobProto@caffe@@@Z")
#pragma comment(linker, "/include:?zero@?$is_unsigned_values@H@detail@boost@@2HB")
#pragma comment(linker, "/include:??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??_C@_0CM@FOMGBBDO@Both?5shape?5and?5legacy?5fields?5wer@")
#pragma comment(linker, "/include:??$caffe_exp@M@caffe@@YAXHPBMPAM@Z")
#pragma comment(linker, "/include:??_C@_0CP@MGHMHKJA@Check?5failed?3?5param_?4has_mean_fi@")
#pragma comment(linker, "/include:?set_has_contrastive_loss_param@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?den@?$ratio@$00$0DOI@@boost@@2_JB")
#pragma comment(linker, "/include:??$?0V?$FilterLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$FilterLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?InternalSwap@HDF5OutputParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?descriptor@ReductionParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?has_local_size@LRNParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?kPadFieldNumber@ConvolutionParameter@caffe@@2HB")
#pragma comment(linker, "/include:?set_has_group@ConvolutionParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?SetCachedSize@ExpParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:??_R2PowerParameter@caffe@@8")
#pragma comment(linker, "/include:??$?0V?$PReLULayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$PReLULayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$_Buynode_if_nil@AAU?$pair@$$CBU?$pair@HH@std@@H@std@@@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@HU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@H@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@1@PAU21@AAU?$pair@$$CBU?$pair@HH@std@@H@1@@Z")
#pragma comment(linker, "/include:?has_channel_shared@PReLUParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?NetStateRule_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?SharedDtor@ReshapeParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$?0VCursor@db@caffe@@@?$shared_ptr@VCursor@db@caffe@@@boost@@QAE@PAVCursor@db@caffe@@@Z")
#pragma comment(linker, "/include:?value@?$alignment_of_impl@T?$lower_alignment@$07@detail@boost@@@detail@boost@@2IB")
#pragma comment(linker, "/include:??_G?$SplitLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?channels@MemoryDataParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??_7LRNParameter@caffe@@6B@")
#pragma comment(linker, "/include:??_R2system_error@system@boost@@8")
#pragma comment(linker, "/include:??$ReadPrimitiveFromArray@M$01@WireFormatLite@internal@protobuf@google@@SAPBEPBEPAM@Z")
#pragma comment(linker, "/include:?set_has_crop_size@TransformationParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?mutable_dropout_param@V1LayerParameter@caffe@@QAEPAVDropoutParameter@2@XZ")
#pragma comment(linker, "/include:??$addressof@U?$pair@$$CBU?$pair@HH@std@@M@std@@@std@@YAPAU?$pair@$$CBU?$pair@HH@std@@M@0@AAU10@@Z")
#pragma comment(linker, "/include:?LayerType_ARRAYSIZE@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$_Move@AAPAVHDF5OutputParameter@caffe@@@std@@YA$$QAPAVHDF5OutputParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:??_R4ImageDataParameter@caffe@@6B@")
#pragma comment(linker, "/include:??_R0?AV?$basic_fstream@DU?$char_traits@D@std@@@std@@@8")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@U?$error_info_injector@Vtoo_few_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEXXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EN@?$base_from_member@V?$shared_ptr@V?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@@boost@@$0A@@boost@@8")
#pragma comment(linker, "/include:??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@@Z")
#pragma comment(linker, "/include:?ShareTrainedLayersWith@?$Net@M@caffe@@QAEXPBV12@@Z")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$Im2colLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VImageDataParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVImageDataParameter@caffe@@@Z")
#pragma comment(linker, "/include:??0ReshapeParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:??$_Unchecked@PBI@std@@YAPBIPBI@Z")
#pragma comment(linker, "/include:?value@?$is_pointer_impl@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?default_seed@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@2IB")
#pragma comment(linker, "/include:??$?RPAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@@No_Op@?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@QAEABQAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@23@ABQAV423@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?blob_by_name@?$Net@N@caffe@@QBE?BV?$shared_ptr@V?$Blob@N@caffe@@@boost@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@XZ")
#pragma comment(linker, "/include:??_C@_0EB@CEDGOBGG@The?5size?5of?5mat_vector?5must?5be?5e@")
#pragma comment(linker, "/include:__real@0010000000000000")
#pragma comment(linker, "/include:??0ConcatParameter@caffe@@QAE@XZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@SoftmaxParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?value@?$is_class_impl@Vexception@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??1?$_Tree_buy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_0CJ@HCOLEOOK@Trying?5to?5copy?5blobs?5of?5differen@")
#pragma comment(linker, "/include:?has_engine@PoolingParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?asum_diff@?$Blob@I@caffe@@QBEIXZ")
#pragma comment(linker, "/include:??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z")
#pragma comment(linker, "/include:?_default_det_crop_mode_@V0LayerParameter@caffe@@0PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A")
#pragma comment(linker, "/include:??$swap@PAV?$DataTransformer@N@caffe@@@std@@YAXAAPAV?$DataTransformer@N@caffe@@0@Z")
#pragma comment(linker, "/include:??_7?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@6Bruntime_error@std@@@")
#pragma comment(linker, "/include:??$_Unchecked@PAD@std@@YAPADPAD@Z")
#pragma comment(linker, "/include:?InferBlobShape@?$DataTransformer@M@caffe@@QAE?AV?$vector@HV?$allocator@H@std@@@std@@ABVDatum@2@@Z")
#pragma comment(linker, "/include:??_R4?$WindowDataLayer@M@caffe@@6B?$BaseDataLayer@M@1@@")
#pragma comment(linker, "/include:??0?$Net@N@caffe@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4Phase@1@@Z")
#pragma comment(linker, "/include:?Reshape@?$DummyDataLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??$caffe_cpu_dot@M@caffe@@YAMHPBM0@Z")
#pragma comment(linker, "/include:?value@?$has_member_try_lock@PAV?$unique_lock@Vmutex@boost@@@boost@@$0A@@detail@sync@boost@@2_NB")
#pragma comment(linker, "/include:??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?value@?$length@$$CBUnull_type@tuples@boost@@@tuples@boost@@2HB")
#pragma comment(linker, "/include:?set_has_max@FillerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?k@V0LayerParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?Backward_gpu@?$SoftmaxWithLossLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?mutable_exp_param@LayerParameter@caffe@@QAEPAVExpParameter@2@XZ")
#pragma comment(linker, "/include:?has_loss_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?engine@ConvolutionParameter@caffe@@QBE?AW4ConvolutionParameter_Engine@2@XZ")
#pragma comment(linker, "/include:??1?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$SigmoidLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bbad_year@gregorian@2@@")
#pragma comment(linker, "/include:?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@@2@@Z")
#pragma comment(linker, "/include:??_R2?$NesterovSolver@M@caffe@@8")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$_Allocate@PAV?$Blob@M@caffe@@@std@@YAPAPAV?$Blob@M@caffe@@IPAPAV12@@Z")
#pragma comment(linker, "/include:?AppendBottom@?$Net@M@caffe@@IAEHABVNetParameter@2@HHPAV?$set@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@5@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?set_engine@ReLUParameter@caffe@@QAEXW4ReLUParameter_Engine@2@@Z")
#pragma comment(linker, "/include:?size@?$vector@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?value@?$integral_c@_J$0DOI@@mpl@boost@@2_JB")
#pragma comment(linker, "/include:?kIncludeFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?on_error@?$simple_exception_policy@G$0FHI@$0CHBA@Ubad_year@gregorian@boost@@@CV@boost@@SAXGGW4violation_enum@23@@Z")
#pragma comment(linker, "/include:??_C@_0CH@EEOJACPG@Unknown?5parameter?5pool?5for?5layer@")
#pragma comment(linker, "/include:?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?min@?$numeric_limits@M@std@@SAMXZ")
#pragma comment(linker, "/include:??$_Equal@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@QBE_NABV01@@Z")
#pragma comment(linker, "/include:??_C@_0FA@BKGBKJNG@boost?3?3too_many_args?3?5format?9str@")
#pragma comment(linker, "/include:?set_min_level@NetStateRule@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?set_width@BlobProto@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:??0thread_exception@boost@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?bit_count@?$low_bits_mask_t@$0BA@@boost@@2IB")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@QAEPAPAV?$FlattenLayer@N@caffe@@I@Z")
#pragma comment(linker, "/include:??_C@_0DE@GDKECJCG@Gradient?5clipping?3?5scaling?5down?5@")
#pragma comment(linker, "/include:?set_has_clip_gradients@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?SIGMOID@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??$?0V?$AccuracyLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$AccuracyLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?tempering_t@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@2IB")
#pragma comment(linker, "/include:?cpu_data@?$Blob@H@caffe@@QBEPBHXZ")
#pragma comment(linker, "/include:?_Getal@?$_Tree_alloc@$0A@U?$_Tree_base_types@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??_C@_0FI@BPCLFHHI@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$EuclideanLossLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?Forward_gpu@?$ReLULayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@MH@std@@@std@@@std@@@std@@QAE@PAU?$pair@MH@1@PBU_Container_base0@1@@Z")
#pragma comment(linker, "/include:??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@2@@Z")
#pragma comment(linker, "/include:?end@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@1@@Z")
#pragma comment(linker, "/include:?push_back@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@QAEX$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@@Z")
#pragma comment(linker, "/include:??$forward@AAV?$vector@HV?$allocator@H@std@@@std@@@std@@YAAAV?$vector@HV?$allocator@H@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:?ForwardTo@?$Net@M@caffe@@QAEMH@Z")
#pragma comment(linker, "/include:?has_force_gray@TransformationParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B")
#pragma comment(linker, "/include:?GetCachedSize@SolverState@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@@std@@YAPAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z")
#pragma comment(linker, "/include:?set_has_relu_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?MergeFrom@HDF5DataParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?Merge@?$GenericTypeHandler@VLayerParameter@caffe@@@internal@protobuf@google@@SAXABVLayerParameter@caffe@@PAV56@@Z")
#pragma comment(linker, "/include:?ceil@@YAMM@Z")
#pragma comment(linker, "/include:?default_instance_@NetParameter@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?CrossChannelForward_gpu@?$LRNLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?value@?$sign_wknd@_J$0CHBA@@aux@mpl@boost@@2_JB")
#pragma comment(linker, "/include:?InternalSwap@SoftmaxParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEXXZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?set_mirror@V0LayerParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:??$_Copy_impl@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??$?0AAI_NX@?$pair@I_N@std@@QAE@AAI$$QA_N@Z")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$wrap_scan_notdigit@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V?$ctype@D@2@@detail@io@boost@@YA?AV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@ABV?$ctype@D@4@V34@1@Z")
#pragma comment(linker, "/include:?has_normalize_variance@MVNParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?value@?$ice_and@$0A@$0A@$00$00$00$00$00@type_traits@boost@@2_NB")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@QAEPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@2@I@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$DummyDataLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$Filler@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R2SolverState@caffe@@8")
#pragma comment(linker, "/include:?kPhaseFieldNumber@NetState@caffe@@2HB")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$SoftmaxLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?Clear@?$GenericTypeHandler@VFillerParameter@caffe@@@internal@protobuf@google@@SAXPAVFillerParameter@caffe@@@Z")
#pragma comment(linker, "/include:?kEpsFieldNumber@MVNParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$?0V?$SilenceLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$SilenceLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$construct@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V12@@?$allocator_traits@V?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@SAXAAV?$allocator@V?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@1@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@1@$$QAV31@@Z")
#pragma comment(linker, "/include:??0?$_Tree_buy@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:?ComputeUpdateValue@?$NesterovSolver@N@caffe@@MAEXHN@Z")
#pragma comment(linker, "/include:?kAggregateValueFieldNumber@UninterpretedOption@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_C@_0CO@CEMOOOJO@?5?5background?5?$CInon?9object?$CJ?5overla@")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$SilenceLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??$call_put_head@DU?$char_traits@D@std@@QBD@detail@io@boost@@YAXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@PBX@Z")
#pragma comment(linker, "/include:?phase@?$Net@N@caffe@@QBE?AW4Phase@2@XZ")
#pragma comment(linker, "/include:?value@?$max_pow2_less@$0CA@$0BA@@detail@boost@@2HB")
#pragma comment(linker, "/include:?adopt@?$refcount_ptr@Uerror_info_container@exception_detail@boost@@@exception_detail@boost@@QAEXPAUerror_info_container@23@@Z")
#pragma comment(linker, "/include:??_R4?$EuclideanLossLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?ContrastiveLossParameter_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??$_Uninit_move@PAMPAMU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAPAMPAM00AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z")
#pragma comment(linker, "/include:??_7?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@6B@")
#pragma comment(linker, "/include:?min@?$numeric_limits@N@std@@SANXZ")
#pragma comment(linker, "/include:?set_has_std@FillerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?LayerSetUp@?$BaseDataLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$SplitLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$destroy@V?$vector@_NV?$allocator@_N@std@@@std@@@?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEXPAV?$vector@_NV?$allocator@_N@std@@@1@@Z")
#pragma comment(linker, "/include:__xmm@9908b0df9908b0df9908b0df9908b0df")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$SGDSolver@M@caffe@@8")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$DropoutLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$DropoutLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:__CT??_R0?AVthread_resource_error@boost@@@8??0thread_resource_error@boost@@QAE@ABV01@@Z44")
#pragma comment(linker, "/include:??0?$allocator@U?$pair@NH@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??1?$ReshapeLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8")
#pragma comment(linker, "/include:?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ")
#pragma comment(linker, "/include:?_Destroy_if_not_nil@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:?swap@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:?set_force_encoded_color@DataParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:??_GLossParameter@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?batch_size@MemoryDataParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?UnsafeArenaSwap@?$RepeatedField@H@protobuf@google@@QAEXPAV123@@Z")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@std@@@std@@YAPAV?$shared_ptr@V?$Layer@M@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@M@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:?get@?$optional@Vlocale@std@@@boost@@QBEABVlocale@std@@XZ")
#pragma comment(linker, "/include:?kCurrentStepFieldNumber@SolverState@caffe@@2HB")
#pragma comment(linker, "/include:?has_debug_info@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?Clear@PReLUParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?_Unchecked@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@NH@std@@@std@@@std@@@std@@QBEPAU?$pair@NH@2@XZ")
#pragma comment(linker, "/include:?InternalSwap@?$RepeatedField@I@protobuf@google@@AAEXPAV123@@Z")
#pragma comment(linker, "/include:?_Orphan_range@?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@IBEXPAU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@0@Z")
#pragma comment(linker, "/include:?is_integer@_Num_base@std@@2_NB")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@EltwiseParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??_C@_0DJ@KIMELLPC@Either?5axis?5or?5concat_dim?5should@")
#pragma comment(linker, "/include:?MinTopBlobs@?$DataLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?pow@@YAMMM@Z")
#pragma comment(linker, "/include:??$CreateInternalRawArray@D@Arena@protobuf@google@@AAEPADI@Z")
#pragma comment(linker, "/include:?Transform@?$DataTransformer@N@caffe@@QAEXABVMat@cv@@PAV?$Blob@N@2@@Z")
#pragma comment(linker, "/include:?stride@V0LayerParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?default_instance@ReductionParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:?set_pad@V0LayerParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??$?0V?$AccuracyLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$AccuracyLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$DummyDataLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??$forward@ABUpiecewise_construct_t@std@@@std@@YAABUpiecewise_construct_t@0@ABU10@@Z")
#pragma comment(linker, "/include:?scale_diff@?$Blob@I@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??$_Rechecked@PAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@PAV12@@std@@YAAAPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@AAPAV12@PAV12@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@SAIABV?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@2@@Z")
#pragma comment(linker, "/include:??A?$vector@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@QAEAAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$Net@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?kKernelsizeFieldNumber@V0LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$SliceLayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$SliceLayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:?ByteSize@InfogainLossParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:__CT??_R0?AU?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@@8??0?$error_info_injector@Vdomain_error@std@@@exception_detail@boost@@QAE@ABU012@@Z32")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@FillerParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:??0TransformationParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?Forward_cpu@?$BNLLLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?Phase_IsValid@caffe@@YA_NH@Z")
#pragma comment(linker, "/include:??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@ZU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@$0A@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_C@_05EHPMMFBK@split?$AA@")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$AccuracyLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$WriteMessageNoVirtualToArray@VFillerParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAPAEHABVFillerParameter@caffe@@PAE@Z")
#pragma comment(linker, "/include:?device_id@SolverParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??$construct@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@V12@@?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@QAEXPAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@$$QAV23@@Z")
#pragma comment(linker, "/include:?size@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@MU?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@$0A@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??1?$FilterLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?_Lbound@?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@ABU?$pair@HH@2@@Z")
#pragma comment(linker, "/include:?value@?$enable_binary_hash@M$0EA@$0EAAA@@hash_detail@boost@@2_NB")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$SigmoidLayer@N@caffe@@V12@@detail@boost@@YAXPAV?$shared_ptr@V?$SigmoidLayer@N@caffe@@@1@PAV?$SigmoidLayer@N@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??_C@_04EFGJFIGI@BNLL?$AA@")
#pragma comment(linker, "/include:??$OwnInternal@VNetState@caffe@@@Arena@protobuf@google@@AAEXPAVNetState@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:__real@3fe0000000000000")
#pragma comment(linker, "/include:??$destroy@PAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@1@@Z")
#pragma comment(linker, "/include:?kBaseFieldNumber@LogParameter@caffe@@2HB")
#pragma comment(linker, "/include:?type@?$InnerProductLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?shift_size@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@2IB")
#pragma comment(linker, "/include:?mutable_unknown_fields@SliceParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$_Unchecked@PAN@std@@YAPANPAN@Z")
#pragma comment(linker, "/include:?ABSVAL@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:?PoolMethod_MAX@PoolingParameter@caffe@@2W4PoolingParameter_PoolMethod@2@B")
#pragma comment(linker, "/include:?not_a_number@?$int_adapter@_J@date_time@boost@@SA?BV123@XZ")
#pragma comment(linker, "/include:??$move@AAV?$tuple@ABU?$pair@HH@std@@@std@@@std@@YA$$QAV?$tuple@ABU?$pair@HH@std@@@0@AAV10@@Z")
#pragma comment(linker, "/include:?kLrnParamFieldNumber@LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:?type@?$SigmoidCrossEntropyLossLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?ASUM@ReductionParameter@caffe@@2W4ReductionParameter_ReductionOp@2@B")
#pragma comment(linker, "/include:?kReservedRangeFieldNumber@DescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?Forward_gpu@?$ReLULayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0?$_Tree@V?$_Tmap_traits@U?$pair@HH@std@@U12@U?$less@U?$pair@HH@std@@@2@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@U?$pair@HH@std@@@1@ABV?$allocator@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@1@@Z")
#pragma comment(linker, "/include:__real@400b8a7c476d1741")
#pragma comment(linker, "/include:??_R0?AV?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:??$_Iter_cat@PBD@std@@YA?AUrandom_access_iterator_tag@0@ABQBD@Z")
#pragma comment(linker, "/include:?WriteInt64NoTagToArray@WireFormatLite@internal@protobuf@google@@SAPAE_JPAE@Z")
#pragma comment(linker, "/include:??$swap@PAV?$ConcatLayer@M@caffe@@@std@@YAXAAPAV?$ConcatLayer@M@caffe@@0@Z")
#pragma comment(linker, "/include:??_R3?$ConstantFiller@M@caffe@@8")
#pragma comment(linker, "/include:??$_Unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@@Z")
#pragma comment(linker, "/include:??_R4?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:??_R3?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:?set_snapshot@SolverParameter@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:??_G?$BaseDataLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??0CodedInputStream@io@protobuf@google@@QAE@PAVZeroCopyInputStream@123@@Z")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$DataLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?has_window_data_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@@std@@YAPAV?$shared_ptr@V?$Filler@M@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$MultinomialLogisticLossLayer@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??0?$allocator@M@std@@QAE@XZ")
#pragma comment(linker, "/include:?CreatePrefetchThread@?$BasePrefetchingDataLayer@M@caffe@@UAEXXZ")
#pragma comment(linker, "/include:??0?$_Tree_buy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z")
#pragma comment(linker, "/include:?value@?$int_@$0L@@mpl@boost@@2HB")
#pragma comment(linker, "/include:?kLastReservedNumber@FieldDescriptor@protobuf@google@@2HB")
#pragma comment(linker, "/include:?default_instance@DropoutParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAX@1@AAPAU21@@Z")
#pragma comment(linker, "/include:??_7?$Im2colLayer@N@caffe@@6B@")
#pragma comment(linker, "/include:??$_Buynode_if_nil@AAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@?$_Tree@V?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@PAX@1@PAU21@AAU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z")
#pragma comment(linker, "/include:?ReadProtoFromBinaryFile@caffe@@YA_NPBDPAVMessage@protobuf@google@@@Z")
#pragma comment(linker, "/include:?Swap@PoolingParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$AbsValLayer@M@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?kCropSizeFieldNumber@DataParameter@caffe@@2HB")
#pragma comment(linker, "/include:?ReadImageToCVMat@caffe@@YA?AVMat@cv@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HH_N@Z")
#pragma comment(linker, "/include:??_C@_0CE@EIBGONKN@start_axis?5?$DM?$DN?5bottom?$FL0?$FN?9?$DOnum_axe@")
#pragma comment(linker, "/include:??0?$Blob@I@caffe@@QAE@HHHH@Z")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VWindowDataParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVWindowDataParameter@caffe@@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@ThresholdParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$Filler@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_C@_0CJ@IHHLBENB@casting?5concat_dim?5from?5uint32?5t@")
#pragma comment(linker, "/include:??_GSyncedMemory@caffe@@QAEPAXI@Z")
#pragma comment(linker, "/include:??_R4InnerProductParameter@caffe@@6B@")
#pragma comment(linker, "/include:??$_Fill@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_N@std@@YAXV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@0AB_N@Z")
#pragma comment(linker, "/include:?SetCachedSize@HDF5DataParameter@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?blob_share_mode_size@V1LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?size@?$RepeatedField@H@protobuf@google@@QBEHXZ")
#pragma comment(linker, "/include:?kEndFieldNumber@DescriptorProto_ExtensionRange@protobuf@google@@2HB")
#pragma comment(linker, "/include:??_C@_0EA@LIADOPIG@Check?5failed?3?5target_blobs?$FLj?$FN?9?$DOs@")
#pragma comment(linker, "/include:?pointer_to@?$pointer_traits@PBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@SAPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@2@ABU32@@Z")
#pragma comment(linker, "/include:?default_instance_@ParamSpec@caffe@@0PAV12@A")
#pragma comment(linker, "/include:?descriptor@HingeLossParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$PoolingLayer@N@caffe@@@detail@boost@@QAE@PAV?$PoolingLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_R3?$PositiveUnitballFiller@M@caffe@@8")
#pragma comment(linker, "/include:??_R3?$BasePrefetchingDataLayer@M@caffe@@8")
#pragma comment(linker, "/include:?has_tanh_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?Get@?$RepeatedField@_N@protobuf@google@@QBEAB_NH@Z")
#pragma comment(linker, "/include:??_R0?AV?$SigmoidCrossEntropyLossLayer@N@caffe@@@8")
#pragma comment(linker, "/include:??_R4ThresholdParameter@caffe@@6B@")
#pragma comment(linker, "/include:??_G?$MultinomialLogisticLossLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?mutable_train_state@SolverParameter@caffe@@QAEPAVNetState@2@XZ")
#pragma comment(linker, "/include:?kExtensionFieldNumber@DescriptorProto@protobuf@google@@2HB")
#pragma comment(linker, "/include:?kBetaFieldNumber@LRNParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VV0LayerParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVV0LayerParameter@caffe@@@Z")
#pragma comment(linker, "/include:??1?$MVNLayer@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??_C@_0BN@LLDFCBEA@Check?5failed?3?5blob?9?$DOcount?$CI?$CJ?5?$AA@")
#pragma comment(linker, "/include:?set_has_level@NetState@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?shift_size@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@rand@boost@@2IB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$SplitLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??0?$thread_data@V?$bind_t@XV?$mf0@XVInternalThread@caffe@@@_mfi@boost@@V?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@3@@_bi@boost@@@detail@boost@@QAE@$$QAV?$bind_t@XV?$mf0@XVInternalThread@caffe@@@_mfi@boost@@V?$list1@V?$value@PAVInternalThread@caffe@@@_bi@boost@@@_bi@3@@_bi@2@@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@std@@@std@@YAXPAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@0AAU?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@VLayerParameter@caffe@@@detail@boost@@QAE@PAVLayerParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_7?$Filler@M@caffe@@6B@")
#pragma comment(linker, "/include:??$Creator_DeconvolutionLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?Merge@?$GenericTypeHandler@VNetStateRule@caffe@@@internal@protobuf@google@@SAXABVNetStateRule@caffe@@PAV56@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@V?$ReshapeLayer@N@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:??_R0?AV?$LogLayer@M@caffe@@@8")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@1@PAV?$shared_ptr@V?$PoolingLayer@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$DataLayer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:?SharedCtor@DataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$enable_error_info@Ubad_year@gregorian@boost@@@boost@@YA?AU?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@0@ABUbad_year@gregorian@0@@Z")
#pragma comment(linker, "/include:?has_hdf5_output_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R2InnerProductParameter@caffe@@8")
#pragma comment(linker, "/include:??$_Unchecked@PAV?$vector@MV?$allocator@M@std@@@std@@@std@@YAPAV?$vector@MV?$allocator@M@std@@@0@PAV10@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@bad_format_string@io@boost@@8")
#pragma comment(linker, "/include:?Forward_cpu@?$ArgMaxLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$_Val_type@PAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@YAPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@0@PAU10@@Z")
#pragma comment(linker, "/include:?_Kfn@?$_Tset_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z")
#pragma comment(linker, "/include:??4?$stream_format_state@DU?$char_traits@D@std@@@detail@io@boost@@QAEAAU0123@ABU0123@@Z")
#pragma comment(linker, "/include:??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@1@XZ")
#pragma comment(linker, "/include:?ShareDiff@?$Blob@M@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?category@error_condition@std@@QBEABVerror_category@2@XZ")
#pragma comment(linker, "/include:??_R3?$DummyDataLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$checked_delete@V?$ExpLayer@N@caffe@@@boost@@YAXPAV?$ExpLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVDatum@caffe@@@internal@protobuf@google@@YAPBVDatum@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:??0?$LRNLayer@M@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?GetMetadata@LRNParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:?release@Mat@cv@@QAEXXZ")
#pragma comment(linker, "/include:?value@?$is_xchar_to_xchar@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?set_has_display@SolverParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?_Unused_capacity@?$vector@IV?$allocator@_N@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B")
#pragma comment(linker, "/include:?data_at@?$Blob@N@caffe@@QBENABV?$vector@HV?$allocator@H@std@@@std@@@Z")
#pragma comment(linker, "/include:?slice_param@V1LayerParameter@caffe@@QBEABVSliceParameter@2@XZ")
#pragma comment(linker, "/include:?name@V1LayerParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@ContrastiveLossParameter@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?found@?$type_with_alignment_imp@$07@detail@boost@@0IB")
#pragma comment(linker, "/include:??0?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VDatum@caffe@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:??_C@_07KHPMCPLE@Flatten?$AA@")
#pragma comment(linker, "/include:??0bad_year@gregorian@boost@@QAE@XZ")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?swap@?$shared_ptr@V?$Net@M@caffe@@@boost@@QAEXAAV12@@Z")
#pragma comment(linker, "/include:?MergeFrom@ConvolutionParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?weight_cpu_gemm@?$BaseConvolutionLayer@M@caffe@@IAEXPBM0PAM@Z")
#pragma comment(linker, "/include:?value@?$enable_binary_hash@M$0DF@$0EAA@@hash_detail@boost@@2_NB")
#pragma comment(linker, "/include:?asum_diff@?$Blob@M@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?assign@?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@QAEXIABU?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@Z")
#pragma comment(linker, "/include:??1?$LogLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?_Lbound@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@ABH@Z")
#pragma comment(linker, "/include:?type@?$SPPLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??$?0V?$tuple@ABH@std@@V?$tuple@$$$V@1@$0A@$S@?$pair@$$CBHH@std@@QAE@AAV?$tuple@ABH@1@AAV?$tuple@$$$V@1@U?$_Arg_idx@$0A@@1@U?$_Arg_idx@$S@1@@Z")
#pragma comment(linker, "/include:?ExactNumTopBlobs@?$NeuronLayer@N@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?is_const@?$cv_traits_imp@PAUbad_day_of_year@gregorian@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?MaxTopBlobs@?$SoftmaxWithLossLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?value@?$is_base_and_derived_impl@Vexception@std@@Ubad_year@gregorian@boost@@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_C@_0BI@BIDLGCEH@Thread?5execution?5failed?$AA@")
#pragma comment(linker, "/include:?value@?$int_@$01@mpl@boost@@2HB")
#pragma comment(linker, "/include:??0?$allocator@U?$pair@$$CBHH@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??_G?$ExpLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R4?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@6Bthread_resource_error@2@@")
#pragma comment(linker, "/include:?InternalSwap@WindowDataParameter@caffe@@AAEXPAV12@@Z")
#pragma comment(linker, "/include:?InternalThreadEntry@?$ImageDataLayer@N@caffe@@MAEXXZ")
#pragma comment(linker, "/include:?kContrastiveLossParamFieldNumber@V1LayerParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z")
#pragma comment(linker, "/include:?SetCachedSize@SolverState@caffe@@EBEXH@Z")
#pragma comment(linker, "/include:?has_is_color@ImageDataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_Gthread_resource_error@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?SIGN_N@?$ratio@$00$0DLJKMKAA@@boost@@0_JB")
#pragma comment(linker, "/include:?digits@?$numeric_limits@O@std@@2HB")
#pragma comment(linker, "/include:?mutable_unknown_fields@LayerParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:__CT??_R0?AVoverflow_error@std@@@8??0overflow_error@std@@QAE@ABV01@@Z12")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVTransformationParameter@caffe@@@internal@protobuf@google@@YAPBVTransformationParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:?has_display@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??0ReductionParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?size@?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?digits10@?$numeric_limits@_N@std@@2HB")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_p@V?$PoolingLayer@N@caffe@@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBHH@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAH@2@V?$tuple@$$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBHH@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBHH@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAH@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?GetCachedSize@SigmoidParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$ExpLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?SharedDtor@FillerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_R3?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@8")
#pragma comment(linker, "/include:??_G?$pair@QBXUtss_data_node@detail@boost@@@std@@QAEPAXI@Z")
#pragma comment(linker, "/include:??_C@_0CF@IOBHPKDG@this?9?$DOblobs_?$FL0?$FN?9?$DOcount?$CI?$CJ?5?$DN?$DN?5chan@")
#pragma comment(linker, "/include:?New@FlattenParameter@caffe@@UBEPAV12@XZ")
#pragma comment(linker, "/include:??$?0AANAAHX@?$pair@NH@std@@QAE@AANAAH@Z")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@@std@@YAXPAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@0AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:??_R0?AV?$EltwiseLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?_Xlen@?$vector@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@M@caffe@@@boost@@@std@@@std@@IBEXXZ")
#pragma comment(linker, "/include:??_R3?$sp_counted_impl_p@V?$EuclideanLossLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?_Grow_to@?$vector@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@IBEII@Z")
#pragma comment(linker, "/include:?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QBEXABV12@@Z")
#pragma comment(linker, "/include:??$forward@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@std@@YA$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@0@AAU10@@Z")
#pragma comment(linker, "/include:?CrossChannelBackward_cpu@?$LRNLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_C@_0CB@MGLPJPIP@num_?5?$DN?$DN?5bottom?$FLbottom_id?$FN?9?$DOnum?$CI?$CJ@")
#pragma comment(linker, "/include:?size@?$vector@PAV?$FlattenLayer@N@caffe@@V?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?max_size@?$allocator@PAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?Forward_cpu@?$ReLULayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0?$vector@MV?$allocator@M@std@@@std@@QAE@$$QAV01@@Z")
#pragma comment(linker, "/include:??_C@_0DP@BNJDPMBF@prototxt?5and?5?4?1build?1tools?1upgra@")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$LogLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$ExpLayer@N@caffe@@@detail@boost@@QAE@PAV?$ExpLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$SoftmaxWithLossLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?set_has_crop_size@WindowDataParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Allocate@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@YAPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@0@IPAV10@@Z")
#pragma comment(linker, "/include:?_Buynode0@?$_Tree_buy@U?$pair@$$CBU?$pair@HH@std@@M@std@@V?$allocator@U?$pair@$$CBU?$pair@HH@std@@M@std@@@2@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@2@XZ")
#pragma comment(linker, "/include:??_R2?$ContrastiveLossLayer@M@caffe@@8")
#pragma comment(linker, "/include:?Transform@?$DataTransformer@N@caffe@@QAEXABV?$vector@VMat@cv@@V?$allocator@VMat@cv@@@std@@@std@@PAV?$Blob@N@2@@Z")
#pragma comment(linker, "/include:?what@format_error@io@boost@@UBEPBDXZ")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@@exception_detail@boost@@QAE@ABV012@@Z")
#pragma comment(linker, "/include:?UpgradeNetDataTransformation@caffe@@YAXPAVNetParameter@1@@Z")
#pragma comment(linker, "/include:?count@?$Blob@N@caffe@@QBEHH@Z")
#pragma comment(linker, "/include:??$construct@PAV?$FlattenLayer@N@caffe@@PAV12@@?$allocator@PAV?$FlattenLayer@N@caffe@@@std@@QAEXPAPAV?$FlattenLayer@N@caffe@@$$QAPAV23@@Z")
#pragma comment(linker, "/include:??$Creator_HingeLossLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??_R4BlobProtoVector@caffe@@6B@")
#pragma comment(linker, "/include:??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??$checked_delete@VCaffe@caffe@@@boost@@YAXPAVCaffe@caffe@@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$Blob@N@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_C@_0CI@DPIGHPOJ@casting?5slice_dim?5from?5uint32?5to@")
#pragma comment(linker, "/include:??_C@_0M@KEHEALAB@?0?5top?5blob?5?$AA@")
#pragma comment(linker, "/include:??_R3SigmoidParameter@caffe@@8")
#pragma comment(linker, "/include:?kWidthFieldNumber@MemoryDataParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_G?$BasePrefetchingDataLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:?value@?$result_@H@?$is_mem_fun_pointer_select@$0A@@detail@boost@@2_NB")
#pragma comment(linker, "/include:??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@QBXUtss_data_node@detail@boost@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:?InitAsDefaultInstance@V1LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?axis@SliceParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?default_instance@SoftmaxParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:?descriptor@PoolingParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?ABS_D@?$ratio@$00$0DOI@@boost@@0_JB")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$ContrastiveLossLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??_C@_0DD@FMMALOEG@produced?5negative?5result?$DL?5concat@")
#pragma comment(linker, "/include:??0?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@QAE@ABU012@@Z")
#pragma comment(linker, "/include:??_8?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@7B@")
#pragma comment(linker, "/include:??_R2HDF5DataParameter@caffe@@8")
#pragma comment(linker, "/include:??_R4BlobShape@caffe@@6B@")
#pragma comment(linker, "/include:??_C@_0BB@CMMPGGKA@Check?5failed?3?5b?5?$AA@")
#pragma comment(linker, "/include:??_G?$sp_counted_impl_pd@PAV?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@VNo_Op@?$basic_oaltstringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@23@@detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?_Reserve@?$vector@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@IAEXI@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBU?$pair@HH@std@@H@std@@ABUpiecewise_construct_t@2@V?$tuple@$$QAU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@H@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBU?$pair@HH@std@@H@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@$$QAU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?descriptor@PythonParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$?0V?$ConvolutionLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$ConvolutionLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?scale_data@?$Blob@I@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$ArgMaxLayer@M@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?weight_decay@SolverParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:??_C@_08BEMMDCEE@_iter_?$CFd?$AA@")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$SliceLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??$_Move@AAPAVthread@boost@@@std@@YA$$QAPAVthread@boost@@AAPAV12@@Z")
#pragma comment(linker, "/include:??$_Pop_heap_0@PAU?$pair@NH@std@@U12@U?$greater@U?$pair@NH@std@@@2@@std@@YAXPAU?$pair@NH@0@0U?$greater@U?$pair@NH@std@@@0@0@Z")
#pragma comment(linker, "/include:?CopyFrom@InnerProductParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??4?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QAEAAV01@ABV01@@Z")
#pragma comment(linker, "/include:?set_biasterm@V0LayerParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:?bit_count@?$low_bits_mask_t@$0CA@@boost@@2IB")
#pragma comment(linker, "/include:??$Creator_PReLULayer@N@caffe@@YA?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:?WriteInt64NoTag@WireFormatLite@internal@protobuf@google@@SAX_JPAVCodedOutputStream@io@34@@Z")
#pragma comment(linker, "/include:?default_instance@MVNParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@QAE@XZ")
#pragma comment(linker, "/include:?has_threshold_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$_Val_type@PAVNetParameter@caffe@@@std@@YAPAVNetParameter@caffe@@PAV12@@Z")
#pragma comment(linker, "/include:??$construct@PAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@1@AAPAU31@@Z")
#pragma comment(linker, "/include:??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:?has_engine@SoftmaxParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$MakeCheckOpString@PAV?$Blob@M@caffe@@PAV12@@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABQAV?$Blob@M@caffe@@0PBD@Z")
#pragma comment(linker, "/include:?Reshape@?$SilenceLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?hdf5_output_param@V1LayerParameter@caffe@@QBEABVHDF5OutputParameter@2@XZ")
#pragma comment(linker, "/include:??1domain_error@std@@UAE@XZ")
#pragma comment(linker, "/include:?Backward_cpu@?$PoolingLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_C@_0CA@DOJOGGDO@shape?$FLi?$FN?5?$DM?$DN?52147483647?5?1?5count_?$AA@")
#pragma comment(linker, "/include:?has_scale@V0LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??0exception@boost@@IAE@XZ")
#pragma comment(linker, "/include:??_7?$BaseDataLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?Swap@DataParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:?value@?$operator_returns_Ret@V?$basic_istream@DU?$char_traits@D@std@@@std@@FUdont_care@has_right_shift_impl@detail@boost@@$0A@@has_right_shift_impl@detail@boost@@2_NB")
#pragma comment(linker, "/include:?word_size@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@2IB")
#pragma comment(linker, "/include:?has_mean@FillerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?BackwardFrom@?$Net@N@caffe@@QAEXH@Z")
#pragma comment(linker, "/include:?ExactNumBottomBlobs@?$FlattenLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?Backward_cpu@?$AccuracyLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??$float_next_imp@NU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@math@boost@@@detail@math@boost@@YANABNABU?$policy@Udefault_policy@policies@math@boost@@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@U1234@@policies@12@@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$DeconvolutionLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@E@std@@@std@@@std@@YAXPAE0AAU?$_Wrap_alloc@V?$allocator@E@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@SigmoidParameter@caffe@@8")
#pragma comment(linker, "/include:?has_infogain_loss_param@LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_7DropoutParameter@caffe@@6B@")
#pragma comment(linker, "/include:??$?0V?$ContrastiveLossLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$ContrastiveLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?set_has_transform_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??_Gbad_exception@std@@UAEPAXI@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?has_eltwise_param@V1LayerParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??1?$AdaGradSolver@M@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?STOCHASTIC@PoolingParameter@caffe@@2W4PoolingParameter_PoolMethod@2@B")
#pragma comment(linker, "/include:??_G?$SGDSolver@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R3?$_Iosb@H@std@@8")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VPReLUParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVPReLUParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_R2?$basic_altstringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@io@boost@@8")
#pragma comment(linker, "/include:?Swap@DummyDataParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??A?$vector@_NV?$allocator@_N@std@@@std@@QBE_NI@Z")
#pragma comment(linker, "/include:?gcd_n1_n2@?$ratio_divide@V?$ratio@$00$0DOI@@boost@@V?$ratio@$00$0JIJGIA@@2@@ratio_detail@boost@@0_JB")
#pragma comment(linker, "/include:??_7domain_error@std@@6B@")
#pragma comment(linker, "/include:??0?$tuple@$$$V@std@@QAE@XZ")
#pragma comment(linker, "/include:?mutable_param@LayerParameter@caffe@@QAEPAVParamSpec@2@H@Z")
#pragma comment(linker, "/include:?Clear@EltwiseParameter@caffe@@UAEXXZ")
#pragma comment(linker, "/include:?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ")
#pragma comment(linker, "/include:?size@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:?SharedDtor@BlobProtoVector@caffe@@AAEXXZ")
#pragma comment(linker, "/include:?scale@V0LayerParameter@caffe@@QBEMXZ")
#pragma comment(linker, "/include:?value@?$integral_constant@I$00@std@@2IB")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@VSyncedMemory@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?Forward_gpu@?$ThresholdLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_C@_0BE@FDJNOJDC@Blob?5must?5be?54?5dim?4?$AA@")
#pragma comment(linker, "/include:?weight_decay_size@V0LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?Norm_MAX@HingeLossParameter@caffe@@2W4HingeLossParameter_Norm@2@B")
#pragma comment(linker, "/include:??_R3ContrastiveLossParameter@caffe@@8")
#pragma comment(linker, "/include:??0?$DeconvolutionLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:?CrossChannelForward_cpu@?$LRNLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??_R0?AVDataParameter@caffe@@@8")
#pragma comment(linker, "/include:?is_signed@?$numeric_limits@I@std@@2_NB")
#pragma comment(linker, "/include:??E?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$Im2colLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?New@SliceParameter@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:??$_Allocate@V?$shared_ptr@V?$Net@N@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Net@N@caffe@@@boost@@IPAV12@@Z")
#pragma comment(linker, "/include:?default_instance@V0LayerParameter@caffe@@SAABV12@XZ")
#pragma comment(linker, "/include:??C?$shared_ptr@V?$DataTransformer@N@caffe@@@boost@@QBEPAV?$DataTransformer@N@caffe@@XZ")
#pragma comment(linker, "/include:?has_random_seed@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$make_heap@PAU?$pair@MH@std@@U?$greater@U?$pair@MH@std@@@2@@std@@YAXPAU?$pair@MH@0@0U?$greater@U?$pair@MH@std@@@0@@Z")
#pragma comment(linker, "/include:??$construct@NN@?$allocator@N@std@@QAEXPAN$$QAN@Z")
#pragma comment(linker, "/include:?max@?$numeric_limits@M@std@@SAMXZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@@2@@std@@YAPAU?$pair@PAVcondition_variable@boost@@PAVmutex@2@@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVcondition_variable@boost@@PAVmutex@2@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:?_Tidy@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@IAEXXZ")
#pragma comment(linker, "/include:??4?$shared_ptr@VGenerator@RNG@Caffe@caffe@@@boost@@QAEAAV01@ABV01@@Z")
#pragma comment(linker, "/include:?CopyFrom@FillerParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?default_seed@?$linear_congruential_engine@_K$0FNOOMOGGN@$0L@$0BAAAAAAAAAAAA@@random@boost@@2_KB")
#pragma comment(linker, "/include:??$MakeCheckOpValueString@I@google@@YAXPAV?$basic_ostream@DU?$char_traits@D@std@@@std@@ABI@Z")
#pragma comment(linker, "/include:?IsInitialized@BlobProtoVector@caffe@@UBE_NXZ")
#pragma comment(linker, "/include:??_G?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_R3_Generic_error_category@std@@8")
#pragma comment(linker, "/include:??B?$optional@Vlocale@std@@@boost@@QBE_NXZ")
#pragma comment(linker, "/include:??0too_many_args@io@boost@@QAE@II@Z")
#pragma comment(linker, "/include:?unknown_fields@FillerParameter@caffe@@QBEABVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?resize@?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@QAEXI@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$Layer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ")
#pragma comment(linker, "/include:?gInstantiationGuardLossLayer@caffe@@3DA")
#pragma comment(linker, "/include:??_C@_0BD@JLJBGFKH@output?5data?5size?3?5?$AA@")
#pragma comment(linker, "/include:?value@?$sign_wknd@_J$0GE@@aux@mpl@boost@@2_JB")
#pragma comment(linker, "/include:??$?0V?$HingeLossLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$HingeLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?engine@?$variate_generator@PAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@V?$normal_distribution@N@23@@random@boost@@QAEAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@23@XZ")
#pragma comment(linker, "/include:?allocate@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@QAEPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:?MinTopBlobs@?$SPPLayer@M@caffe@@UBEHXZ")
#pragma comment(linker, "/include:?kDefaultTotalBytesLimit@CodedInputStream@io@protobuf@google@@0HB")
#pragma comment(linker, "/include:?kNamePartFieldNumber@UninterpretedOption_NamePart@protobuf@google@@2HB")
#pragma comment(linker, "/include:??0?$clone_impl@U?$error_info_injector@Voverflow_error@std@@@exception_detail@boost@@@exception_detail@boost@@AAE@ABV012@Uclone_tag@012@@Z")
#pragma comment(linker, "/include:??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:??Y?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QAEAAV01@H@Z")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@@std@@QAEXPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:??0bad_exception_@exception_detail@boost@@QAE@XZ")
#pragma comment(linker, "/include:??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@?$new_uniform_01@N@detail@random@boost@@QAENAAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@23@@Z")
#pragma comment(linker, "/include:?digits@?$numeric_limits@F@std@@2HB")
#pragma comment(linker, "/include:??_C@_0BB@DEJJNHFM@?0?5Testing?5net?5?$CI?$CD?$AA@")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@U12@@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?ByteSize@LRNParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$destroy@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@?$allocator_traits@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@SAXAAV?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@1@PAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@@Z")
#pragma comment(linker, "/include:?New@BlobShape@caffe@@UBEPAV12@PAVArena@protobuf@google@@@Z")
#pragma comment(linker, "/include:?deallocate@?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@std@@@std@@QAEXPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@HV?$allocator@H@std@@@2@@2@I@Z")
#pragma comment(linker, "/include:?test_nets@?$Solver@M@caffe@@QAEABV?$vector@V?$shared_ptr@V?$Net@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@XZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$LogLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_R3?$SilenceLayer@N@caffe@@8")
#pragma comment(linker, "/include:?Forward@?$Net@M@caffe@@QAEABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV34@PAM@Z")
#pragma comment(linker, "/include:??_C@_0CO@MNNADGJG@could?5not?5convert?5calendar?5time?5@")
#pragma comment(linker, "/include:??$sp_pointer_construct@V?$Layer@M@caffe@@V?$ReLULayer@M@2@@detail@boost@@YAXPAV?$shared_ptr@V?$Layer@M@caffe@@@1@PAV?$ReLULayer@M@caffe@@AAVshared_count@01@@Z")
#pragma comment(linker, "/include:??$construct@U?$pair@$$CBU?$pair@HH@std@@M@std@@ABUpiecewise_construct_t@2@V?$tuple@ABU?$pair@HH@std@@@2@V?$tuple@$$$V@2@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBU?$pair@HH@std@@M@std@@PAX@std@@@1@PAU?$pair@$$CBU?$pair@HH@std@@M@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABU?$pair@HH@std@@@1@$$QAV?$tuple@$$$V@1@@Z")
#pragma comment(linker, "/include:?TransformationParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?value@?$int_@$04@mpl@boost@@2HB")
#pragma comment(linker, "/include:?JS_NUMBER@FieldOptions@protobuf@google@@2W4FieldOptions_JSType@23@B")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$PReLULayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?has_base@LogParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$?0V?$HingeLossLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$HingeLossLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??A?$vector@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Filler@N@caffe@@@boost@@@std@@@std@@QAEAAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@I@Z")
#pragma comment(linker, "/include:??$MakeCheckOpString@PAV?$Blob@N@caffe@@PAV12@@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABQAV?$Blob@N@caffe@@0PBD@Z")
#pragma comment(linker, "/include:??1?$AccuracyLayer@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:??$call_put_last@DU?$char_traits@D@std@@$$CBU?$group1@U?$group2@U?$_Smanip@_J@std@@ABN@detail@io@boost@@@detail@io@boost@@@detail@io@boost@@YAXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@PBX@Z")
#pragma comment(linker, "/include:??_C@_0M@LHFFLJJC@?$CJ?5to?5layer?5?$AA@")
#pragma comment(linker, "/include:??$checked_delete@V?$DummyDataLayer@M@caffe@@@boost@@YAXPAV?$DummyDataLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??$?0V?$DummyDataLayer@N@caffe@@@shared_count@detail@boost@@QAE@PAV?$DummyDataLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:??_C@_0N@MLHJAING@?4solverstate?$AA@")
#pragma comment(linker, "/include:??$_Uninitialized_copy@V?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@std@@PAMU?$_Wrap_alloc@V?$allocator@M@std@@@2@@std@@YAPAMV?$move_iterator@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@0@0PAMAAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z")
#pragma comment(linker, "/include:??_R3SPPParameter@caffe@@8")
#pragma comment(linker, "/include:?clone@?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@$0PPPPPPPM@A@BEPBVclone_base@23@XZ")
#pragma comment(linker, "/include:??_7?$DataTransformer@M@caffe@@6B@")
#pragma comment(linker, "/include:?set_stride_h@PoolingParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:??0InternalMetadataWithArena@internal@protobuf@google@@QAE@PAVArena@23@@Z")
#pragma comment(linker, "/include:?has_mean_file@DataParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_03DEAJCEP@lrn?$AA@")
#pragma comment(linker, "/include:?Clear@?$RepeatedPtrField@VBlobProto@caffe@@@protobuf@google@@QAEXXZ")
#pragma comment(linker, "/include:?kKernelHFieldNumber@PoolingParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$OwnInternal@VSliceParameter@caffe@@@Arena@protobuf@google@@AAEXPAVSliceParameter@caffe@@U?$integral_constant@_N$00@internal@12@@Z")
#pragma comment(linker, "/include:?sign@?$fp_traits_non_native@OUextended_double_precision@detail@math@boost@@@detail@math@boost@@2IB")
#pragma comment(linker, "/include:?_default_type_@FillerParameter@caffe@@0PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A")
#pragma comment(linker, "/include:??_C@_0BF@INHAGCA@Unknown?5pool?5method?5?$AA@")
#pragma comment(linker, "/include:?kDeprecatedFieldNumber@EnumOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:?IM2COL@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@PAU32@@Z")
#pragma comment(linker, "/include:?LayerSetUp@?$SigmoidCrossEntropyLossLayer@M@caffe@@UAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$Im2colLayer@N@caffe@@@boost@@YAXPAV?$Im2colLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?erase@?$_Tree@V?$_Tmap_traits@PBXUtss_data_node@detail@boost@@U?$less@PBX@std@@V?$allocator@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@5@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@@2@@Z")
#pragma comment(linker, "/include:__xmm@80000000000000008000000000000000")
#pragma comment(linker, "/include:??$?0$$QAHPAPAX@?$tuple@$$QAH@std@@QAE@$$QAV01@@Z")
#pragma comment(linker, "/include:??_C@_0CL@EIIJOKMP@Collecting?5Learning?5Rate?5and?5Wei@")
#pragma comment(linker, "/include:?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$FlattenLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$DataLayer@N@caffe@@8")
#pragma comment(linker, "/include:?Forward_cpu@?$ReshapeLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??$ReadMessageNoVirtual@VHingeLossParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SA_NPAVCodedInputStream@io@23@PAVHingeLossParameter@caffe@@@Z")
#pragma comment(linker, "/include:?WriteUInt32NoTagToArray@WireFormatLite@internal@protobuf@google@@SAPAEIPAE@Z")
#pragma comment(linker, "/include:?GetCachedSize@DropoutParameter@caffe@@UBEHXZ")
#pragma comment(linker, "/include:??$DynamicCastToGenerated@$$CBVDataParameter@caffe@@@internal@protobuf@google@@YAPBVDataParameter@caffe@@PBVMessage@12@@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$ReductionLayer@M@caffe@@@boost@@YAXPAV?$ReductionLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?mutable_unknown_fields@TransformationParameter@caffe@@QAEPAVUnknownFieldSet@protobuf@google@@XZ")
#pragma comment(linker, "/include:?MergeFrom@PythonParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:?concat_dim@ConcatParameter@caffe@@QBEIXZ")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$ReshapeLayer@N@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:?ImageDataParameter_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:?kCoeffFieldNumber@EltwiseParameter@caffe@@2HB")
#pragma comment(linker, "/include:??$?0V?$SplitLayer@M@caffe@@@?$shared_ptr@V?$Layer@M@caffe@@@boost@@QAE@PAV?$SplitLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?Label_MAX@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Label@23@B")
#pragma comment(linker, "/include:?set_has_name@NetParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$_Uninit_move@PAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@PAPAV12@U?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@2@@std@@YAPAPAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@PAPAV10@00AAU?$_Wrap_alloc@V?$allocator@PAV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@@std@@@0@@Z")
#pragma comment(linker, "/include:??$_Allocate@PAV?$FlattenLayer@M@caffe@@@std@@YAPAPAV?$FlattenLayer@M@caffe@@IPAPAV12@@Z")
#pragma comment(linker, "/include:?max_size@?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@VRNG@Caffe@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_7_Generic_error_category@std@@6B@")
#pragma comment(linker, "/include:?capacity@?$vector@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@V?$allocator@U?$format_item@DU?$char_traits@D@std@@V?$allocator@D@2@@detail@io@boost@@@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:??_C@_0BL@CPENFMAH@param_?4average_loss?$CI?$CJ?5?$DO?$DN?51?$AA@")
#pragma comment(linker, "/include:?TYPE_GROUP@FieldDescriptorProto@protobuf@google@@2W4FieldDescriptorProto_Type@23@B")
#pragma comment(linker, "/include:??$_Uninit_def_fill_n@PAVNetParameter@caffe@@IV?$allocator@VNetParameter@caffe@@@std@@V12@@std@@YAXPAVNetParameter@caffe@@IAAU?$_Wrap_alloc@V?$allocator@VNetParameter@caffe@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:??1?$shared_ptr@VCursor@db@caffe@@@boost@@QAE@XZ")
#pragma comment(linker, "/include:?value@?$is_base_of_imp@Uoptional_tag@optional_detail@boost@@$$CBV?$optional@Vlocale@std@@@3@@detail@boost@@2_NB")
#pragma comment(linker, "/include:?Check_GTImpl@google@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HHPBD@Z")
#pragma comment(linker, "/include:?InferBlobShape@?$DataTransformer@M@caffe@@QAE?AV?$vector@HV?$allocator@H@std@@@std@@ABVMat@cv@@@Z")
#pragma comment(linker, "/include:??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?SLICE@V1LayerParameter@caffe@@2W4V1LayerParameter_LayerType@2@B")
#pragma comment(linker, "/include:??1?$vector@V?$shared_ptr@V?$Net@M@caffe@@@boost@@V?$allocator@V?$shared_ptr@V?$Net@M@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?Forward_cpu@?$DropoutLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBHH@std@@@std@@@1@@Z")
#pragma comment(linker, "/include:??_C@_0FK@JFKEGNBO@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??$?0V?$SPPLayer@N@caffe@@@?$shared_ptr@V?$Layer@N@caffe@@@boost@@QAE@PAV?$SPPLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?kSnapshotPrefixFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$SigmoidCrossEntropyLossLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:??_R1A@?0A@EA@LayerParameter@caffe@@8")
#pragma comment(linker, "/include:??$PtrValue@UContainer@InternalMetadataWithArena@internal@protobuf@google@@@InternalMetadataWithArena@internal@protobuf@google@@ABEPAUContainer@0123@XZ")
#pragma comment(linker, "/include:??_C@_0BB@EJEBNCFB@x2?5?$DM?5cv_img?4cols?$AA@")
#pragma comment(linker, "/include:?loss_weight_size@V1LayerParameter@caffe@@QBEHXZ")
#pragma comment(linker, "/include:??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@QBXUtss_data_node@detail@boost@@@std@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?debug_info@SolverParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??$MessageSizeNoVirtual@VThresholdParameter@caffe@@@WireFormatLite@internal@protobuf@google@@SAHABVThresholdParameter@caffe@@@Z")
#pragma comment(linker, "/include:??_R0?AVexception@std@@@8")
#pragma comment(linker, "/include:?Backward_cpu@?$ConvolutionLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:?ParamSpec_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:?is_volatile@?$cv_traits_imp@PAI@detail@boost@@2_NB")
#pragma comment(linker, "/include:??_C@_0DC@KGMPPGE@Must?5specify?5?8height?8?5once?0?5or?5o@")
#pragma comment(linker, "/include:??$Creator_BNLLLayer@M@caffe@@YA?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@0@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$BNLLLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:??$addressof@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Layer@N@caffe@@@boost@@AAV12@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizesToArray@DataParameter@caffe@@UBEPAEPAE@Z")
#pragma comment(linker, "/include:?has_num_output@ConvolutionParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:?asum_diff@?$Blob@H@caffe@@QBEHXZ")
#pragma comment(linker, "/include:?Forward_gpu@?$LogLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0?$shared_ptr@VGenerator@RNG@Caffe@caffe@@@boost@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:?CopyArray@?$RepeatedField@_N@protobuf@google@@AAEXPA_NPB_NH@Z")
#pragma comment(linker, "/include:??$checked_delete@V?$SPPLayer@N@caffe@@@boost@@YAXPAV?$SPPLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:?set_stride@ConvolutionParameter@caffe@@QAEXI@Z")
#pragma comment(linker, "/include:?GetMetadata@HingeLossParameter@caffe@@UBE?AUMetadata@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$_Rechecked@PAV?$vector@MV?$allocator@M@std@@@std@@PAV12@@std@@YAAAPAV?$vector@MV?$allocator@M@std@@@0@AAPAV10@PAV10@@Z")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$SoftmaxWithLossLayer@M@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$error_info_injector@Vtoo_many_args@io@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??$_Uninitialized_move@PAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@std@@@std@@YAPAV?$shared_ptr@V?$Blob@N@caffe@@@boost@@PAV12@00AAU?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@@0@@Z")
#pragma comment(linker, "/include:?CUDNN@SoftmaxParameter@caffe@@2W4SoftmaxParameter_Engine@2@B")
#pragma comment(linker, "/include:?kMapEntryFieldNumber@MessageOptions@protobuf@google@@2HB")
#pragma comment(linker, "/include:?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B")
#pragma comment(linker, "/include:?set_force_backward@NetParameter@caffe@@QAEX_N@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$clone_impl@Ubad_exception_@exception_detail@boost@@@exception_detail@boost@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:?InternalSwap@?$RepeatedField@M@protobuf@google@@AAEXPAV123@@Z")
#pragma comment(linker, "/include:?kNetFieldNumber@SolverParameter@caffe@@2HB")
#pragma comment(linker, "/include:?set_has_slice_param@LayerParameter@caffe@@AAEXXZ")
#pragma comment(linker, "/include:??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@HH@2@@std@@PAX@0@AAPAU10@@Z")
#pragma comment(linker, "/include:??_R0?AV?$DropoutLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?has_stride_w@ConvolutionParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@random@boost@@@detail@boost@@8")
#pragma comment(linker, "/include:??_R2?$sp_counted_impl_p@V?$EuclideanLossLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$vector@_NV?$allocator@_N@std@@@std@@PAV12@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@V12@@std@@YAPAV?$vector@_NV?$allocator@_N@std@@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@2@I@Z")
#pragma comment(linker, "/include:?kAxisFieldNumber@ConcatParameter@caffe@@2HB")
#pragma comment(linker, "/include:?_Tidy@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@IAEXXZ")
#pragma comment(linker, "/include:?end@?$vector@U?$pair@NH@std@@V?$allocator@U?$pair@NH@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@NH@std@@@std@@@std@@@2@XZ")
#pragma comment(linker, "/include:?kMessageSetMessageTag@WireFormatLite@internal@protobuf@google@@2HB")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@V?$ReshapeLayer@M@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_R3?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??_C@_0FH@JIKLDDJA@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:??$_Allocate@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@std@@@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@M@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@PAX@0@IPAU10@@Z")
#pragma comment(linker, "/include:?mutable_gpu_diff@?$Blob@M@caffe@@QAEPAMXZ")
#pragma comment(linker, "/include:??C?$shared_ptr@V?$Layer@M@caffe@@@boost@@QBEPAV?$Layer@M@caffe@@XZ")
#pragma comment(linker, "/include:?operation@ReductionParameter@caffe@@QBE?AW4ReductionParameter_ReductionOp@2@XZ")
#pragma comment(linker, "/include:??0?$_Tree_buy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6A?AV?$shared_ptr@V?$Layer@N@caffe@@@boost@@ABVLayerParameter@caffe@@@Z@std@@@1@@Z")
#pragma comment(linker, "/include:?max_size@?$vector@NV?$allocator@N@std@@@std@@QBEIXZ")
#pragma comment(linker, "/include:?Swap@ThresholdParameter@caffe@@QAEXPAV12@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$SigmoidLayer@N@caffe@@8")
#pragma comment(linker, "/include:??1?$Filler@N@caffe@@UAE@XZ")
#pragma comment(linker, "/include:?AVE@V0LayerParameter@caffe@@2W4V0LayerParameter_PoolMethod@2@B")
#pragma comment(linker, "/include:?size@?$vector@U?$pair@MH@std@@V?$allocator@U?$pair@MH@std@@@2@@std@@QBEIXZ")
#pragma comment(linker, "/include:??$addressof@$$CBV?$shared_ptr@V?$Blob@N@caffe@@@boost@@@std@@YAPBV?$shared_ptr@V?$Blob@N@caffe@@@boost@@ABV12@@Z")
#pragma comment(linker, "/include:??$_Move@AAPAVConvolutionParameter@caffe@@@std@@YA$$QAPAVConvolutionParameter@caffe@@AAPAV12@@Z")
#pragma comment(linker, "/include:?value@?$br_mul@$00$0GE@@ratio_detail@boost@@2_JB")
#pragma comment(linker, "/include:??_R4bad_exception_@exception_detail@boost@@6Bexception@2@@")
#pragma comment(linker, "/include:?get_untyped_deleter@?$sp_counted_impl_p@V?$Blob@N@caffe@@@detail@boost@@UAEPAXXZ")
#pragma comment(linker, "/include:??0?$pair@HH@std@@QAE@XZ")
#pragma comment(linker, "/include:?descriptor@Datum@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:??$swap@PAVRNG@Caffe@caffe@@@std@@YAXAAPAVRNG@Caffe@caffe@@0@Z")
#pragma comment(linker, "/include:?value@?$ice_not@$00@type_traits@boost@@2_NB")
#pragma comment(linker, "/include:??_D?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@QAEXXZ")
#pragma comment(linker, "/include:?_Lrotate@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBHH@std@@PAX@2@@Z")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$LogLayer@M@caffe@@8")
#pragma comment(linker, "/include:??0shared_count@detail@boost@@QAE@ABV012@@Z")
#pragma comment(linker, "/include:??_R0?AV?$sp_counted_impl_p@VGenerator@RNG@Caffe@caffe@@@detail@boost@@@8")
#pragma comment(linker, "/include:?allocate@?$allocator@I@std@@QAEPAII@Z")
#pragma comment(linker, "/include:?sig_bits@?$low_bits_mask_t@$0CA@@boost@@2IB")
#pragma comment(linker, "/include:??$forward@V?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@YA$$QAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@AAV12@@Z")
#pragma comment(linker, "/include:?GetLearningRateAndWeightDecay@?$Net@M@caffe@@IAEXXZ")
#pragma comment(linker, "/include:??_Gtoo_few_args@io@boost@@UAEPAXI@Z")
#pragma comment(linker, "/include:?BlobProtoVector_descriptor_@?A0x5e4fc710@caffe@@3PBVDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??_R4?$InfogainLossLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??_C@_0DD@LPPOHAII@Unknown?5parameter?5det_fg_thresho@")
#pragma comment(linker, "/include:??_R4?$DropoutLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:?type@?$AccuracyLayer@N@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:?kHeaderSize@Arena@protobuf@google@@0IB")
#pragma comment(linker, "/include:??_7bad_alloc@std@@6B@")
#pragma comment(linker, "/include:??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$$V@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z")
#pragma comment(linker, "/include:??$construct@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@std@@@std@@QAEXPAV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@1@$$QAV21@@Z")
#pragma comment(linker, "/include:?UpgradeV1LayerParameter@caffe@@YA_NABVV1LayerParameter@1@PAVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??0SigmoidParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??0?$sp_counted_impl_p@V?$ConcatLayer@M@caffe@@@detail@boost@@QAE@PAV?$ConcatLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:?MergeFrom@ContrastiveLossParameter@caffe@@QAEXABV12@@Z")
#pragma comment(linker, "/include:??1?$sp_counted_impl_p@VRNG@Caffe@caffe@@@detail@boost@@UAE@XZ")
#pragma comment(linker, "/include:??_C@_0BE@LDONNDDK@Not?5Implemented?5Yet?$AA@")
#pragma comment(linker, "/include:?descriptor@SolverParameter@caffe@@SAPBVDescriptor@protobuf@google@@XZ")
#pragma comment(linker, "/include:?_Xlen@?$vector@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@V?$allocator@V?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@@2@@std@@IBEXXZ")
#pragma comment(linker, "/include:??$min@N@std@@YAABNABN0@Z")
#pragma comment(linker, "/include:?loss_param@LayerParameter@caffe@@QBEABVLossParameter@2@XZ")
#pragma comment(linker, "/include:??_R2?$SigmoidCrossEntropyLossLayer@N@caffe@@8")
#pragma comment(linker, "/include:?Reshape@?$LossLayer@N@caffe@@UAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:??0?$_Wrap_alloc@V?$allocator@V?$shared_ptr@V?$Layer@N@caffe@@@boost@@@std@@@std@@QAE@XZ")
#pragma comment(linker, "/include:?Backward_cpu@?$SoftmaxLayer@M@caffe@@MAEXABV?$vector@PAV?$Blob@M@caffe@@V?$allocator@PAV?$Blob@M@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_R4?$ImageDataLayer@M@caffe@@6B?$BaseDataLayer@M@1@@")
#pragma comment(linker, "/include:?num@?$ratio@$0CHBA@$00@boost@@2_JB")
#pragma comment(linker, "/include:??_R1A@?0A@EA@?$sp_counted_impl_p@V?$MVNLayer@N@caffe@@@detail@boost@@8")
#pragma comment(linker, "/include:?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z")
#pragma comment(linker, "/include:?is_open@?$basic_fstream@DU?$char_traits@D@std@@@std@@QBE_NXZ")
#pragma comment(linker, "/include:??$forward@$$QAU?$pair@HH@std@@@std@@YA$$QAU?$pair@HH@0@AAU10@@Z")
#pragma comment(linker, "/include:?Forward_gpu@?$LRNLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@0@Z")
#pragma comment(linker, "/include:?BlobShape_reflection_@?A0x5e4fc710@caffe@@3PBVGeneratedMessageReflection@internal@protobuf@google@@B")
#pragma comment(linker, "/include:??_R3logic_error@std@@8")
#pragma comment(linker, "/include:??_R2?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@8")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$ContrastiveLossLayer@M@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?num@DummyDataParameter@caffe@@QBEIH@Z")
#pragma comment(linker, "/include:?rethrow@?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@EBEXXZ")
#pragma comment(linker, "/include:??$_Kfn@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tmap_traits@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$less@H@2@V?$allocator@U?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$0A@@std@@SAABHABU?$pair@$$CBHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z")
#pragma comment(linker, "/include:?InitTrainNet@?$Solver@M@caffe@@QAEXXZ")
#pragma comment(linker, "/include:?weight_decay@V0LayerParameter@caffe@@QBEMH@Z")
#pragma comment(linker, "/include:?mutable_bias_filler@InnerProductParameter@caffe@@QAEPAVFillerParameter@2@XZ")
#pragma comment(linker, "/include:??_C@_0CF@OHOPBIEE@Image?5data?5type?5must?5be?532?5bit?5f@")
#pragma comment(linker, "/include:??$_Uninit_move@PAV?$Blob@N@caffe@@PAV12@PAV12@@std@@YAPAPAV?$Blob@N@caffe@@PAPAV12@00AAU?$_Wrap_alloc@V?$allocator@PAV?$Blob@N@caffe@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z")
#pragma comment(linker, "/include:?type@?$SilenceLayer@M@caffe@@UBEPBDXZ")
#pragma comment(linker, "/include:??_R3?$AbsValLayer@N@caffe@@8")
#pragma comment(linker, "/include:??$checked_delete@V?$ReshapeLayer@N@caffe@@@boost@@YAXPAV?$ReshapeLayer@N@caffe@@@Z")
#pragma comment(linker, "/include:__CT??_R0?AU?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@8??0?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@QAE@ABU012@@Z64")
#pragma comment(linker, "/include:??_G?$SliceLayer@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??_C@_0P@EPIHKHKM@?5?5?5?5?$FLForward?$FN?5?$AA@")
#pragma comment(linker, "/include:?dispose@?$sp_counted_impl_p@V?$Layer@M@caffe@@@detail@boost@@UAEXXZ")
#pragma comment(linker, "/include:??$checked_delete@V?$EuclideanLossLayer@M@caffe@@@boost@@YAXPAV?$EuclideanLossLayer@M@caffe@@@Z")
#pragma comment(linker, "/include:??_7?$sp_counted_impl_p@V?$SilenceLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IAEXXZ")
#pragma comment(linker, "/include:??_R0?AV?$LossLayer@M@caffe@@@8")
#pragma comment(linker, "/include:?get_deleter@?$sp_counted_impl_p@V?$MVNLayer@M@caffe@@@detail@boost@@UAEPAXABVtype_info@@@Z")
#pragma comment(linker, "/include:??_R4?$sp_counted_impl_p@V?$ImageDataLayer@N@caffe@@@detail@boost@@6B@")
#pragma comment(linker, "/include:?root_folder@WindowDataParameter@caffe@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ")
#pragma comment(linker, "/include:??0?$SoftmaxWithLossLayer@N@caffe@@QAE@ABVLayerParameter@1@@Z")
#pragma comment(linker, "/include:??$swap@PAURep@?$RepeatedField@_J@protobuf@google@@@std@@YAXAAPAURep@?$RepeatedField@_J@protobuf@google@@0@Z")
#pragma comment(linker, "/include:??_D?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@QAEXXZ")
#pragma comment(linker, "/include:??$_Val_type@PAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@@std@@YAPAV?$shared_ptr@V?$Blob@M@caffe@@@boost@@PAV12@@Z")
#pragma comment(linker, "/include:?has_pad_w@PoolingParameter@caffe@@QBE_NXZ")
#pragma comment(linker, "/include:??_C@_0FL@BLKDLFII@E?3?2deepLearningProject?2mini?9caff@")
#pragma comment(linker, "/include:?memory_data_param@V1LayerParameter@caffe@@QBEABVMemoryDataParameter@2@XZ")
#pragma comment(linker, "/include:??0?$SGDSolver@N@caffe@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z")
#pragma comment(linker, "/include:?Backward_gpu@?$EuclideanLossLayer@N@caffe@@MAEXABV?$vector@PAV?$Blob@N@caffe@@V?$allocator@PAV?$Blob@N@caffe@@@std@@@std@@ABV?$vector@_NV?$allocator@_N@std@@@4@0@Z")
#pragma comment(linker, "/include:??_G?$Solver@N@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??0?$_Vb_val@V?$allocator@_N@std@@@std@@QAE@$$QAV01@@Z")
#pragma comment(linker, "/include:?WriteInt32ToArray@WireFormatLite@internal@protobuf@google@@SAPAEHHPAE@Z")
#pragma comment(linker, "/include:??_C@_0CC@DKPIBKCJ@Check?5failed?3?5ShapeEquals?$CIproto?$CJ@")
#pragma comment(linker, "/include:??$_Rechecked@PAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@PAV12@@std@@YAAAPAV?$shared_ptr@V?$Filler@N@caffe@@@boost@@AAPAV12@PAV12@@Z")
#pragma comment(linker, "/include:?SerializeWithCachedSizes@BlobProtoVector@caffe@@UBEXPAVCodedOutputStream@io@protobuf@google@@@Z")
#pragma comment(linker, "/include:?FillerParameter_VarianceNorm_descriptor_@?A0x5e4fc710@caffe@@3PBVEnumDescriptor@protobuf@google@@B")
#pragma comment(linker, "/include:??_R0?AU?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@8")
#pragma comment(linker, "/include:?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B")
#pragma comment(linker, "/include:??_G?$MemoryDataLayer@M@caffe@@UAEPAXI@Z")
#pragma comment(linker, "/include:??$caffe_rng_uniform@M@caffe@@YAXHMMPAM@Z")
#pragma comment(linker, "/include:??0SPPParameter@caffe@@QAE@ABV01@@Z")
#pragma comment(linker, "/include:??_R4?$SigmoidCrossEntropyLossLayer@M@caffe@@6B@")
#pragma comment(linker, "/include:??_R2ConcatParameter@caffe@@8")
#pragma comment(linker, "/include:??1?$_Tree_buy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@QAE@XZ")

#endif // LINK_ALL_SYMBOLS_H_
